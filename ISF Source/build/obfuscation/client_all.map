com.isf.app.controllers.MenuControlManager -> com.isf.app.l11lITTI.Tl1l11IlIITT:
    com.isf.app.controllers.MenuControlManager ourInstance -> IT11TT1lIll1ITIl
    boolean hasControl -> ITI1llTTI1lITl
    com.isf.app.view.listeners.MenuListener ml -> TIITI1lTlTl1Il11
    int lag -> lI1I1T1ITTl1llIT
    int origLag -> IlITlTTTl11Il1I
    boolean awake -> TTl1TITI1l1Il1lI
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    com.isf.app.controllers.MenuControlManager getInstance() -> TTl1TITI1l1Il1lI
    void <init>() -> <init>
    boolean menuHasControl() -> IITTlT11lII1T1ll
    void setMenuHasControl(boolean) -> ITI1llTTI1lITl
    void setMenuListener(com.isf.app.view.listeners.MenuListener) -> TT1lIT1ll1ITIIl1
    void doCleanUp() -> lI1I1T1ITTl1llIT
    void pollCleanup() -> IlITlTTTl11Il1I
    void resetAwake() -> IT11TT1lIll1ITIl
    int getLag() -> l1IlTT1lITIl1IT1
    void setLagBy(int) -> TT1lIT1ll1ITIIl1
    void <clinit>() -> <clinit>
com.isf.app.controllers.ThumbContentManager -> com.isf.app.l11lITTI.Il1TI1lIT1lT:
    boolean canSelectMore(java.lang.String) -> TT1lIT1ll1ITIIl1
com.isf.app.exception.NoDataFoundException -> com.isf.app.I11lIlTT.l1IlIlTI1T1T:
com.isf.app.models.CatalougeTableModel -> com.isf.app.l1IT1lTI.l1IlIlTI1T1T:
    void <init>(java.util.Vector) -> <init>
    int getRowCount() -> getRowCount
    int getColumnCount() -> getColumnCount
    java.lang.Object getValueAt(int,int) -> getValueAt
    void fireTableDataChanged() -> fireTableDataChanged
    void fireTableRowsInserted(int,int) -> fireTableRowsInserted
    java.lang.Class getColumnClass(int) -> getColumnClass
    java.util.Vector getData() -> l1lT1IlI1IlT1TIT
    boolean isCellEditable(int,int) -> isCellEditable
    void setValueAt(java.lang.Object,int,int) -> setValueAt
    void addElement(com.isf.app.models.CatalougeTextDataObject) -> TT1lIT1ll1ITIIl1
    void resetData() -> IlIT1lT1TI1IlT1l
com.isf.app.models.CatalougeTextDataObject -> com.isf.app.l1IT1lTI.lI1lTIIlT1T1:
    java.util.Hashtable headerValues -> IlIT1lT1TI1IlT1l
    java.lang.String result -> II11llTI1TlTITl1
    java.lang.String temp -> T1TlITlIl11I1TIl
    java.lang.String displayType -> Il1II1TlT1llTI1T
    java.lang.String textCode -> lITTlIlT1IlI1T
    int LCON -> ITl1I11TIlTlTlI1
    int RCON -> T11I1Tll1IllIITT
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void setValue(java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    java.lang.String getName() -> getName
    int getSize() -> getSize
    java.lang.String getValue() -> getValue
com.isf.app.models.ImageThumbData -> com.isf.app.l1IT1lTI.Tl1l11IlIITT:
    java.lang.String header -> lT1lITllTTII111I
    java.lang.String label -> label
    java.lang.String photoid -> IlTT11IT1ITI1lll
    java.lang.String size -> TIl1T1IlT1IIl1lT
    java.lang.String title -> title
    java.lang.String digitalid -> I1TTT1IIlTIll1l
    javax.swing.ImageIcon ii -> lllITTIlTTII1111
    java.lang.String filesize -> IITll1lI11TlTTI
    java.lang.String type -> type
    void <init>() -> <init>
    java.lang.String getHeader() -> getHeader
    javax.swing.ImageIcon getIcon() -> II11llTI1TlTITl1
    java.lang.String getLabel() -> getLabel
    java.lang.String getPhotoTitle() -> T1TlITlIl11I1TIl
    java.lang.String getPhotoIdentificationNumber() -> Il1II1TlT1llTI1T
    java.lang.String getArchivalFileSize() -> lITTlIlT1IlI1T
    void setHeader(java.lang.String) -> setHeader
    void setIcon(javax.swing.ImageIcon) -> TT1lIT1ll1ITIIl1
    void setLabel(java.lang.String) -> setLabel
    void setPhotoIdentificationNumber(java.lang.String) -> IlITlTTTl11Il1I
    void setArchivalFileSize(java.lang.String) -> IT11TT1lIll1ITIl
    void setPhotoTitle(java.lang.String) -> TIITI1lTlTl1Il11
    java.lang.String getISFDigitalObjIdentifier() -> ITl1I11TIlTlTlI1
    void setISFDigitalObjIdentifier(java.lang.String) -> TTl1TITI1l1Il1lI
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void setActualSidSize(java.lang.String) -> IITTlT11lII1T1ll
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
com.isf.app.models.InscriptTableData -> com.isf.app.l1IT1lTI.Il1TI1lIT1lT:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    int getSize() -> getSize
com.isf.app.models.PathNode -> com.isf.app.l1IT1lTI.T11ITIIllTl:
    java.lang.String name -> name
    boolean isSelected -> isSelected
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,boolean) -> <init>
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
com.isf.app.models.QueryConstants -> com.isf.app.l1IT1lTI.lIlIITlTT111:
    java.lang.String[] pathStr -> I1TT1IIll1ll1TTI
    boolean flag -> Tll11l1T1TITIlII
    java.lang.String[] corpus -> I1lITT1lTT11lIIl
    java.lang.String[] medium -> TTITl1lIllI1TI11
    java.lang.String[] findsite -> ITlT1IITl11l1lTI
    java.lang.String[] timeperiod -> l1TlT1T1IlIII1Tl
    java.lang.String[] language -> TTT11I1lI1llTIIl
    java.lang.String[] script -> ITlT1lll1IITI1T1
    java.lang.String[] collectionowner -> Il11lTlITT1IlIT
    void <init>() -> <init>
    int getStringIndex(java.lang.String) -> l1IllT11TIIT1ITl
    java.lang.String getQuery() -> getQuery
    void setFlag(boolean) -> l1IlTT1lITIl1IT1
    java.lang.String getClause(java.lang.String,com.isf.app.models.PathNode[][],boolean) -> TT1lIT1ll1ITIIl1
    boolean isQuerySelected() -> lT1lITllTTII111I
    void <clinit>() -> <clinit>
com.isf.app.models.SpatialListImageObject -> com.isf.app.l1IT1lTI.Il1TlIT1lTI1:
    java.lang.String textView -> TIl1TTIIT11I1lll
    java.lang.String title -> title
    javax.swing.ImageIcon textViewImage -> llITlIlTI11T11IT
    java.lang.String indexMapName -> IT11TTIllIIl1T1l
    javax.swing.ImageIcon indexMapImage -> TIlTl1I1Il11TIlT
    void <init>() -> <init>
    void setTextView(java.lang.String) -> l1lT1IlI1IlT1TIT
    java.lang.String getTextView() -> IlTT11IT1ITI1lll
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setTextViewImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    javax.swing.ImageIcon getTextViewImage() -> TIl1T1IlT1IIl1lT
    void setIndexMapName(java.lang.String) -> IlIT1lT1TI1IlT1l
    java.lang.String getIndexMapName() -> I1TTT1IIlTIll1l
com.isf.app.models.TextPublicationObject -> com.isf.app.l1IT1lTI.l1lIl1TTTI1I:
    java.lang.String text -> text
    java.lang.String pre -> llT1lIITlIT11IT1
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String toString() -> toString
com.isf.app.models.ThumbData -> com.isf.app.l1IT1lTI.TTl11llIITI:
    java.lang.String getHeader() -> getHeader
    javax.swing.ImageIcon getIcon() -> II11llTI1TlTITl1
    java.lang.String getLabel() -> getLabel
    java.lang.String getPhotoIdentificationNumber() -> Il1II1TlT1llTI1T
    java.lang.String getISFDigitalObjIdentifier() -> ITl1I11TIlTlTlI1
    java.lang.String getPhotoTitle() -> T1TlITlIl11I1TIl
    java.lang.String getArchivalFileSize() -> lITTlIlT1IlI1T
    java.lang.String getType() -> getType
com.isf.app.models.ThumbHeader -> com.isf.app.l1IT1lTI.IllTIT1l1IT1:
    com.isf.app.view.controls.TrimmedIconButton arrow -> T11TlTlTIlIlI1I
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    boolean selected -> selected
    void <init>(java.lang.String) -> <init>
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
com.isf.app.models.TreeChild -> com.isf.app.l1IT1lTI.l1TI11ITTIll:
    java.lang.Object object -> object
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    boolean isLeaf() -> isLeaf
    java.lang.String toString() -> toString
com.isf.app.models.TreeParent -> com.isf.app.l1IT1lTI.IllTIIlT11T:
    java.util.Vector childs -> TTIlIIlTI1l11lT
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    void addChild(com.isf.app.models.TreeChild) -> TT1lIT1ll1ITIIl1
    com.isf.app.models.TreeChild getChildAt(int) -> l1IlTT1lITIl1IT1
    boolean isLeaf() -> isLeaf
    java.lang.String toString() -> toString
    void addPath(java.lang.Object[]) -> TT1lIT1ll1ITIIl1
com.isf.app.utils.CacheEntry -> com.isf.app.llIT1TI.lI1lTIIlT1T1:
    int accessNo -> lITTT1lIlI1lTI
    java.lang.String fileName -> fileName
    void <init>(java.lang.String) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.isf.app.utils.CacheManagerObject -> com.isf.app.llIT1TI.Tl1l11IlIITT:
    int folderSize -> T1TllIll1T1II1IT
    java.util.Vector entries -> entries
    com.isf.app.utils.CacheEntry lastEdited -> ITlTTIlII11T1ll1
    com.isf.app.utils.CacheManagerObject cmo -> TITlT1lIlTI1l1I
    java.lang.String[] ext -> IT1lTll1IT1lII1T
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    com.isf.app.utils.CacheManagerObject getInstance() -> I1TT1IIll1ll1TTI
    int getFolderLength(java.io.File) -> TT1lIT1ll1ITIIl1
    void storeToCache(java.lang.Object,java.lang.Object) -> TT1lIT1ll1ITIIl1
    void updateData() -> TTITl1lIllI1TI11
    void updateCacheEntries$5d527811() -> a
    java.lang.Object retrieveFromCache(java.lang.Object) -> IlITlTTTl11Il1I
    java.lang.Object readData(java.lang.Object) -> IT11TT1lIll1ITIl
    boolean isCached(java.lang.Object) -> TIITI1lTlTl1Il11
    void removeFromCache(java.lang.Object) -> TTl1TITI1l1Il1lI
    java.io.FileInputStream getFileInputStream(java.lang.Object) -> IITTlT11lII1T1ll
    void <clinit>() -> <clinit>
com.isf.app.utils.CatalougeDataManager -> com.isf.app.llIT1TI.Il1TI1lIT1lT:
    java.lang.String range -> IllTT1IITl11lT1I
    com.isf.app.utils.CacheManagerObject cmo -> TITlT1lIlTI1l1I
    java.lang.ThreadGroup tg -> I1TTlI1IT1l1lIlT
    int count -> count
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void setRange(java.lang.String) -> II11llTI1TlTITl1
com.isf.app.utils.CatalougeObserver -> com.isf.app.llIT1TI.T11ITIIllTl:
    com.isf.app.view.listeners.ABListener abl -> T11IITlllTT1IlI1
    int count -> count
    void <clinit>() -> <clinit>
com.isf.app.utils.ClickThread -> com.isf.app.llIT1TI.lIlIITlTT111:
    com.isf.app.view.gui.ObjectCellRenderer or -> l11TTIl11lITIlIT
    void <init>(com.isf.app.view.gui.ObjectCellRenderer) -> <init>
    void run() -> run
com.isf.app.utils.DataStructureFactory -> com.isf.app.llIT1TI.Il1TlIT1lTI1:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    com.isf.app.utils.XmlConverter getConverter(java.lang.String) -> IlTT11IT1ITI1lll
    void <clinit>() -> <clinit>
com.isf.app.utils.Downloader -> com.isf.app.llIT1TI.l1lIl1TTTI1I:
    long len -> Il1I1llTTlI1TIT
    long dsize -> IIllII1TlTTT11l1
    java.awt.Frame parent -> l1lTlT11ITlI1IIT
    long noThreads -> ll1TIIIT1lT1TIl1
    long chunksize -> TIT1ITlI1lIl1lT1
    long leftchunk -> TlII1ITllTlIT
    java.lang.String file -> file
    java.lang.ThreadGroup tg -> I1TTlI1IT1l1lIlT
    java.lang.String ext -> TIIlT111IITTll1l
    org.apache.log4j.Logger logger -> logger
    java.lang.String downDir -> ITTT11lT1lIllII
    void <init>(java.lang.String,java.lang.String,java.awt.Frame) -> <init>
    void run() -> run
    void <clinit>() -> <clinit>
com.isf.app.utils.EventDispatcher -> com.isf.app.llIT1TI.TTl11llIITI:
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    java.awt.event.ActionEvent ae -> lIT1T1lIlT1ITIl
    void <init>(java.awt.event.ActionListener,java.awt.event.ActionEvent) -> <init>
    void run() -> run
com.isf.app.utils.FetchImageThread -> com.isf.app.llIT1TI.IllTIT1l1IT1:
    com.isf.app.view.gui.ImageConsumer parent -> ITlIIl1TT1Tl1lI
    java.lang.String details -> Il1TTlI1lIIlT1T
    int index -> index
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>(com.isf.app.view.gui.ImageConsumer,java.lang.String,int) -> <init>
    void run() -> run
com.isf.app.utils.GeneralMenuManager -> com.isf.app.llIT1TI.l1TI11ITTIll:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    boolean isGMBClicked -> IITlTllI1TTI11l
    boolean hasExited -> TIlll1TI1lITT1I
    void <init>() -> <init>
    void performExit(javax.swing.JMenuItem,boolean) -> TT1lIT1ll1ITIIl1
    boolean access$000() -> access$000
    void <clinit>() -> <clinit>
com.isf.app.utils.GeneralMenuManager$1 -> com.isf.app.llIT1TI.IllTIIlT11T:
    javax.swing.JMenuItem val$comp -> l1Il1TTIITIl1Tl
    void <init>(javax.swing.JMenuItem) -> <init>
    void run() -> run
com.isf.app.utils.GeneralXmlConverter -> com.isf.app.llIT1TI.TllIII11T1Tl:
    java.util.Vector main -> I1ll11TlTIITlT1I
    java.lang.String errMsg -> IlI1Il1T1TlTITl1
    java.lang.String sccMsg -> TI1T1llllTII1IT1
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void skippedEntity(java.lang.String) -> skippedEntity
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
com.isf.app.utils.ISFKeyEventTracker -> com.isf.app.llIT1TI.ITl11lI1ITTl:
    isf.controls.controllers.KeyProcessManager processManager -> Il1Tl1IT1T1IlTIl
    void <init>() -> <init>
    void dispatchEvent(java.awt.AWTEvent) -> dispatchEvent
com.isf.app.utils.InitializationXmlConverter -> com.isf.app.llIT1TI.I1TTIllTlI:
    java.util.Vector textpub -> llTIT11ITl1I1TlI
    com.isf.app.models.TreeParent top -> llll1IITTT1IT1I1
    java.util.Vector root -> I1TTlTl11llT1III
    org.apache.log4j.Logger logger -> logger
    java.lang.String[] name -> IT11l1lTIlII1TTl
    com.isf.app.models.TreeParent[] tp -> IT11l1lTTI1lTIlI
    int c -> c
    java.lang.String[] a -> ITIlTITl111TlIl
    com.isf.app.models.TreeParent temp -> TIl1TT1lTI1I1Ill
    java.lang.String session -> I1Tlll1TTTI1Il1I
    java.lang.String errMsg -> IlI1Il1T1TlTITl1
    java.lang.String sccMsg -> TI1T1llllTII1IT1
    void <init>() -> <init>
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void skippedEntity(java.lang.String) -> skippedEntity
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
com.isf.app.utils.InscriptComparator -> com.isf.app.llIT1TI.I11IlTlI1TlT:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
com.isf.app.utils.MetaDataXmlConverter -> com.isf.app.llIT1TI.l1ITTl1IlTI1:
    java.util.Vector main -> I1ll11TlTIITlT1I
    java.util.Vector va -> lT1TlTIlIlT1I1I1
    java.util.Vector nt -> l1ll1TTIIl1IITT
    java.util.Hashtable ht -> ht
    int c -> c
    java.lang.String ntKey -> IT11TT1TI1IllllI
    java.lang.String vaKey -> IT1TlTl1I1TIlIl
    java.lang.String img -> IT1IllT1II11llTT
    java.util.Vector vector -> vector
    java.lang.String tempNtKey -> llI1T1IT1T1TIllI
    java.lang.String sccMsg -> TI1T1llllTII1IT1
    java.lang.String errMsg -> IlI1Il1T1TlTITl1
    java.lang.String count -> TTIlTI1lI1T1l1lI
    java.lang.String listkeys -> lI11l1lIlT1TTTII
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void skippedEntity(java.lang.String) -> skippedEntity
com.isf.app.utils.PopulateThread -> com.isf.app.llIT1TI.IlT1TI1llTI:
    java.util.Vector vector -> vector
    com.isf.app.view.containers.DesktopViewer vd -> IT1lTTI11llTIl1I
    void <init>(java.util.Vector,com.isf.app.view.containers.DesktopViewer) -> <init>
    void run() -> run
com.isf.app.utils.SpatialXmlConverter -> com.isf.app.llIT1TI.T1lTlIIlT1I:
    java.util.Vector main -> I1ll11TlTIITlT1I
    java.lang.String photoid -> IlTT11IT1ITI1lll
    java.lang.String textview -> TTII1lllT1T1IlI
    java.lang.String mainpubno -> IlTI11IlT1lTl1IT
    java.lang.String textdestitle -> TIll1l1ITIIlT11T
    byte[] data -> data
    java.lang.String errMsg -> IlI1Il1T1TlTITl1
    java.lang.String sccMsg -> TI1T1llllTII1IT1
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void skippedEntity(java.lang.String) -> skippedEntity
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
com.isf.app.utils.TextDivisionXmlConverter -> com.isf.app.llIT1TI.TTITllII1l11:
    java.util.Vector main -> I1ll11TlTIITlT1I
    java.util.Hashtable div -> llI1TTI1Il11lITT
    java.lang.String sscode -> Tl1Tl11ITl1IlTII
    java.lang.String textdivname -> I1TlTIl1ITTl1lI
    java.lang.String textdivsubdiv -> I1TTl1TlIlT1l1II
    java.lang.String mtpno -> l11TlIlTITI1IT1l
    java.lang.String textdesctitle -> T1TlI11TITIlIll1
    java.lang.String isfAssignedTextNo -> lIlI1T1T1llT1ITI
    java.lang.String textDescription -> lTTTl11lI1IlII1T
    java.lang.String textMuseumNo -> TTlTIIllT11IlI1
    java.util.Vector result -> IlT1TTI1I1TlIll1
    java.util.Vector textdivVector -> TllIITlI1l1TI1T1
    java.lang.String topTitle -> T1l1I1IITlT1ITll
    java.lang.String sccMsg -> TI1T1llllTII1IT1
    java.lang.String errMsg -> IlI1Il1T1TlTITl1
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void skippedEntity(java.lang.String) -> skippedEntity
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
com.isf.app.utils.XmlConverter -> com.isf.app.llIT1TI.TI1l1TlTIlI:
    void <init>() -> <init>
    java.lang.Object getDataStructure() -> llITlIlTI11T11IT
    java.lang.String getErrMsg() -> IT11TTIllIIl1T1l
    java.lang.String getSccMsg() -> TIlTl1I1Il11TIlT
    java.lang.String getCount() -> llT1lIITlIT11IT1
    java.lang.String getListKeys() -> T11TlTlTIlIlI1I
com.isf.app.view.containers.ButtonsPanel -> com.isf.app.view.containers.lI1lTIIlT1T1:
    isf.controls.view.controls.InscriptButton begin -> T1T1TlIlIIT1I1ll
    isf.controls.view.controls.InscriptButton newb -> IIlT1TT1l1IIl1Tl
    void <init>() -> <init>
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.CatalougePanel -> com.isf.app.view.containers.Tl1l11IlIITT:
    java.util.Vector data -> TlTI11TIT1lIIll
    java.util.Hashtable mainData -> TIl1l1I1TITllIT
    java.util.Vector ranges -> ranges
    java.lang.String textcode -> ITl1TlII1TTllI
    java.lang.String tempRange -> l11lIIT1TI1lITTl
    java.lang.String range -> IllTT1IITl11lT1I
    boolean flag -> Tll11l1T1TITIlII
    boolean start -> l11I1TTlTIlIlT1I
    java.util.HashMap rangesData -> IIII1lT1lT1ll1TT
    int currentRange -> TITIlT111IllT1lI
    int totalRecords -> Tl1111TllITTIIlI
    int max -> max
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    isf.controls.utils.ResolutionManager rm -> IIl1lTI1TIT11llT
    int width -> width
    double[] r -> I1lT1lTITIlT1Il1
    javax.swing.JPanel jPanel1 -> TT1lT1I1I1lITlIl
    javax.swing.JButton jButton1 -> I1l1IIITll1l1TTT
    javax.swing.JPanel jPanel2 -> TIll1IT1TlTI1lI
    javax.swing.JScrollPane jScrollPane1 -> Ill1ITI1ITT1l1Tl
    javax.swing.JScrollPane jScrollPane2 -> lTllITIl1111TTII
    com.isf.app.view.controls.InscriptTable jTable3 -> Il1TTTI1l1TIlIl1
    isf.controls.view.controls.InscriptButton head -> IT1lll1TITI11ITl
    isf.controls.view.containers.InscriptTextPane cat -> I1TTIll1TIllI11T
    com.isf.app.view.controls.CatalougeButton next -> TTTI1TIl1l11IlIl
    com.isf.app.view.controls.CatalougeButton back -> TTIl11IITI1l1llT
    javax.swing.JPanel jPanel3 -> TIlTlTlT11I1II1l
    javax.swing.JPanel jPanel4 -> TIlTlT1ITl1lI1I
    javax.swing.JPanel jPanel5 -> IIlIlTTI1TTl1l1
    javax.swing.JPanel jPanel6 -> llTI1I11llTITIT
    javax.swing.JPanel jPanel7 -> l11T1TIlIlIlTIT
    javax.swing.JPanel jPanel8 -> Tl11TI1T1IIIlTll
    javax.swing.JPanel jPanel9 -> T1IlT1ITll1Il1TI
    javax.swing.JButton jButton3 -> IT1l1I1TT1TlIllI
    javax.swing.ImageIcon ti1 -> TIl1lT1IITl1I1Tl
    javax.swing.JLabel a1 -> ITl1lTT1llI1TII1
    com.isf.app.models.CatalougeTableModel ctm -> IllI1TTT1lIITl1
    com.isf.app.utils.CatalougeDataManager cdm -> lIl1IlTIl1TT1T1I
    com.isf.app.view.controls.CatalogueCellEditor ce -> TII1l1TIllI1lTT
    int selectedInt -> IlTllITI1I1TlT1
    int fontsize -> III1Tl1lTllTIT11
    void <init>() -> <init>
    void populateData(java.util.Vector,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void switchOffAnchors() -> ITTTT11lIIIlll11
    java.lang.String buildCatalougeData(java.lang.String,java.util.Hashtable) -> TT1lIT1ll1ITIIl1
    java.lang.String buildDubinData(java.lang.String,java.util.Hashtable) -> ITI1llTTI1lITl
    java.lang.String getString(java.lang.Object,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean isValid(java.lang.String) -> I1TTT1IIlTIll1l
    void reset() -> reset
    java.util.Vector getNextData() -> TITlT1lIlTI1l1I
    javax.swing.ImageIcon access$000(com.isf.app.view.containers.CatalougePanel) -> TT1lIT1ll1ITIIl1
    java.lang.String access$102(com.isf.app.view.containers.CatalougePanel,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean access$200(com.isf.app.view.containers.CatalougePanel) -> ITI1llTTI1lITl
    javax.swing.JScrollPane access$300(com.isf.app.view.containers.CatalougePanel) -> l1IlTT1lITIl1IT1
    java.lang.String access$100(com.isf.app.view.containers.CatalougePanel) -> lI1I1T1ITTl1llIT
    java.util.Hashtable access$400(com.isf.app.view.containers.CatalougePanel) -> IlITlTTTl11Il1I
    isf.controls.view.containers.InscriptTextPane access$500(com.isf.app.view.containers.CatalougePanel) -> IT11TT1lIll1ITIl
com.isf.app.view.containers.CatalougePanel$1 -> com.isf.app.view.containers.Il1TI1lIT1lT:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.CatalougePanel$2 -> com.isf.app.view.containers.l11lIlTTI1TI:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.CatalougePanel$3 -> com.isf.app.view.containers.T11ITIIllTl:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.CatalougePanel$4 -> com.isf.app.view.containers.lIlIITlTT111:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.isf.app.view.containers.CatalougePanel$5 -> com.isf.app.view.containers.Il1TlIT1lTI1:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.CatalougePanel$6 -> com.isf.app.view.containers.l1lIl1TTTI1I:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.CatalougePanel$7 -> com.isf.app.view.containers.TTl11llIITI:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.CatalougePanel$8 -> com.isf.app.view.containers.IllTIT1l1IT1:
    com.isf.app.view.containers.CatalougePanel this$0 -> lTI1ITIlIll1T11T
    void <init>(com.isf.app.view.containers.CatalougePanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.DesktopViewer -> com.isf.app.view.containers.l1TI11ITTIll:
    isf.controls.view.containers.ViewDesktop vd -> TT1ITllll1TII1I1
    isf.controls.view.controls.SidDesktop activexPanel -> TTI1TIlllII1T1l1
    isf.controls.view.containers.ISFSplitPane jp -> T1Tl1Tl1TIlIlII
    java.awt.Frame parent -> l1lTlT11ITlI1IIT
    int index -> index
    org.apache.log4j.Logger logger -> logger
    void <init>(java.awt.Frame) -> <init>
    void addDesktopData(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    void addDummy(java.lang.String) -> I1TT1IIll1ll1TTI
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void putImage(isf.controls.models.DesktopDataObject) -> ITI1llTTI1lITl
    void reset() -> reset
    void putImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.ForgotPasswordWindow -> com.isf.app.view.containers.IllTIIlT11T:
    javax.swing.JButton title -> l1TITTIIlI11Tll
    javax.swing.ImageIcon titleIcon -> TIllITl1lTI1T1I1
    com.isf.app.view.containers.ForgotPwdLeftPanel left -> TlIllTT11ITl1I1I
    com.isf.app.view.containers.ForgotPwdRightPanel right -> TlI1lIIT1TlTI11l
    org.apache.log4j.Logger logger -> logger
    double[] r -> I1lT1lTITIlT1Il1
    void <init>() -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void <clinit>() -> <clinit>
com.isf.app.view.containers.ForgotPwdLeftPanel -> com.isf.app.view.containers.TllIII11T1Tl:
    javax.swing.JLabel userNameLB -> ITI11llTll1I1ITT
    javax.swing.JLabel confirmLB -> TlII1TTTIl11lIl1
    javax.swing.JLabel pwdLB -> IIlITllT11I1T1Tl
    javax.swing.JLabel newpwdLB -> TITlTIl1I11lTl1I
    javax.swing.JLabel changeLB -> l1I1TIT1lIllT1IT
    javax.swing.JTextField userNameT -> T1ITllTI11l1ITIl
    javax.swing.JPasswordField pwdT -> lIITIl1I1lTTl11T
    javax.swing.JPasswordField newpwdT -> TI1l1TIlIlTlT1I1
    javax.swing.JPasswordField confirmT -> ITIlTT111llI1TIl
    com.isf.app.view.controls.TrimmedIconButton confirmBTL -> TT1T1IllITlI1l1I
    com.isf.app.view.controls.TrimmedIconButton cancelBTL -> IIITlTllIT1Tl1
    isf.controls.utils.ResolutionManager resManager -> TTIl1l1lTI1I1lIT
    double[] r -> I1lT1lTITIlT1Il1
    javax.swing.ImageIcon titleIcon -> TIllITl1lTI1T1I1
    javax.swing.ImageIcon orIcon -> II11l1TTTIIllTl1
    int width -> width
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.ForgotPwdRightPanel -> com.isf.app.view.containers.ITl11lI1ITTl:
    javax.swing.JLabel useridLB -> TTI1lIIlTTIll11
    javax.swing.JLabel forgotLB -> TTTlIl11llIITI
    javax.swing.JLabel mailLB -> IlTl1lI1TlIITT11
    javax.swing.JTextField useridT -> T1Tl1llIIII11lTT
    javax.swing.JTextField mailT -> TIlllIT1TITlI111
    javax.swing.ImageIcon titleIcon -> TIllITl1lTI1T1I1
    javax.swing.ImageIcon orIcon -> II11l1TTTIIllTl1
    int width -> width
    com.isf.app.view.controls.TrimmedIconButton confirmBTR -> IlTITIl1I1T1lTl
    com.isf.app.view.controls.TrimmedIconButton cancelBTR -> TTTIlllI1I1IlT
    isf.controls.utils.ResolutionManager resManager -> TTIl1l1lTI1I1lIT
    double[] r -> I1lT1lTITIlT1Il1
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.FrameTitlePanel -> com.isf.app.view.containers.IT1llT1I1lTI:
    java.awt.Color bgColor -> llI1l11TTITTIlI
    javax.swing.JButton viewName -> I1Tll1I1IlTTIl1T
    javax.swing.JButton title -> l1TITTIIlI11Tll
    void <init>() -> <init>
    javax.swing.JButton createButton() -> createButton
    java.lang.String createText(java.lang.String) -> Tll11l1T1TITIlII
    void setViewName(java.lang.String) -> I1lITT1lTT11lIIl
    void setTitle(java.lang.String) -> setTitle
    void <clinit>() -> <clinit>
com.isf.app.view.containers.IMapGP -> com.isf.app.view.containers.I1TTIllTlI:
    boolean dontshow -> ITITT1lTll11I1Il
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    java.awt.Point loc -> lTTlITlITI1111Il
    int current -> current
    javax.swing.ImageIcon ic1 -> llTI1111TIIllTIT
    javax.swing.ImageIcon ic2 -> I11TTlTl1ITIlI1l
    javax.swing.ImageIcon icbtn -> TlTllI1TI1T1II1l
    com.isf.app.view.controls.TrimmedIconButton act -> lITT1TlI1lI1IT1l
    javax.swing.ImageIcon msg -> IT1ITllI1lTI1T1l
    javax.swing.JLabel l -> TTTI11llTlIII1l
    javax.swing.ImageIcon ic3 -> Il1IlTT11TTI1llI
    com.isf.app.view.controls.TrimmedIconButton tb1 -> ITIl1T1lIT11TIll
    com.isf.app.view.controls.TrimmedIconButton tic -> lTTlTII11ll1TII1
    com.isf.app.view.controls.TrimmedIconButton msg1 -> T1IlITlTl1TII1l1
    void <init>() -> <init>
    void showLoading() -> I1TTlI1IT1l1lIlT
    void showMsg(java.awt.event.ActionListener) -> TT1lIT1ll1ITIIl1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.isf.app.view.containers.ImageResultsPanel -> com.isf.app.view.containers.I11IlTlI1TlT:
    java.util.HashMap mainData -> IllTITT111IlIT1l
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    com.isf.app.view.containers.QuickViewGP qvgp -> I1llIlTl1T11TIIT
    com.isf.app.view.containers.ThumbViewerPanel tvp -> III1ITlTT11l1llT
    com.isf.app.view.listeners.ThumbListener tl -> ITll11TTTl1III1l
    java.util.Vector data -> TlTI11TIT1lIIll
    java.lang.String photoid -> IlTT11IT1ITI1lll
    boolean flag -> Tll11l1T1TITIlII
    int xposition -> II11lT1TlIll1TIT
    int yposition -> IT11IlT1lIIlTlT
    java.awt.Point p -> ITTlTI1l1lTIl1I
    java.awt.Point temp -> I1T1l1lITIllITT1
    java.awt.Rectangle old -> llITI11lTlII1T1T
    java.awt.BasicStroke stroke -> lIIT1T1llT1IlTI1
    int width -> width
    double[] r -> I1lT1lTITIlT1Il1
    javax.swing.JPanel jPanel1 -> TT1lT1I1I1lITlIl
    javax.swing.JButton jButton1 -> I1l1IIITll1l1TTT
    javax.swing.JPanel jPanel2 -> TIll1IT1TlTI1lI
    javax.swing.JScrollPane jScrollPane1 -> Ill1ITI1ITT1l1Tl
    int totalRecords -> Tl1111TllITTIIlI
    int currentRange -> TITIlT111IllT1lI
    java.util.HashMap coreRange -> TTll1I1TIIIlTl
    javax.swing.JPanel jPanel3 -> TIlTlTlT11I1II1l
    javax.swing.JPanel jPanel4 -> TIlTlT1ITl1lI1I
    int max -> max
    javax.swing.JButton jButton3 -> IT1l1I1TT1TlIllI
    isf.controls.view.containers.InscriptTextPane cat -> I1TTIll1TIllI11T
    java.lang.String textCode -> lITTlIlT1IlI1T
    java.lang.String queryType -> IllTITI1l1l1TTI1
    java.lang.String sortType -> TI1II11ITll1lTTl
    void <init>() -> <init>
    void showQuickView(com.isf.app.models.ThumbData) -> TT1lIT1ll1ITIIl1
    void headerSelected(com.isf.app.models.ThumbData) -> ITI1llTTI1lITl
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.lang.String buildCatalougeData(java.lang.String,java.util.Hashtable) -> TT1lIT1ll1ITIIl1
    java.lang.String buildDubinData(java.lang.String,java.util.Hashtable) -> ITI1llTTI1lITl
    java.lang.String getString(java.lang.Object,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean isValid(java.lang.String) -> I1TTT1IIlTIll1l
    java.lang.String replaceSark(java.lang.String) -> ITllTI1lTII11l1T
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void reset() -> reset
    void populateData(java.util.Vector,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    java.util.Vector getNextData() -> TITlT1lIlTI1l1I
    void resetSort() -> T11IITlllTT1IlI1
    void sort(java.lang.String) -> TTITl1lIllI1TI11
com.isf.app.view.containers.ImageResultsPanel$1 -> com.isf.app.view.containers.l1ITTl1IlTI1:
    com.isf.app.view.containers.ImageResultsPanel this$0 -> IlTll1IITlI1T11T
    void <init>(com.isf.app.view.containers.ImageResultsPanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.ImageResultsPanel$2 -> com.isf.app.view.containers.IlT1TI1llTI:
    com.isf.app.view.containers.ImageResultsPanel this$0 -> IlTll1IITlI1T11T
    void <init>(com.isf.app.view.containers.ImageResultsPanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.IndexImagePanel -> com.isf.app.view.containers.TIlT1lTIIl:
    double imageScale -> T1I11TIll1TIlTlI
    java.awt.Graphics m_MemG -> lI1IlTTIIll11T1T
    java.awt.Graphics memG -> T1lITIlIl1TI1l1T
    javax.swing.ImageIcon tempImage -> l1TI1TIlIlTl11IT
    java.awt.Image offImg -> T1lIT1llT1IlITI1
    java.awt.Image memImg -> Il11I1lTI1TTTIll
    java.awt.Dimension displayDim -> IIITlTlT1l1Il11T
    java.awt.Dimension imageDim -> llTIT1TIIlI11l1T
    java.awt.Insets ins -> T1IlTTIIIlll1T11
    java.awt.Point start -> T1T1lIlTTllIII
    java.awt.Point end -> l1ITITTlITl11Il1
    int m_nMouseMode -> lIl11IT1TITlI1Tl
    java.awt.Rectangle selectRect -> II1Il1TITl1llTT1
    java.awt.Rectangle imageRect -> lIlI1IITll1TT1T1
    javax.swing.ImageIcon icon -> IlIlII1llT1TT11T
    boolean paint -> TT1ITIllT1l1lI1I
    java.awt.Rectangle actualRect -> I1IT1lT1lTIIllT
    java.awt.Cursor drsel -> ITTI11TlIlll1TI1
    int ax -> ax
    int ay -> ay
    int aw -> TlII1T1Il1lIl1TT
    int ah -> TlI1TTlII1IT11ll
    com.isf.app.view.listeners.ClickListener cl -> l1IlTT1lITIl1IT1
    java.awt.Rectangle r -> r
    org.apache.log4j.Logger logger -> logger
    void reset() -> reset
    void DrawSelectionRectangle() -> l11TTIl11lITIlIT
    void clearAll() -> Il1I1llTTlI1TIT
    void <init>() -> <init>
    void addClickListener(com.isf.app.view.listeners.ClickListener) -> ITI1llTTI1lITl
    void setImage(javax.swing.ImageIcon) -> l1IlTT1lITIl1IT1
    void paint(java.awt.Graphics) -> paint
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void <clinit>() -> <clinit>
com.isf.app.view.containers.IndexMapPanel -> com.isf.app.view.containers.T1lTlIIlT1I:
    com.isf.app.view.containers.FrameTitlePanel ftp -> Tl1llTII1Il11TTI
    com.isf.app.view.containers.IndexImagePanel ip -> TTl1lI1TITllII
    isf.common.view.gui.SpatialListImage spl -> TlIITl1T11ITll1I
    boolean show -> IlT11I1ll1TITIlT
    boolean ready -> I1llIllT1II11TTT
    com.isf.app.view.containers.IMapGP imap -> ITTll1I1T1I1llIT
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
    void addClickListener(com.isf.app.view.listeners.ClickListener) -> ITI1llTTI1lITl
    void reset() -> reset
    void setGlass() -> TIIlT111IITTll1l
    void clearAll() -> Il1I1llTTlI1TIT
    void spatialListImageSelected(isf.common.view.gui.SpatialListImage) -> TT1lIT1ll1ITIIl1
    void setUpImg$d723ca1(javax.swing.ImageIcon) -> a
    java.awt.Rectangle getSelectedPoints() -> ll1TIIIT1lT1TIl1
    isf.common.view.gui.SpatialListImage getSelSpatialListImage() -> III1Tl1lTllTIT11
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void <clinit>() -> <clinit>
com.isf.app.view.containers.InscriptUI -> com.isf.app.view.containers.InscriptUI:
    com.isf.app.view.controls.TrimmedIconButton navim1 -> TII11lTTIll1ITl
    com.isf.app.view.controls.TrimmedIconButton navim2 -> lllTITl1I1ITTI
    com.isf.app.view.controls.TrimmedIconButton navim3 -> IITll1TT11Il1IlT
    com.isf.app.view.controls.TrimmedIconButton navim4 -> lIlTT1l11ITII1lT
    com.isf.app.view.controls.TrimmedIconButton navim5 -> lI1TTT1l1llTI1II
    com.isf.app.view.controls.TrimmedIconButton navim6 -> lTT1llI1I1TlT1II
    com.isf.app.view.controls.TrimmedIconButton navim7 -> TII1ll1l1IlTTIT
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    javax.swing.JMenuBar genmb -> lTlITlT1lII1IT11
    com.isf.app.view.containers.ToolBarPanel navmb -> I1IlT1llIT1Tl1IT
    com.isf.app.view.containers.MainSearchPanel msp -> ITllTT11IllIT1I1
    java.awt.Container con -> T1IT1lTIIIT1l1ll
    com.isf.app.view.containers.CatalougePanel s2 -> TIlIT11l1lIT1ITl
    com.isf.app.view.containers.TextDivisionPanel tdp -> IIIlTTll11I11TlT
    com.isf.app.view.containers.SpatialSearchPanel slp -> lTl1lTTIIIT1l1I
    com.isf.app.view.containers.ImageResultsPanel irp -> II1llIl11TlITTT
    isf.controls.view.containers.TrimmedPanel center -> TIlIl1T1Tl11lITI
    isf.controls.view.containers.TrimmedPanel copyright -> TTIT1llTIl1I1lI
    javax.swing.JLabel cr -> lTTTI11IIll11TlI
    com.isf.app.view.controls.InscriptMenuBar title -> IlTl111llITTIT1I
    com.isf.app.view.containers.DesktopViewer vd -> IT1lTTI11llTIl1I
    com.isf.app.view.containers.LoginUI loginp -> TIllIlT1I1T1TIl1
    isf.controls.view.containers.ISFSplitPane titlehead -> I1IITTT11lTlIll
    com.isf.app.view.containers.ForgotPasswordWindow dialog -> ITIll1TIT111IllT
    java.lang.String sdType -> T1T1IIlI1lT1TlIl
    boolean firstTime -> firstTime
    javax.swing.JPanel jp -> IITTTTllIl11I11l
    com.isf.app.view.controls.GeneralMenu blank -> llI1lIIITTT1l11T
    com.isf.app.view.controls.GeneralMenu session -> TT1ll1lIlIITIT1
    com.isf.app.view.controls.GeneralMenu edu -> TT1I1lTITll1lI1I
    com.isf.app.view.controls.GeneralMenu search -> TIITTlI1llI1lT11
    com.isf.app.view.controls.GeneralMenu bginfo -> lTlTIlIT11ITIl11
    com.isf.app.view.controls.GeneralMenu tools -> l1TIlTITlTI1lI11
    com.isf.app.view.controls.GeneralMenu comm -> IT1TlI1lI1lTTl1I
    com.isf.app.view.controls.GeneralMenu help -> IITT111lTlIIl1lT
    com.isf.app.view.controls.GeneralMenu download -> IT1TlI1TI11ITlll
    com.isf.app.view.controls.GeneralMenuItem newmi -> I1TllIlIl1ITT1T1
    com.isf.app.view.controls.GeneralMenuItem open -> TTl1l1ITIl1Il1IT
    com.isf.app.view.controls.GeneralMenuItem save -> TTIlI111llTlTII
    com.isf.app.view.controls.GeneralMenuItem close -> l11TTT1I1IlIIllT
    com.isf.app.view.controls.GeneralMenuItem print -> lIl1lTITITl1IT1
    com.isf.app.view.controls.GeneralMenuItem start -> TITll11I11ITlTlI
    com.isf.app.view.controls.GeneralMenuItem genInfo -> l11TlTlTI1IlI1TI
    com.isf.app.view.controls.GeneralMenuItem selDB -> II1I1lI1TTll1TTl
    com.isf.app.view.controls.GeneralMenuItem curPage -> T1lITlIT1I11ITll
    com.isf.app.view.controls.GeneralMenuItem contents -> ITlTll1lTTII111I
    com.isf.app.view.controls.GeneralMenuItem index -> Tl11lTl1IIIT1IlT
    com.isf.app.view.controls.GeneralMenuItem keywords -> T11TTlTlIIlIIl11
    com.isf.app.view.controls.GeneralMenuItem fts -> II1lI1Tl1lTITT1l
    com.isf.app.view.controls.GeneralMenuItem lf -> TIllIlITTIT1l111
    com.isf.app.view.controls.GeneralMenuItem email -> TIlI11IlTlI1l1TT
    com.isf.app.view.controls.GeneralMenuItem cws -> Ill1lITlI1TTIT1
    com.isf.app.view.controls.GeneralMenuItem messaging -> l1T1lI1TI1lTTlII
    com.isf.app.view.controls.GeneralMenuItem dnw -> lI11Tl1lTITT1IlI
    com.isf.app.view.controls.GeneralMenuItem ccws -> I1TIllITT1I1l1Tl
    com.isf.app.view.controls.GeneralMenuItem chat -> lI1Il1llITTT1TI
    com.isf.app.view.controls.GeneralMenuItem cp -> II1I1l1TlTTlITl1
    com.isf.app.view.controls.GeneralMenuItem cont -> TTllITTII1l11lI1
    com.isf.app.view.controls.GeneralMenuItem ind -> lIl1ITTIl11TIT1l
    com.isf.app.view.controls.GeneralMenuItem keyw -> TTlTl1l1lIT1III
    com.isf.app.view.controls.GeneralMenuItem images -> TTITII1TIll1l1l1
    com.isf.app.view.controls.GeneralMenuItem cat -> IT1TIllT1TlIl1I1
    com.isf.app.view.controls.GeneralMenuItem imagesAndCat -> I1ll11TTIlIlT1IT
    com.isf.app.view.containers.QueryDefinitionPanel qdp -> l1TIIlTlT11TIlI
    java.awt.Cursor oldCursor -> Ill1I1I1TTlIl1TT
    int lastSelected -> TIl1TIlllI1T11IT
    boolean winMenuClicked -> I11IlT1TllII1TlT
    boolean initData -> I1IlT1lTlIITlT11
    boolean trapEnter -> IlT1II111llTITlT
    java.lang.String logMsg -> ll1lTIlTTI1I1I1T
    java.util.Vector initVector -> IIlllTT11IlTIT
    java.lang.String userName -> userName
    isf.controls.view.containers.TrimmedPanel titlePane -> llTIITT111Il1TIl
    isf.controls.view.containers.TrimmedPanel bodyPane -> IllII1TlT1lTTI1
    boolean collection -> Il1TTl1IT11llTII
    javax.swing.JProgressBar progress -> lTTI1IlllI1I11TT
    isf.controls.controllers.ISFGarbageCollector collector -> Tl1I1I1I1lTlTlTI
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
    void setInitData(java.util.Vector) -> IT11TT1lIll1ITIl
    void actionChanged(java.lang.String,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    void passwordSelectionChanged$552c4e01() -> a
    void forgotSelectionChanged$552c4e01() -> b
    void querySelection(int) -> lI1I1T1ITTl1llIT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void loggedout(java.lang.String) -> ITlT1lll1IITI1T1
    void disconnected() -> Il1TTlI1lIIlT1T
    void raiseError(java.lang.String) -> Il11lTlITT1IlIT
    void objectSelected(com.isf.app.models.TreeChild) -> ITI1llTTI1lITl
    java.lang.String buildKeywords(java.lang.String) -> TIl1TTIIT11I1lll
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void resetToClick() -> IT11l1lTIlII1TTl
    void closeMe() -> IT11l1lTTI1lTIlI
    void setPanelColor(java.awt.Color) -> TT1lIT1ll1ITIIl1
    void resetAll() -> ITIlTITl111TlIl
    void main(java.lang.String[]) -> main
    void changeCursor(int) -> IT11TT1lIll1ITIl
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    boolean trapKeys() -> I1Tlll1TTTI1Il1I
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
    void <clinit>() -> <clinit>
com.isf.app.view.containers.InscriptUI$1 -> com.isf.app.view.containers.TTITllII1l11:
    com.isf.app.view.containers.InscriptUI this$0 -> l1lT1II1llTTITI1
    void <init>(com.isf.app.view.containers.InscriptUI) -> <init>
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.isf.app.view.containers.InscriptUI$2 -> com.isf.app.view.containers.TI1l1TlTIlI:
    com.isf.app.view.containers.InscriptUI this$0 -> l1lT1II1llTTITI1
    void <init>(com.isf.app.view.containers.InscriptUI) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.LoginPanel -> com.isf.app.view.containers.lITIIlTT1l:
    javax.swing.JTextField userNameTF -> II1l11TIlIlT1TTl
    javax.swing.JPasswordField passwordTF -> lIITIIlT111T1Tll
    javax.swing.JLabel loginLB -> IT11lII1ll1TTIlT
    javax.swing.JLabel userNameLB -> ITI11llTll1I1ITT
    javax.swing.JLabel passWordLB -> T1l1IllIT11TTlII
    javax.swing.JLabel empty1 -> TITlTl1TIl11II1l
    javax.swing.JLabel empty2 -> lITTlI1T1I1lI1lT
    javax.swing.JLabel empty3 -> ITTlIllIlT1IT1
    javax.swing.JLabel empty4 -> TllITTl11IIlI11T
    javax.swing.JLabel empty5 -> TllTIlTTIII111l
    com.isf.app.view.controls.TrimmedIconButton enterBT -> II111llT1lITITlT
    com.isf.app.view.controls.TrimmedIconButton exitBT -> l1IlTIlIT11TTIl
    com.isf.app.view.listeners.LoginListener ll -> II1I1IT11lTlTTll
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String option -> ll1T1ITTlIlII1T
    java.awt.Dimension resolution -> lT11l1TllTITI1II
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void addLoginListener(com.isf.app.view.listeners.LoginListener) -> TT1lIT1ll1ITIIl1
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void validations(java.lang.String) -> llT1lIITlIT11IT1
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.LoginUI -> com.isf.app.view.containers.ITTII1T1l1ll:
    com.isf.app.view.containers.LoginPanel loginPanel -> TllT1lII11lITTI
    com.isf.app.view.containers.PasswordPanel passwordPanel -> TIIl111lITITllT1
    javax.swing.JLabel inscriptLB -> lTlI1Il11TTlI1IT
    com.isf.app.view.listeners.LoginListener ll -> II1I1IT11lTlTTll
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.MainSearchPanel -> com.isf.app.view.containers.TlIT11IITll:
    com.isf.app.view.containers.QueryDefinitionPanel qdp -> l1TIIlTlT11TIlI
    com.isf.app.view.containers.QueryMenuPanel qmu -> TIllIl1ITTTI111l
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    com.isf.app.view.listeners.MainSearchListener mainSearchListener -> TI1lII1lTllT11IT
    void <init>(java.awt.Insets) -> <init>
    void addMainSearchListener(com.isf.app.view.listeners.MainSearchListener) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.PasswordPanel -> com.isf.app.view.containers.IT11TIll1lIT:
    javax.swing.JPanel actionDeck -> llIl1T1Tl1ITTII1
    javax.swing.JLabel changeLB -> l1I1TIT1lIllT1IT
    com.isf.app.view.listeners.LoginListener ll -> II1I1IT11lTlTTll
    java.lang.String option -> ll1T1ITTlIlII1T
    java.awt.Dimension resolution -> lT11l1TllTITI1II
    void <init>() -> <init>
    void addLoginListener(com.isf.app.view.listeners.LoginListener) -> TT1lIT1ll1ITIIl1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    java.lang.String getTextLabel() -> llI1TTI1Il11lITT
com.isf.app.view.containers.PasswordPanel$1 -> com.isf.app.view.containers.I1IIlT1TT1ll:
    com.isf.app.view.containers.PasswordPanel this$0 -> ll1T1TTIIII1lTl1
    void <init>(com.isf.app.view.containers.PasswordPanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.QueryDefinitionPanel -> com.isf.app.view.containers.TII1lITl1lT1:
    isf.controls.view.controls.InscriptButton jl8 -> TT1TTIlIl1llI1I1
    com.isf.app.view.containers.ButtonsPanel bp -> llT1ITTIIl1l11TI
    com.isf.app.view.containers.TextPanel textPanel -> TTI11l1ITlIlT1lI
    com.isf.app.view.containers.QueryScrollPane qsp -> lT11IlTlTITlII11
    com.isf.app.view.containers.QueryMenuPanel qspParent -> TT1T1IlITIlIll11
    javax.swing.ImageIcon icon -> IlIlII1llT1TT11T
    java.awt.event.MouseListener ml -> I11llTIT1IlT1lTI
    javax.swing.JPanel jpanel -> TllIITIT1lIlT11
    com.isf.app.view.listeners.MainSearchListener mainSearchListener -> TI1lII1lTllT11IT
    void <init>() -> <init>
    void <init>(com.isf.app.view.containers.QueryMenuPanel) -> <init>
    void addMainSearchListener(com.isf.app.view.listeners.MainSearchListener) -> TT1lIT1ll1ITIIl1
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void reset() -> reset
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void setVisible(boolean) -> setVisible
com.isf.app.view.containers.QueryDefinitionPanel$1 -> com.isf.app.view.containers.I11TllT1TlII:
    com.isf.app.view.containers.QueryDefinitionPanel this$0 -> TITllI1IT1T1Ill
    void <init>(com.isf.app.view.containers.QueryDefinitionPanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.QueryMenuPanel -> com.isf.app.view.containers.l11TT1lTIlII:
    com.isf.app.view.containers.QueryScrollPane pane -> l1T1I1llITI1TTlI
    java.lang.String[] pathStr -> I1TT1IIll1ll1TTI
    com.isf.app.view.controls.TrimmedLabel[] label -> IITTl11lIlITl1T
    java.awt.Point p -> ITTlTI1l1lTIl1I
    java.awt.Point p1 -> ITTTlIITI111l1ll
    java.lang.String str -> str
    int height -> height
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void addQueryScrollPane(com.isf.app.view.containers.QueryScrollPane) -> TT1lIT1ll1ITIIl1
    void addLabels() -> Tl1Tl11ITl1IlTII
    void addPanels() -> I1TlTIl1ITTl1lI
    void removeLabels() -> l11TlIlTITI1IT1l
    void hideAll() -> T1TlI11TITIlIll1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void cleanUp() -> cleanUp
    void <clinit>() -> <clinit>
com.isf.app.view.containers.QueryScrollPane -> com.isf.app.view.containers.lllTT1I11IIT:
    org.apache.log4j.Logger logger -> logger
    com.isf.app.view.containers.QueryScrollPane latestPane -> IllI1l1TI1Tl1TIT
    com.isf.app.view.containers.QueryScrollPane previousPane -> l1lII11TTTI1lIlT
    int paneIndex -> IlTT11IIIllTl1T
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    javax.swing.JPanel compPanel -> lTI1TTIlT1lIlI11
    isf.controls.view.gui.VerticalLayout vl -> lT1l1ITI1l1ITlTI
    java.awt.Container parentPanel -> l111lTIlITIl1ITT
    javax.swing.JMenu menu -> menu
    com.isf.app.view.listeners.MainSearchListener mainSearchListener -> TI1lII1lTllT11IT
    java.awt.event.MouseListener mouseL -> llIT11ITITl11TlI
    boolean isClicked -> IT11lIl1lTI1lITT
    boolean isEnabled -> T1TTlIlIIIlTl
    int start -> start
    boolean fromMove -> lI1TITI1lI1l1TlT
    java.lang.Object obj -> obj
    int nMenus -> l1IITTlI1T1IlTl
    int nHeight -> lIITl11llTTI11TI
    void <init>() -> <init>
    void <init>(java.awt.Container) -> <init>
    java.awt.Component add(java.awt.Component) -> add
    void addMainSearchListener(com.isf.app.view.listeners.MainSearchListener) -> TT1lIT1ll1ITIIl1
    void addMouseList(java.awt.event.MouseListener) -> TT1lIT1ll1ITIIl1
    void setVisible(boolean) -> setVisible
    void removeSubMenu(javax.swing.JMenu) -> TT1lIT1ll1ITIIl1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setModel(java.awt.Component[]) -> TT1lIT1ll1ITIIl1
    void addMenu(com.isf.app.view.controls.QueryMenu,com.isf.app.models.TreeParent) -> TT1lIT1ll1ITIIl1
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void unselectChilds(javax.swing.JMenu) -> ITI1llTTI1lITl
    void getSelectionArray(com.isf.app.models.PathNode[]) -> TT1lIT1ll1ITIIl1
    void reset() -> reset
    java.awt.Insets getInsets() -> getInsets
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    int getPanelCount() -> TllIITlI1l1TI1T1
com.isf.app.view.containers.QueryScrollPane$1 -> com.isf.app.view.containers.I1Ill1IlTTT:
    com.isf.app.view.containers.QueryScrollPane this$0 -> llllTT11I1ITTII1
    void <init>(com.isf.app.view.containers.QueryScrollPane) -> <init>
    void run() -> run
com.isf.app.view.containers.QuickImagePanel -> com.isf.app.view.containers.TIlIlTlIT11:
    javax.swing.ImageIcon image -> ll1I1ITlTT11IlIT
    void <init>() -> <init>
    javax.swing.ImageIcon getImage() -> T1l1I1IITlT1ITll
    void setImage(javax.swing.ImageIcon) -> l1IlTT1lITIl1IT1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void paint(java.awt.Graphics) -> paint
com.isf.app.view.containers.QuickViewGP -> com.isf.app.view.containers.TTlIIllT1I1:
    com.isf.app.view.containers.QuickViewPanel qvp -> IIl1ITTlTl1IlT
    com.isf.app.models.ThumbData thumbData -> IlTTI11lTIITl1l
    java.awt.Container c -> IIlTTl11IlTlIT
    java.awt.event.MouseListener ml -> I11llTIT1IlT1lTI
    java.awt.event.MouseMotionListener mml -> I1IlII1lTlTTl11T
    void <init>() -> <init>
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    boolean isValidIcon() -> TTT1IIlITI1ll11l
com.isf.app.view.containers.QuickViewPanel -> com.isf.app.view.containers.ITll1IT1lI1T:
    com.isf.app.view.gui.QuickLookHeader qlh -> llT1IIl1TIIT1lT
    com.isf.app.view.controls.TrimmedIconButton downArrow -> lTl1IllIITTIT111
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    boolean hasImage -> TT11TllllTI1II1I
    com.isf.app.view.containers.QuickImagePanel qip -> lTTIl1Tl11lIIT1I
    javax.swing.JLabel jlabel1 -> ITII1TT11lIlTll
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    void <init>(java.awt.Insets,com.isf.app.models.ThumbData) -> <init>
    java.awt.Insets getInsets() -> getInsets
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    boolean isValidIcon() -> TTT1IIlITI1ll11l
com.isf.app.view.containers.QuickViewPanel$1 -> com.isf.app.view.containers.TlTIIlI11lT:
    com.isf.app.view.containers.QuickViewPanel this$0 -> IlII1TTTlTI1l1l1
    void <init>(com.isf.app.view.containers.QuickViewPanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.QuickViewPanel$2 -> com.isf.app.view.containers.lTIIl11TIl1T:
    com.isf.app.view.containers.QuickViewPanel this$0 -> IlII1TTTlTI1l1l1
    void <init>(com.isf.app.view.containers.QuickViewPanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.SpatialButtonsPanel -> com.isf.app.view.containers.ll1lT1T1ITII:
    com.isf.app.view.controls.TrimmedIconButton begin -> lTTlTl1T1I11IIlI
    com.isf.app.view.controls.TrimmedIconButton newb -> IIl1llT1TT1lIIT1
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    void <init>(java.lang.String[],java.lang.String[]) -> <init>
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.SpatialListPanel -> com.isf.app.view.containers.TlI1IT1TlIl1:
    com.isf.app.view.containers.SpatialButtonsPanel bp -> IlITl1lTTlI11TI1
    com.isf.app.view.containers.SpatialListScrollPane pane -> ll1I1I1TTl1TITlI
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    javax.swing.JLabel msgLabel -> T1TlT11lTlI1lIII
    void setDefault() -> setDefault
    void <init>() -> <init>
    void setSpatialData(java.util.Vector) -> TIITI1lTlTl1Il11
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void addSpatialListSelectionListener(com.isf.app.view.listeners.SpatialListSelectionListener) -> TT1lIT1ll1ITIIl1
    void reset() -> reset
    com.isf.app.view.containers.SpatialButtonsPanel access$000(com.isf.app.view.containers.SpatialListPanel) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.SpatialListPanel$1 -> com.isf.app.view.containers.ITl1ll1T1TII:
    com.isf.app.view.containers.SpatialListPanel this$0 -> l11IITT1TIlIll1T
    void <init>(com.isf.app.view.containers.SpatialListPanel,java.awt.Insets) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.SpatialListScrollPane -> com.isf.app.view.containers.lII1lTT1l1TI:
    javax.swing.JList list -> list
    com.isf.app.view.listeners.SpatialListSelectionListener sl -> ITl1Il1II1Tll1TT
    boolean prepopulate -> Ill1ITTl1IIlTT11
    void <init>() -> <init>
    void setDefault() -> setDefault
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setModal(java.util.Vector) -> TTl1TITI1l1Il1lI
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
    void reset() -> reset
    void addSpatialListSelectionListener(com.isf.app.view.listeners.SpatialListSelectionListener) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.SpatialSearchPanel -> com.isf.app.view.containers.IT11lTII1Tll:
    com.isf.app.view.containers.SpatialListPanel spl -> T1IIl1TII1T1lllT
    com.isf.app.view.containers.IndexMapPanel imp -> lTTIIlT1l11ITI1l
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    void <init>() -> <init>
    void setSpatialData(java.util.Vector) -> TIITI1lTlTl1Il11
    void setDefault() -> setDefault
    void showGlass() -> Il1IIl1IT1TlTTl
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void reset() -> reset
    void clearAll() -> Il1I1llTTlI1TIT
    java.awt.Rectangle getSelectedPoints() -> ll1TIIIT1lT1TIl1
    isf.common.view.gui.SpatialListImage getSelSpatialListImage() -> III1Tl1lTllTIT11
    void fireClose() -> TIlIT1l111IlTTIl
    void popButton(java.awt.Point) -> ITI1llTTI1lITl
com.isf.app.view.containers.TextDivisionPanel -> com.isf.app.view.containers.TIIlll111TIT:
    com.isf.app.view.containers.TextDivisionPanelViewer tdpv -> Il111T1llTIlTIIT
    com.isf.app.view.gui.ObjectCellRenderer current -> T1lIIlTlT1TII11l
    java.lang.String isfatno -> lT1l11ITlTlTIII1
    java.lang.String topTitle -> T1l1I1IITlT1ITll
    java.util.Vector data -> TlTI11TIT1lIIll
    com.isf.app.view.listeners.ObjectListListener ol -> TTlTlT1I1lI1IIl
    void <init>() -> <init>
    void setTopTitle(java.lang.String) -> lIIT1TI11Tl1lITl
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    void reset() -> reset
    void addObjectListListener(com.isf.app.view.listeners.ObjectListListener) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.TextDivisionPanelViewer -> com.isf.app.view.containers.lTT1lII1TlI:
    com.isf.app.view.controls.ObjectList left -> TTlI1l11lIlTI1TI
    com.isf.app.view.listeners.ObjectListListener ol -> TTlTlT1I1lI1IIl
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    javax.swing.JLabel title -> lI1lT1lI1TIT1ITl
    javax.swing.ImageIcon icon -> IlIlII1llT1TT11T
    java.util.Vector vector -> vector
    java.util.Vector tempVector -> TIIlTIl111lTlIT
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    java.awt.event.MouseListener ml -> I11llTIT1IlT1lTI
    int tempIndex -> lTI1TT1I1llIlIT
    void <init>(javax.swing.ImageIcon) -> <init>
    void setTitle(java.lang.String) -> setTitle
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    void addObjectListListener(com.isf.app.view.listeners.ObjectListListener) -> TT1lIT1ll1ITIIl1
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.awt.Dimension access$000(com.isf.app.view.containers.TextDivisionPanelViewer) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.TextDivisionPanelViewer$1 -> com.isf.app.view.containers.I1I1IT1TllTl:
    com.isf.app.view.containers.TextDivisionPanelViewer this$0 -> lIlITTlTI1lTI1
    void <init>(com.isf.app.view.containers.TextDivisionPanelViewer) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.TextDivisionPanelViewer$2 -> com.isf.app.view.containers.TIT1II11Tlll:
    com.isf.app.view.containers.TextDivisionPanelViewer this$0 -> lIlITTlTI1lTI1
    void <init>(com.isf.app.view.containers.TextDivisionPanelViewer) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.TextPanel -> com.isf.app.view.containers.I11TT1TlIlIl:
    isf.controls.view.controls.IsfComboBox textNo -> TTllII1TI1llIT
    javax.swing.JTextField publicationNo -> TI1lIlTITlIT1l1
    javax.swing.JTextArea keyWord -> l11ITTI1lTT1lIIl
    javax.swing.JLabel jlabel1 -> ITII1TT11lIlTll
    javax.swing.JLabel jlabel2 -> T1T11IIlll1lITIT
    javax.swing.JLabel jlabel3 -> ITII11llIT1llT1T
    javax.swing.ImageIcon rtcurveIcon -> lIllTI1TTTIl1I
    java.util.Vector v -> lITT1Il1TIl1lTI
    com.isf.app.view.listeners.MainSearchListener mainSearchListener -> TI1lII1lTllT11IT
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void addMainSearchListener(com.isf.app.view.listeners.MainSearchListener) -> TT1lIT1ll1ITIIl1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void setTextPublicationData(java.util.Vector) -> IITTlT11lII1T1ll
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.TextPanel$1 -> com.isf.app.view.containers.llIlITITT1:
    com.isf.app.view.containers.TextPanel this$0 -> TlT1l11lTTlIIII1
    void <init>(com.isf.app.view.containers.TextPanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.TextPanel$2 -> com.isf.app.view.containers.IlT1IT1T1llI:
    com.isf.app.view.containers.TextPanel this$0 -> TlT1l11lTTlIIII1
    void <init>(com.isf.app.view.containers.TextPanel) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.containers.ThumbViewer -> com.isf.app.view.containers.II1lIlTTlT11:
    javax.swing.JPanel tc -> lIT11lITT11ITIll
    java.util.Vector selectedThumbs -> Il1l1TT1TIlIIl1T
    com.isf.app.view.containers.ThumbWindow latest -> TITlIT1l1IlI1Tl
    com.isf.app.view.listeners.QuickViewListener qvl -> I1ll1I1lTIlTITT
    com.isf.app.view.listeners.ThumbHeaderSelectionListener thsl -> TIT1Ill1TII11Tll
    com.isf.app.view.listeners.ThumbListener tl -> ITll11TTTl1III1l
    javax.swing.ImageIcon ti -> TIlTlIlIl1TT1I
    int rows -> rows
    com.isf.app.view.listeners.ABListener cup$580ed555 -> a
    java.util.Hashtable windows -> IITlTlI1TI1l1Tl
    void <init>() -> <init>
    boolean canSelectMore(java.lang.String) -> TT1lIT1ll1ITIIl1
    void headerSelected(com.isf.app.models.ThumbData) -> ITI1llTTI1lITl
    void thumbSelected(com.isf.app.models.ThumbData) -> lI1I1T1ITTl1llIT
    void thumbDeSelected(com.isf.app.models.ThumbData) -> IlITlTTTl11Il1I
    com.isf.app.controllers.ThumbContentManager getThumbContentManager() -> lTTI111I1ITlTIll
    void addThumbListener(com.isf.app.view.listeners.ThumbListener) -> TT1lIT1ll1ITIIl1
    void showQuickView(com.isf.app.models.ThumbData) -> TT1lIT1ll1ITIIl1
    void addQuickViewListener(com.isf.app.view.listeners.QuickViewListener) -> TT1lIT1ll1ITIIl1
    void addThumbHeaderSelectionListener(com.isf.app.view.listeners.ThumbHeaderSelectionListener) -> TT1lIT1ll1ITIIl1
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    boolean isSelectedThumb(com.isf.app.models.ThumbData) -> IT11TT1lIll1ITIl
    java.util.Vector getSelectedThumbs() -> TIlTlT1IIll11I1T
    void reset() -> reset
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setUpImg$d723ca1(javax.swing.ImageIcon) -> a
com.isf.app.view.containers.ThumbViewerPanel -> com.isf.app.view.containers.Tl1I1I1TTIll:
    com.isf.app.view.containers.ThumbViewer tv -> ITTl1TIllI1IT1l
    isf.controls.view.containers.TrimmedPanel top -> l1II1lTTIl1lTIT
    isf.controls.view.containers.TrimmedPanel lp -> lI1TTIlT1Il11ITl
    org.apache.log4j.Logger logger -> logger
    javax.swing.JLabel rp -> l1IlI1TlTlT11IIT
    java.util.Vector data -> TlTI11TIT1lIIll
    java.util.Vector selectedData -> lIT11TITl1TI1llI
    com.isf.app.view.controls.ToggleButton filmType -> lTTTlI11I1lIT1lI
    com.isf.app.view.controls.ToggleButton datePhoto -> lTITI1llIT1T1lI1
    com.isf.app.view.controls.ToggleButton magCode -> ITTIIlllTIl1T111
    com.isf.app.view.controls.CatalougeButton next -> TTTI1TIl1l11IlIl
    com.isf.app.view.controls.CatalougeButton back -> TTIl11IITI1l1llT
    javax.swing.ImageIcon ti -> TIlTlIlIl1TT1I
    isf.controls.utils.ResolutionManager rm -> IIl1lTI1TIT11llT
    java.lang.String FTCODE -> TllI1ITITITl11l
    java.lang.String MGCODE -> IT11T1llTITI1llI
    java.lang.String DPCODE -> I1TlTT11lllIITI
    void <init>(java.awt.Insets,java.awt.event.ActionListener) -> <init>
    void setLimits(java.util.Vector) -> l1IllT11TIIT1ITl
    java.util.Vector getData() -> l1lT1IlI1IlT1TIT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.util.Vector getSelectedData() -> TlIlTTlIIIlT111
    void thumbSelected(com.isf.app.models.ThumbData) -> lI1I1T1ITTl1llIT
    void thumbDeSelected(com.isf.app.models.ThumbData) -> IlITlTTTl11Il1I
    com.isf.app.controllers.ThumbContentManager getThumbContentManager() -> lTTI111I1ITlTIll
    void headerSelected(com.isf.app.models.ThumbData) -> ITI1llTTI1lITl
    void reset() -> reset
    void setFooter(java.lang.String) -> TTIlIIlTI1l11lT
com.isf.app.view.containers.ThumbViewerPanel$1 -> com.isf.app.view.containers.lTlI11T1TIIl:
    com.isf.app.view.containers.ThumbViewerPanel this$0 -> TIIlI1TlI1lT1lT1
    void <init>(com.isf.app.view.containers.ThumbViewerPanel,java.awt.Insets) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.ThumbViewerPanel$2 -> com.isf.app.view.containers.TlIIll1ITT11:
    com.isf.app.view.containers.ThumbViewerPanel this$0 -> TIIlI1TlI1lT1lT1
    void <init>(com.isf.app.view.containers.ThumbViewerPanel) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.ThumbViewerPanel$3 -> com.isf.app.view.containers.lI1Tl11TIIlT:
    com.isf.app.view.containers.ThumbViewerPanel this$0 -> TIIlI1TlI1lT1lT1
    void <init>(com.isf.app.view.containers.ThumbViewerPanel,java.awt.Insets) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.containers.ThumbWindow -> com.isf.app.view.containers.lIITTl1lI11T:
    com.isf.app.models.ThumbHeader th -> TTl1III1TIl1lT1l
    com.isf.app.view.controls.ThumbButton tb -> lllIl11ITTTII11T
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    com.isf.app.view.containers.ThumbWindow left -> T1lT1I1lIITITll
    com.isf.app.view.containers.ThumbWindow right -> IIlT11Il1lITlTT
    com.isf.app.models.ThumbData thumbData -> IlTTI11lTIITl1l
    com.isf.app.view.listeners.QuickViewListener qvl -> I1ll1I1lTIlTITT
    com.isf.app.view.listeners.ThumbListener thumbListener -> TTIlTTII1l1lIl
    com.isf.app.controllers.ThumbContentManager tcm -> T11llT1IlTTIlII
    java.lang.String type -> type
    void <init>(javax.swing.ImageIcon,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(com.isf.app.models.ThumbData) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void clearHeaderSelection() -> T1T1TlIlIIT1I1ll
    void clearHeaders() -> IIlT1TT1l1IIl1Tl
    void setSelectedThumb() -> TIl1l1I1TITllIT
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
    void addQuickViewListener(com.isf.app.view.listeners.QuickViewListener) -> TT1lIT1ll1ITIIl1
    void addThumbListener(com.isf.app.view.listeners.ThumbListener) -> TT1lIT1ll1ITIIl1
com.isf.app.view.containers.ToggleButtonPanel -> com.isf.app.view.containers.IlIT11I1TTll:
    com.isf.app.view.controls.ToggleButton lastAdded -> I1TI1Tl1TITlIl1l
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    void <init>() -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Component add(java.awt.Component) -> add
com.isf.app.view.containers.ToolBarPanel -> com.isf.app.view.containers.lIIlTITlT111:
    com.isf.app.view.controls.TrimmedIconButton lastAdded -> lI1I11T1TlIlIlTT
    java.util.Vector v -> lITT1Il1TIl1lTI
    void <init>() -> <init>
    java.awt.Component add(java.awt.Component,boolean) -> TT1lIT1ll1ITIIl1
    void enable(int) -> IlIT1lT1TI1IlT1l
    void disable(int) -> II11llTI1TlTITl1
    void setRight(int) -> T1TlITlIl11I1TIl
    void setLeft(int) -> Il1II1TlT1llTI1T
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.controls.AnchorButton -> com.isf.app.view.l11lITTI.l1IlIlTI1T1T:
    java.lang.String start -> I1Tl1ITl1TTlIlI
    java.lang.String end -> lll11TI1IlITT1TI
    java.lang.String hstart -> T1lITlTII111lITl
    java.lang.String label -> label
    java.lang.String range -> IllTT1IITl11lT1I
    void <init>(java.lang.String) -> <init>
    void <init>() -> <init>
    java.lang.String getRange() -> l11I1TTlTIlIlT1I
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void setSelected(boolean) -> setSelected
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.isf.app.view.controls.CatalogueCellEditor -> com.isf.app.view.l11lITTI.lI1lTIIlT1T1:
    java.lang.Object value -> value
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    com.isf.app.view.controls.CatalougeButton cb -> I11TllTT1lIlTII1
    javax.swing.event.CellEditorListener cel -> IIlTlT11TlT1lII
    void <init>() -> <init>
    void <init>(java.lang.Object,java.awt.Dimension) -> <init>
    java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int) -> getTableCellEditorComponent
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void addCellEditorListener(javax.swing.event.CellEditorListener) -> addCellEditorListener
    void cancelCellEditing() -> cancelCellEditing
    java.lang.Object getCellEditorValue() -> getCellEditorValue
    boolean isCellEditable(java.util.EventObject) -> isCellEditable
    void removeCellEditorListener(javax.swing.event.CellEditorListener) -> removeCellEditorListener
    boolean shouldSelectCell(java.util.EventObject) -> shouldSelectCell
    boolean stopCellEditing() -> stopCellEditing
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void <clinit>() -> <clinit>
com.isf.app.view.controls.CatalougeButton -> com.isf.app.view.l11lITTI.Tl1l11IlIITT:
    void <init>(java.lang.String) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
com.isf.app.view.controls.CatalougePanelTableCellRenderer -> com.isf.app.view.l11lITTI.Il1TI1lIT1lT:
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    com.isf.app.view.controls.CatalougePanelTableCellRenderer r -> TITl1I1l1l1IITTl
    com.isf.app.view.controls.CatalougeRendererLabel left -> T1TTITIl1l1l1IlI
    com.isf.app.view.controls.CatalougeRendererLabel right -> TTTl1lTI11I1llII
    com.isf.app.view.controls.CatalougeRendererLabel last -> TllTIlIT1TlI11I
    com.isf.app.view.controls.CatalougeButton cb -> I11TllTT1lIlTII1
    void <init>(java.awt.Dimension) -> <init>
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
    void <clinit>() -> <clinit>
com.isf.app.view.controls.CatalougeRendererLabel -> com.isf.app.view.l11lITTI.l11lIlTTI1TI:
    int width -> width
    int height -> height
    void <init>(java.lang.String,int,int) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.controls.GeneralMenu -> com.isf.app.view.l11lITTI.T11ITIIllTl:
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    int menuItemHeight -> TlTITT11ll11IlII
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    javax.swing.JMenuItem add(javax.swing.JMenuItem) -> add
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    int getHeight() -> getHeight
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.controls.GeneralMenuItem -> com.isf.app.view.l11lITTI.lIlIITlTT111:
    int menuItemHeight -> TlTITT11ll11IlII
    void <init>(java.lang.String) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    int getHeight() -> getHeight
    java.awt.Insets getInsets() -> getInsets
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
com.isf.app.view.controls.ImageBorder -> com.isf.app.view.l11lITTI.Il1TlIT1lTI1:
    java.awt.Image image -> image
    int height -> height
    java.awt.Insets insets -> insets
    javax.swing.ImageIcon medalIcon -> llIIlI1TI11lTTT
    int offset -> offset
    int topset -> TlIITlI1TT1ll1I
    void <init>(java.lang.String,boolean) -> <init>
    void setBorderInsets(int,int,int,int) -> TT1lIT1ll1ITIIl1
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.isf.app.view.controls.InscriptDyanBorder -> com.isf.app.view.l11lITTI.l1lIl1TTTI1I:
    java.awt.Color col -> l1IlIT11lIT1ITTl
    int left -> left
    int right -> right
    int top -> top
    int bottom -> bottom
    void <init>(java.awt.Color,int,int,int,int) -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
com.isf.app.view.controls.InscriptGenMenu -> com.isf.app.view.l11lITTI.TTl11llIITI:
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void paint(java.awt.Graphics) -> paint
    java.awt.Insets getInsets() -> getInsets
    javax.swing.JMenuItem add(javax.swing.JMenuItem) -> add
    void setEnabled(boolean) -> setEnabled
com.isf.app.view.controls.InscriptImageIcon -> com.isf.app.view.l11lITTI.IllTIT1l1IT1:
    void <init>(java.awt.Image) -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
com.isf.app.view.controls.InscriptMenuBar -> com.isf.app.view.l11lITTI.IllTIIlT11T:
    javax.swing.ImageIcon im -> I1lI1TlIlTIlTT1
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void paint(java.awt.Graphics) -> paint
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
    int getHeight() -> getHeight
com.isf.app.view.controls.InscriptTable -> com.isf.app.view.l11lITTI.TllIII11T1Tl:
    int def -> lTll1IITlTT1II
    void <init>(javax.swing.table.TableModel) -> <init>
    boolean isCellEditable(int,int) -> isCellEditable
    int getRowHeight(int) -> getRowHeight
com.isf.app.view.controls.ObjectList -> com.isf.app.view.l11lITTI.Il1IlTT1l1IT:
    javax.swing.JPanel container -> TlI1llTT1I1IIT1l
    com.isf.app.view.listeners.ObjectListListener ol -> TTlTlT1I1lI1IIl
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    com.isf.app.view.gui.ObjectCellRenderer objectrenderer -> l1T1Il1lITIITT1l
    java.awt.Dimension dimension -> ITTITT1IIl11lll1
    void <init>() -> <init>
    void setData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    void addObjectListListener(com.isf.app.view.listeners.ObjectListListener) -> TT1lIT1ll1ITIIl1
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.controls.QueryMenu -> com.isf.app.view.l11lITTI.I11IlTlI1TlT:
    org.apache.log4j.Logger logger -> logger
    java.awt.Color bg -> bg
    java.awt.Color fg -> fg
    boolean flag -> Tll11l1T1TITIlII
    java.lang.Object object -> object
    java.awt.Color pbg -> TTI1l1lI1IT1lIlT
    java.awt.Color pfg -> l1TlITTT1IllII1
    java.awt.Font font -> font
    java.util.ArrayList list -> IllTTTIl1II1l11T
    boolean isRemoved -> lT1T1ITIllIT1l1I
    boolean isQMClicked -> TlI1ll1T1lIIITT1
    void <init>() -> <init>
    void removeListeners() -> removeListeners
    void <init>(java.lang.String) -> <init>
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void setSelected(boolean) -> setSelected
    boolean isSelected() -> isSelected
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    java.lang.String toString() -> toString
    java.awt.Insets getInsets() -> getInsets
    void <clinit>() -> <clinit>
com.isf.app.view.controls.QueryMenuItem -> com.isf.app.view.l11lITTI.l1ITTl1IlTI1:
    java.awt.Color fg -> fg
    java.awt.Color bg -> bg
    java.awt.Color pbg -> TTI1l1lI1IT1lIlT
    java.awt.Color pfg -> l1TlITTT1IllII1
    boolean flag -> Tll11l1T1TITIlII
    java.awt.Font font -> font
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void setSelected(boolean) -> setSelected
    boolean isSelected() -> isSelected
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.isf.app.view.controls.ThumbButton -> com.isf.app.view.l11lITTI.TIlT1lTIIl:
    com.isf.app.view.controls.TrimmedIconButton tib -> TlITII11ITT11lll
    com.isf.app.view.controls.TrimmedIconButton tt -> TIIlIIl11l1TTTl1
    boolean selected -> selected
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    void <init>(javax.swing.ImageIcon,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.isf.app.view.controls.ThumbTrimmedIconButton -> com.isf.app.view.l11lITTI.T1lTlIIlT1I:
    void <init>() -> <init>
    void <init>(javax.swing.ImageIcon) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.controls.ToggleButton -> com.isf.app.view.l11lITTI.TTITllII1l11:
    com.isf.app.view.controls.ToggleButton previous -> llTITTl1IIlIT11
    com.isf.app.view.controls.ToggleButton next -> TI1lI1llITTlIT
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(javax.swing.ImageIcon) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void setProperties(boolean) -> TTl1TITI1l1Il1lI
    void setSelected(boolean) -> setSelected
com.isf.app.view.controls.TrimmedIconButton -> com.isf.app.view.l11lITTI.TI1l1TlTIlI:
    com.isf.app.view.controls.TrimmedIconButton left -> I1IlTll11TITI1Tl
    com.isf.app.view.controls.TrimmedIconButton right -> TlI111TlIllTIIT1
    java.awt.Image additional -> lTll11T1TI1TIIIl
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.awt.Image) -> <init>
    void <init>(javax.swing.ImageIcon) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void setSelected(boolean) -> setSelected
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
    int getHeight() -> getHeight
    void paint(java.awt.Graphics) -> paint
com.isf.app.view.controls.TrimmedIconMenu -> com.isf.app.view.l11lITTI.IlI1Tl11TlTI:
    javax.swing.ImageIcon img -> IT1lTl1IlITTIl11
    void <init>(java.lang.String) -> <init>
    void paint(java.awt.Graphics) -> paint
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
    void <clinit>() -> <clinit>
com.isf.app.view.controls.TrimmedLabel -> com.isf.app.view.l11lITTI.ll1TTTlI11II:
    java.awt.Insets ins -> T1IlTTIIIlll1T11
    void <init>() -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.gui.ImageConsumer -> com.isf.app.view.I11lIlTT.l1IlIlTI1T1T:
    void setUpImg$d723ca1(javax.swing.ImageIcon) -> a
com.isf.app.view.gui.InscriptFileNameFilter -> com.isf.app.view.I11lIlTT.lI1lTIIlT1T1:
    java.lang.String wildCard -> l111lTIITlTT1IlI
    void <init>(java.lang.String) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.isf.app.view.gui.LineLayout -> com.isf.app.view.I11lIlTT.Tl1l11IlIITT:
    int rows -> rows
    int columns -> columns
    boolean isVertical -> TlTl1l1IIIT1TI1l
    int VERTICAL_CENTER -> Tl1TIlT1Tl11lIII
    int HORIJONTAL_CENTER -> TIlTlITl11ITlI11
    int lVERTICAL_CENTER -> TTT1lITlIllII
    int lHORIJONTAL_CENTER -> TlTIlI1I111TTllI
    int cellspacing -> lT1TlII11T1ITllI
    int borderWidth -> TlTl1IITIl111lTI
    int valignment -> ITl1T1l1llTITI1I
    int halignment -> lI1TTlI11TTlIIl
    int vlayoutalignment -> llTIl1IIT1T1IlT
    int hlayoutalignment -> lTTlTII1llTII1
    void <init>(boolean) -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void layoutContainer(java.awt.Container) -> layoutContainer
    int getMaxWidthForCol(int,java.awt.Component[]) -> TT1lIT1ll1ITIIl1
    int getMaxHeightForRow(int,java.awt.Component[]) -> ITI1llTTI1lITl
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    int getRequiredHeight(java.awt.Container) -> TT1lIT1ll1ITIIl1
    int getHeightForRow(java.awt.Component[]) -> ITI1llTTI1lITl
    int getWidthForCol(java.awt.Component[]) -> l1IlTT1lITIl1IT1
    int getRequiredWidth(java.awt.Container) -> ITI1llTTI1lITl
    int getMinimumHeight(java.awt.Container) -> l1IlTT1lITIl1IT1
    int getMinimumWidth(java.awt.Container) -> lI1I1T1ITTl1llIT
    void <clinit>() -> <clinit>
com.isf.app.view.gui.ObjectCellRenderer -> com.isf.app.view.I11lIlTT.Il1TI1lIT1lT:
    java.awt.Color hc -> llTIIl1Il1TTTI
    com.isf.app.models.TreeChild child -> lIlIIlTTTI1l11T
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    com.isf.app.view.listeners.ObjectListListener ol -> TTlTlT1I1lI1IIl
    boolean inside -> llT1TllI11IIITT1
    java.lang.String textDivName -> T1lIlII1TTIl1lT1
    java.lang.String textDesc -> ITTI1T1II1l1lTll
    java.lang.String museumNo -> l1ITIIlT11T1TlIl
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    com.isf.app.view.gui.ObjectRenderer or1 -> IITT11IlIl1TT1ll
    com.isf.app.view.gui.ObjectRenderer or2 -> I1TlTlIll1T11TII
    com.isf.app.view.gui.ObjectRenderer or3 -> lI11lTlI11TlTTII
    int index -> index
    void <init>() -> <init>
    void <init>(com.isf.app.models.TreeChild,java.awt.Dimension) -> <init>
    void setIndex(int) -> setIndex
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void addObjectListListener(com.isf.app.view.listeners.ObjectListListener) -> TT1lIT1ll1ITIIl1
    java.awt.Insets getInsets() -> getInsets
    void setInside() -> T1IlT1ITll1Il1TI
    void processEntry() -> l11T1TIlIlIlTIT
    void processExit() -> lTTIIlT1l11ITI1l
    void handleClick() -> Il111T1llTIlTIIT
    void <clinit>() -> <clinit>
com.isf.app.view.gui.ObjectRenderer -> com.isf.app.view.I11lIlTT.l11lIlTTI1TI:
    java.awt.Color nc -> I1lllT1I1lI1TTIT
    int width -> width
    int height -> height
    com.isf.app.view.listeners.ObjectListListener ol -> TTlTlT1I1lI1IIl
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    boolean inside -> llT1TllI11IIITT1
    com.isf.app.models.TreeChild child -> lIlIIlTTTI1l11T
    int index -> index
    void <init>(java.lang.String,int,int) -> <init>
    void setTreeChild(com.isf.app.models.TreeChild) -> l1IlTT1lITIl1IT1
    com.isf.app.models.TreeChild getTreeChild() -> Tl11TI1T1IIIlTll
    void setInside() -> T1IlT1ITll1Il1TI
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void setSubData() -> IT1l1I1TT1TlIllI
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    void addObjectListListener(com.isf.app.view.listeners.ObjectListListener) -> TT1lIT1ll1ITIIl1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
    void <clinit>() -> <clinit>
com.isf.app.view.gui.ObjectRenderer$Highlight -> com.isf.app.view.I11lIlTT.IT1llT1I1lTI:
    boolean handled -> lTITTII1lTl1Il
    com.isf.app.view.gui.ObjectRenderer this$0 -> Ill1TITlTlI11TI1
    void <init>(com.isf.app.view.gui.ObjectRenderer) -> <init>
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.isf.app.view.gui.PathSelectionManager -> com.isf.app.view.I11lIlTT.T11ITIIllTl:
    java.util.Hashtable paths -> I1TIllT1l11ITTIl
    com.isf.app.view.gui.PathSelectionManager psm -> lITIITIT111Tl1ll
    void <init>() -> <init>
    com.isf.app.view.gui.PathSelectionManager getInstance() -> TIl1lT1IITl1I1Tl
    com.isf.app.models.PathNode[][] getValue(com.isf.app.models.PathNode) -> TT1lIT1ll1ITIIl1
    void push(com.isf.app.models.PathNode[]) -> ITI1llTTI1lITl
    void checkPush(com.isf.app.models.PathNode[][],com.isf.app.models.PathNode[]) -> TT1lIT1ll1ITIIl1
    int getRowIndex(com.isf.app.models.PathNode[][],com.isf.app.models.PathNode[]) -> ITI1llTTI1lITl
    void merge(com.isf.app.models.PathNode[][]) -> ITI1llTTI1lITl
    boolean pop(com.isf.app.models.PathNode[]) -> l1IlTT1lITIl1IT1
    void reset() -> reset
    boolean isIdentical(com.isf.app.models.PathNode[],com.isf.app.models.PathNode[]) -> ITI1llTTI1lITl
    void dispVal() -> IllI1TTT1lIITl1
    void <clinit>() -> <clinit>
com.isf.app.view.gui.QuickLookHeader -> com.isf.app.view.I11lIlTT.lIlIITlTT111:
    javax.swing.JTextArea hb -> lIl1IIlTTI1TT1l
    void <init>(java.lang.String) -> <init>
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.gui.SimpleVerticalLayout -> com.isf.app.view.I11lIlTT.l1lIl1TTTI1I:
    int hy -> TI11I1lTIlTITll1
    int wx -> l1TIITTll1I1T1lI
    void <init>() -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
com.isf.app.view.gui.SpatialListCellRenderer -> com.isf.app.view.I11lIlTT.TTl11llIITI:
    void <init>() -> <init>
    java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
com.isf.app.view.gui.SpatialListCellRenderer$1 -> com.isf.app.view.I11lIlTT.IllTIT1l1IT1:
    com.isf.app.view.gui.SpatialListCellRenderer this$0 -> lTIl1Tl1I1IlIT1T
    void <init>(com.isf.app.view.gui.SpatialListCellRenderer,java.lang.String,int) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.gui.SpatialListCellRenderer$2 -> com.isf.app.view.I11lIlTT.l1TI11ITTIll:
    com.isf.app.view.gui.SpatialListCellRenderer this$0 -> lTIl1Tl1I1IlIT1T
    void <init>(com.isf.app.view.gui.SpatialListCellRenderer,javax.swing.Icon) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.isf.app.view.gui.TableLayout -> com.isf.app.view.I11lIlTT.IllTIIlT11T:
    int rows -> rows
    int columns -> columns
    int cellspacing -> lT1TlII11T1ITllI
    int borderWidth -> TlTl1IITIl111lTI
    void <init>(int,int,int,int) -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void layoutContainer(java.awt.Container) -> layoutContainer
    int getMaxWidthForCol(int,java.awt.Component[]) -> TT1lIT1ll1ITIIl1
    int getMaxMinWidthForCol(int,java.awt.Component[]) -> l1IlTT1lITIl1IT1
    int getMaxHeightForRow(int,java.awt.Component[]) -> ITI1llTTI1lITl
    int getMaxMinHeightForRow(int,java.awt.Component[]) -> lI1I1T1ITTl1llIT
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    int getMinRequiredWidth(java.awt.Container) -> IlITlTTTl11Il1I
    int getMinRequiredHeight(java.awt.Container) -> IT11TT1lIll1ITIl
    int getRequiredHeight(java.awt.Container) -> TT1lIT1ll1ITIIl1
    int getRequiredWidth(java.awt.Container) -> ITI1llTTI1lITl
com.isf.app.view.gui.ToolBarManager -> com.isf.app.view.I11lIlTT.ITl11lI1ITTl:
    boolean[] arr -> I11I1lllTTTITl1I
    com.isf.app.view.gui.ToolBarManager tbm -> II1Il1l1TITlTl1T
    void <init>() -> <init>
    com.isf.app.view.gui.ToolBarManager getInstance() -> TII1l1TIllI1lTT
    void setEnable(int) -> TIl1T1IlT1IIl1lT
    void setDisable(int) -> lllITTIlTTII1111
    void reset() -> reset
    void <clinit>() -> <clinit>
com.isf.app.view.listeners.ABListener -> com.isf.app.view.l1IT1lTI.l1IlIlTI1T1T:
com.isf.app.view.listeners.CleanUpThread -> com.isf.app.view.l1IT1lTI.Il1TI1lIT1lT:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    void run() -> run
com.isf.app.view.listeners.ClickListener -> com.isf.app.view.l1IT1lTI.l11lIlTTI1TI:
    void fireClose() -> TIlIT1l111IlTTIl
    void popButton(java.awt.Point) -> ITI1llTTI1lITl
com.isf.app.view.listeners.LoginListener -> com.isf.app.view.l1IT1lTI.Il1TlIT1lTI1:
    void actionChanged(java.lang.String,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    void passwordSelectionChanged$552c4e01() -> a
    void forgotSelectionChanged$552c4e01() -> b
com.isf.app.view.listeners.MainSearchListener -> com.isf.app.view.l1IT1lTI.l1lIl1TTTI1I:
    void querySelection(int) -> lI1I1T1ITTl1llIT
com.isf.app.view.listeners.MenuListener -> com.isf.app.view.l1IT1lTI.TTl11llIITI:
    void cleanUp() -> cleanUp
com.isf.app.view.listeners.ObjectListListener -> com.isf.app.view.l1IT1lTI.IllTIT1l1IT1:
    void objectSelected(com.isf.app.models.TreeChild) -> ITI1llTTI1lITl
com.isf.app.view.listeners.QuickViewListener -> com.isf.app.view.l1IT1lTI.l1TI11ITTIll:
    void showQuickView(com.isf.app.models.ThumbData) -> TT1lIT1ll1ITIIl1
com.isf.app.view.listeners.SpatialListSelectionListener -> com.isf.app.view.l1IT1lTI.IllTIIlT11T:
    void spatialListImageSelected(isf.common.view.gui.SpatialListImage) -> TT1lIT1ll1ITIIl1
com.isf.app.view.listeners.ThumbHeaderSelectionListener -> com.isf.app.view.l1IT1lTI.ITl11lI1ITTl:
    void headerSelected(com.isf.app.models.ThumbData) -> ITI1llTTI1lITl
com.isf.app.view.listeners.ThumbListener -> com.isf.app.view.l1IT1lTI.IT1llT1I1lTI:
    void thumbSelected(com.isf.app.models.ThumbData) -> lI1I1T1ITTl1llIT
    void thumbDeSelected(com.isf.app.models.ThumbData) -> IlITlTTTl11Il1I
    com.isf.app.controllers.ThumbContentManager getThumbContentManager() -> lTTI111I1ITlTIll
isf.cache.CacheItem -> isf.l11lITTI.l1IlIlTI1T1T:
    java.lang.String name -> name
    long lastAccessedTime -> IITITI1Tl1l1Tll1
    double size -> ITTT11lIITl1lIl
    void <init>(java.lang.String) -> <init>
    void <init>() -> <init>
    java.lang.String getName() -> getName
    long getLastAccessedTime() -> getLastAccessedTime
    void setLastAccessedTime(long) -> TT1lIT1ll1ITIIl1
    void setSize(double) -> TT1lIT1ll1ITIIl1
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    double getSize() -> TTI1TIlllII1T1l1
isf.cache.CacheItemComparator -> isf.l11lITTI.lI1lTIIlT1T1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
isf.cache.CacheSet -> isf.l11lITTI.Il1TI1lIT1lT:
    void <init>() -> <init>
    void <init>(java.util.Comparator) -> <init>
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
isf.cache.LRUCache -> isf.l11lITTI.l11lIlTTI1TI:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    double fileSize -> T11IT1TlIITllI1l
    java.util.SortedSet cache -> TIl111lTIllTTI1I
    boolean isMonitoring -> T1TIl1I1IITlllT1
    double cacheSize -> lITllITlTTII11
    void <init>() -> <init>
    void createSynchronizedMap(isf.cache.CacheSet) -> TT1lIT1ll1ITIIl1
    void updateEntry(java.lang.String,double) -> TT1lIT1ll1ITIIl1
    void deleteEntry(java.lang.String) -> deleteEntry
    void updateEntry(java.lang.String) -> TITlT1lIlTI1l1I
    void trimDirectory(java.lang.String) -> IT1lTll1IT1lII1T
    void startMonitor() -> T1Tl1Tl1TIlIlII
    boolean isCached(java.lang.String) -> TlTI11TIT1lIIll
    double access$000(isf.cache.LRUCache) -> TT1lIT1ll1ITIIl1
    java.util.SortedSet access$100(isf.cache.LRUCache) -> ITI1llTTI1lITl
    double access$002(isf.cache.LRUCache,double) -> a
    void access$200(isf.cache.LRUCache,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean access$302(isf.cache.LRUCache,boolean) -> TT1lIT1ll1ITIIl1
isf.cache.LRUCache$1 -> isf.l11lITTI.T11ITIIllTl:
    isf.cache.LRUCache this$0 -> IT11lITIlT1l1TIl
    void <init>(isf.cache.LRUCache) -> <init>
    void run() -> run
isf.cache.utils.CacheHandler -> isf.l11lITTI.l11lITTI.l1IlIlTI1T1T:
    isf.cache.utils.CacheHandler ourInstance -> TI11IIlTIllTT1l1
    isf.cache.LRUCache cache -> TITTT111Ill1IlIl
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
    void <clinit>() -> <clinit>
isf.cache.utils.ImageUtils -> isf.l11lITTI.l11lITTI.lI1lTIIlT1T1:
    isf.cache.LRUCache cache -> TITTT111Ill1IlIl
    java.lang.String path -> path
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    boolean isCached(java.lang.String) -> TlTI11TIT1lIIll
    java.lang.String getCachedPath() -> ITI11llTll1I1ITT
    void cleanCache() -> TlII1TTTIl11lIl1
    void saveCache(java.lang.String,isf.ptm.formats.PTM,isf.common.utils.PTMConfig) -> TT1lIT1ll1ITIIl1
    void saveThumbnail(java.lang.String,java.awt.image.BufferedImage) -> TT1lIT1ll1ITIIl1
    void <clinit>() -> <clinit>
isf.common.Debug -> isf.common.l1IlIlTI1T1T:
    boolean shallDisplay -> ITT1lIllTII1l11T
    void debug(java.lang.Object) -> debug
    void <clinit>() -> <clinit>
isf.common.ISFBase64 -> isf.common.Tl1l11IlIITT:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    byte[] ALPHABET -> TITl1I1llTI1IT1l
    byte[] _NATIVE_ALPHABET -> ll1111lTTIITlTII
    byte[] DECODABET -> ITl1lT1TlI1lII1T
    void <init>() -> <init>
    java.lang.String encodeObject(java.io.Serializable,int) -> TT1lIT1ll1ITIIl1
    int decode4to3(byte[],int,byte[],int) -> TT1lIT1ll1ITIIl1
    byte[] decode(java.lang.String) -> decode
    java.lang.String getQueryVal(java.lang.String) -> llTTI111lI1IITlT
    byte[] access$000(byte[],byte[],int) -> ITI1llTTI1lITl
    byte[] access$100() -> access$100
    int access$200(byte[],int,byte[],int) -> ITI1llTTI1lITl
    void <clinit>() -> <clinit>
isf.common.ISFBase64$OutputStream -> isf.common.l11lIlTTI1TI:
    int options -> options
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> TlT11lII11ITllTI
    int lineLength -> II11lTTITl1lTIl1
    boolean breakLines -> IT1TTTll1l11IlII
    byte[] b4 -> ITI11I1lTll1TTlI
    boolean suspendEncoding -> l1I1IIlTTlT1lT1I
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void <init>(java.io.OutputStream,int) -> <init>
isf.common.TextPublicationComparator -> isf.common.l1lIl1TTTI1I:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
isf.common.request.ImageRequestProxy -> isf.common.I11lIlTT.l1IlIlTI1T1T:
    void <init>() -> <init>
isf.common.request.PTMRequestProxy -> isf.common.I11lIlTT.lI1lTIIlT1T1:
    void <init>() -> <init>
    byte[] getImageCoeff(java.lang.String,int,int,int) -> TT1lIT1ll1ITIIl1
isf.common.request.RequestDispatcherProxy -> isf.common.I11lIlTT.Tl1l11IlIITT:
    java.lang.String sessionid -> IlTI11I1lTTI1llT
    java.lang.Object handleQueryEvent(java.lang.String) -> l11TTIl11lITIlIT
    javax.swing.ImageIcon fetchImage(java.lang.String) -> TlIlTTlIIIlT111
    java.lang.Object getImageProperties(java.lang.String) -> T11IITlllTT1IlI1
    int checkConnection() -> TT1T1IllITlI1l1I
    isf.common.utils.PTMConfig getPTMConfig(java.lang.String) -> Il1I1llTTlI1TIT
    void <init>() -> <init>
isf.common.utils.CacheManagerConstants -> isf.common.utils.l1IlIlTI1T1T:
    java.lang.String folderName -> T11T1TllITlIlII
    java.lang.String cacheFolderName -> lT11lTIITTI1Ill1
    java.lang.String logFolderName -> ll1IITTI1llTT1I1
    java.lang.String downloadFolderName -> Ill11TlITl1IT1IT
    void <clinit>() -> <clinit>
isf.common.utils.CacheManagerConstants$Initial -> isf.common.utils.lI1lTIIlT1T1:
    isf.common.utils.CacheManagerConstants$Initial ourInstance$352a3371 -> c
    isf.common.request.RequestDispatcherProxy rdp -> a
    isf.common.request.PTMRequestProxy prp -> b
    isf.controls.view.listeners.ActiveXListener al -> d
    javax.swing.JComboBox box -> e
    isf.common.utils.PTMConfig ptm -> f
    java.lang.String getFolderName() -> TTI1lIIlTTIll11
    java.lang.String getCacheFolderName() -> TTTlIl11llIITI
    java.lang.String getLogFolderName() -> IlTl1lI1TlIITT11
    java.lang.String getDownloadFolderName() -> T1lIIlTlT1TII11l
    isf.common.utils.CacheManagerConstants$Initial getInstance$1b4a2d8e() -> a
    void <init>() -> <init>
    java.util.Vector getResults(java.lang.String,java.lang.String,java.lang.String[],boolean) -> a
    void registerActivationListener(isf.controls.view.listeners.ActiveXListener) -> a
    void minimized(java.lang.String) -> a
    void activated(java.lang.String) -> b
    void deleted(java.lang.String) -> c
    void copyPTM(java.io.File,java.io.File) -> a
    void registerCombo(javax.swing.JComboBox) -> a
    void setConfig(isf.common.utils.PTMConfig) -> a
    isf.common.utils.PTMConfig getConfig() -> b
    double evalPoly(float[],double) -> a
    int computeMaximumOnCircle(float[],float[]) -> a
    java.util.ArrayList getNormals(byte[][],boolean,float[],float[]) -> a
    boolean IsZero(double) -> a
    float cbrt(double) -> b
    int SolveQuadric(double[],double[],int) -> a
    int SolveCubic(double[],double[]) -> a
    java.lang.String[] split(java.lang.String,java.lang.String) -> a
    float getFloatFromArray(byte[],int,int) -> a
    byte[] floatToByteArray(float) -> a
    javax.vecmath.Point3f normalize(javax.vecmath.Point3f) -> a
isf.common.utils.InscriptConfigLoader -> isf.common.utils.InscriptConfigLoader:
    java.util.Properties p -> lTl1lITl1IIIT1T
    java.lang.String appName -> l1TlI11IIlTTIlT
    isf.common.utils.InscriptConfigLoader icl -> lITTl1ITTIl1lI11
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    void <init>(java.lang.String) -> <init>
    isf.common.utils.InscriptConfigLoader initialize(java.lang.String) -> initialize
    isf.common.utils.InscriptConfigLoader getInstance() -> getInstance
    void load(java.lang.String) -> load
    java.lang.String getProperty(java.lang.String) -> getProperty
    void <clinit>() -> <clinit>
isf.common.utils.LogManager -> isf.common.utils.LogManager:
    void <init>() -> <init>
    org.apache.log4j.Logger getLogger(java.lang.String) -> getLogger
    org.apache.log4j.Logger getLogger(java.lang.Class) -> getLogger
    void <clinit>() -> <clinit>
isf.common.utils.LogoutListener -> isf.common.utils.Tl1l11IlIITT:
    void loggedout(java.lang.String) -> ITlT1lll1IITI1T1
    void disconnected() -> Il1TTlI1lIIlT1T
    void raiseError(java.lang.String) -> Il11lTlITT1IlIT
isf.common.utils.PTMConfig -> isf.common.utils.Il1TI1lIT1lT:
    java.lang.String name -> name
    int type -> type
    int basistype -> TllTI1TI1ITl1I1l
    java.lang.String version -> version
    java.lang.String cached -> T1IllI111lTTlITI
    int rows -> rows
    int columns -> columns
    int segmentSize -> ll11l1lTITTTII1I
    int width -> width
    int height -> height
    float[] bias -> lITTl1Ill11TTII1
    float[] scale -> I1lTTIl1lI1I1TlT
    long size -> size
    int colors -> lTITl1lTIII111Tl
    int terms -> T1IIIlTlTTIll
    int elements -> TI1l1lT1TT1IIIll
    java.lang.String extension -> extension
    void <init>() -> <init>
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getExtension() -> getExtension
    void setExtension(java.lang.String) -> IIllII1TlTTT11l1
    java.lang.String getCached() -> Tl11l1TTIIIT1Ill
    void setCached(java.lang.String) -> l1lTlT11ITlI1IIT
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    float[] getBias() -> IlTIl1IITTll11T1
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    float[] getScale() -> lTlITT1lITlII
    void setScale(float[]) -> ITI1llTTI1lITl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getRows() -> getRows
    void setRows(int) -> setRows
    int getColumns() -> getColumns
    void setColumns(int) -> setColumns
    int getSegmentSize() -> ITI1lT1Il11TITll
    void setSegmentSize(int) -> lITT1Il1TIl1lTI
    java.lang.String getExt() -> T1Tl1llIIII11lTT
    int getBasistype() -> TIlllIT1TITlI111
    void setBasistype(int) -> I1TT1IIll1ll1TTI
    int getColors() -> IlTITIl1I1T1lTl
    void setColors(int) -> Tll11l1T1TITIlII
    int getTerms() -> TTTIlllI1I1IlT
    void setTerms(int) -> I1lITT1lTT11lIIl
    void setElements(int) -> TTITl1lIllI1TI11
isf.common.utils.SegmentUtils -> isf.common.utils.T11ITIIllTl:
    int row -> row
    int col -> col
    int band -> llIITTlTITI111l1
    int bandTile -> TTlTIl1I11IIlT1l
    int size -> size
    java.lang.String name -> name
    void <init>() -> <init>
    int getRow() -> getRow
    void setRow(int) -> setRow
    int getCol() -> I1Tll1I1IlTTIl1T
    void setCol(int) -> ITlT1IITl11l1lTI
    int getBand() -> ITITT1lTll11I1Il
    void setBand(int) -> l1TlT1T1IlIII1Tl
    int getBandTile() -> lTTlITlITI1111Il
    void setBandTile(int) -> TTT11I1lI1llTIIl
    int getSize() -> getSize
    void setSize(int) -> setSize
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
isf.common.utils.ThreadExecutor -> isf.common.utils.lIlIITlTT111:
    isf.common.utils.ThreadExecutor executor -> l11ITT1llITlITI1
    java.util.concurrent.ExecutorService threadPool -> l1TITl1TITlIlI1
    java.util.concurrent.ExecutorService priorityPool -> TIIllT1I1TTllI1
    int count -> count
    void <init>() -> <init>
    isf.common.utils.ThreadExecutor getInstance() -> llTI1111TIIllTIT
    void execute(java.lang.Runnable,boolean) -> TT1lIT1ll1ITIIl1
    void shutdown() -> shutdown
isf.common.view.gui.SpatialListImage -> isf.common.l1IT1lTI.l11lITTI.l1IlIlTI1T1T:
    java.lang.String getTextView() -> IlTT11IT1ITI1lll
    java.lang.String getTitle() -> getTitle
    java.lang.String getIndexMapName() -> I1TTT1IIlTIll1l
isf.common.view.gui.TextDivision -> isf.common.l1IT1lTI.l11lITTI.lI1lTIIlT1T1:
    java.lang.String isfAssignedTextNo -> lIlI1T1T1llT1ITI
    java.lang.String maintextpubno -> TTlI11IIIlTllT11
    java.lang.String sscode -> Tl1Tl11ITl1IlTII
    java.lang.String textdesctitle -> T1TlI11TITIlIll1
    java.lang.String textdivname -> I1TlTIl1ITTl1lI
    java.lang.String textdivdesc -> TlIIlT1TlII111Tl
    java.lang.String textdivmuseumno -> ITlI1lT11I1IllTT
    java.util.Vector textdivsubdivs -> I1IIl1I1lTT1TllT
    void <init>() -> <init>
    void setIsfAssignedTextNo(java.lang.String) -> ll1TIIIT1lT1TIl1
    java.lang.String getIsfAssignedTextNo() -> I11TTlTl1ITIlI1l
    void setMainTextPubNo(java.lang.String) -> TIT1ITlI1lIl1lT1
    void setSpatialSearchCode(java.lang.String) -> TIIlT111IITTll1l
    java.lang.String getSpatialSearchCode() -> IT1ITllI1lTI1T1l
    void setTextDescTitle(java.lang.String) -> III1Tl1lTllTIT11
    java.lang.String getTextDescTitle() -> TTTI11llTlIII1l
    void setTextDivisionName(java.lang.String) -> lIT1T1lIlT1ITIl
    java.lang.String getTextDivisionName() -> Il1IlTT11TTI1llI
    void setTextDivisionDesc(java.lang.String) -> ITlIIl1TT1Tl1lI
    java.lang.String getTextDivisionDesc() -> ITIl1T1lIT11TIll
    void setTextDivisionMuseumNo(java.lang.String) -> Il1TTlI1lIIlT1T
    java.lang.String getTextDivisionMuseumNo() -> lTTlTII11ll1TII1
    void setTextDivisionSubDivisions(java.util.Vector) -> l1lT1IlI1IlT1TIT
    java.util.Vector getTextDivisionSubDivisions() -> T1IlITlTl1TII1l1
    java.lang.String toString() -> toString
isf.common.view.gui.TextDivisionSubDivision -> isf.common.l1IT1lTI.l11lITTI.Tl1l11IlIITT:
    java.lang.String isfAssignedTextNo -> lIlI1T1T1llT1ITI
    java.lang.String sscode -> Tl1Tl11ITl1IlTII
    java.lang.String textdivname -> I1TlTIl1ITTl1lI
    java.lang.String textdivsubdivname -> TllT1I11Il1TIlIT
    java.lang.String textdesctitle -> T1TlI11TITIlIll1
    void <init>() -> <init>
    void setIsfAssignedTextNo(java.lang.String) -> ll1TIIIT1lT1TIl1
    java.lang.String getIsfAssignedTextNo() -> I11TTlTl1ITIlI1l
    void setSpatialSearchCode(java.lang.String) -> TIIlT111IITTll1l
    java.lang.String getSpatialSearchCode() -> IT1ITllI1lTI1T1l
    void setTextDivisionName(java.lang.String) -> lIT1T1lIlT1ITIl
    java.lang.String getTextDivisionName() -> Il1IlTT11TTI1llI
    void setTextDescTitle(java.lang.String) -> III1Tl1lTllTIT11
    java.lang.String getTextDescTitle() -> TTTI11llTlIII1l
    void setTextDivisionSubDivisionName(java.lang.String) -> I11lT1lTlIIl1TIT
    java.lang.String getTextDivisionSubDivisionName() -> IlTIIT1Tl1llT1I
    java.lang.String toString() -> toString
isf.controls.controllers.ISFGarbageCollector -> isf.controls.l11lITTI.lI1lTIIlT1T1:
    int interval -> lT11lIIIll1TTTI
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void run() -> run
isf.controls.controllers.ImageLoaderManager -> isf.controls.l11lITTI.Tl1l11IlIITT:
    isf.controls.view.listeners.ImageLoaderListener iLL -> lT1I1Il1TlTITIl
    isf.controls.controllers.ImageLoaderManager img -> l1IIll1TTTIIlT
    isf.controls.view.listeners.SortListener sl -> ITITIl1l1TTlI11l
    java.lang.String[] cache -> lTl1IITl11ITIT1l
    void <init>() -> <init>
    isf.controls.controllers.ImageLoaderManager getInstance() -> IIl1ITTlTl1IlT
    void registerListener(isf.controls.view.listeners.ImageLoaderListener) -> TT1lIT1ll1ITIIl1
    isf.controls.view.listeners.ImageLoaderListener getLoader() -> III1ITlTT11l1llT
    void cacheQuery(java.lang.String,java.lang.String) -> l1IlTT1lITIl1IT1
    void resetcache() -> ITll11TTTl1III1l
    java.lang.String[] getCacheQuery() -> II11lT1TlIll1TIT
    void registerSorter(isf.controls.view.listeners.SortListener) -> TT1lIT1ll1ITIIl1
    isf.controls.view.listeners.SortListener getSorter() -> IT11IlT1lIIlTlT
isf.controls.controllers.IsfSplitManager -> isf.controls.l11lITTI.Il1TI1lIT1lT:
    isf.controls.controllers.IsfSplitManager ourInstance -> Il11TITT1lT1llII
    isf.controls.view.containers.ISFSplitPane verticalSplit -> l1IlIT11TTIlIlT1
    isf.controls.view.containers.ISFSplitPane horizontalSplit -> l1lTIlTTIT11lII
    isf.controls.controllers.IsfSplitManager getInstance() -> IlI1T1IlT1ITll1T
    void <init>() -> <init>
    void setSplitPane(isf.controls.view.containers.ISFSplitPane,int) -> TT1lIT1ll1ITIIl1
    void updateState(int) -> ITlT1lll1IITI1T1
isf.controls.controllers.KeyProcessManager -> isf.controls.l11lITTI.l11lIlTTI1TI:
    isf.controls.controllers.KeyProcessManager ourInstance -> I11TITlTlTll1II
    isf.controls.view.listeners.KeyHandler activeKH -> ITlITTIl1llIT111
    java.util.ArrayList handlers -> TTI1lIlI1lITlT1
    isf.controls.controllers.KeyProcessManager getInstance() -> TT11lIlITTl1IlI1
    void <init>() -> <init>
    boolean isKeyStrokeRequired() -> ITTlTI1l1lTIl1I
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
    void addKeyHandler(isf.controls.view.listeners.KeyHandler) -> TT1lIT1ll1ITIIl1
    void setActive(isf.controls.view.listeners.KeyHandler) -> ITI1llTTI1lITl
isf.controls.controllers.LoadManager -> isf.controls.l11lITTI.T11ITIIllTl:
    isf.controls.controllers.LoadManager manager -> llIITl1T11I1TlIT
    int current -> current
    int total -> total
    long maximum -> T1111TlITlIlIITl
    long actual -> IlTIITI1ll1l1T1T
    long loaded -> IlTTl1llTIII11T1
    long lastLoaded -> IITlTl1lI1I11TlT
    int count -> count
    long startTime -> startTime
    javax.swing.Timer timer -> timer
    boolean loading -> ITI1IllIl1TlT1T1
    boolean fromStandalone -> TTll1lTIII1T1I1l
    java.lang.String notLoaded -> IITl1I1lTT1lT1Il
    javax.swing.JProgressBar bar1 -> TTIlllT1I1TI1Il1
    void <init>() -> <init>
    isf.controls.controllers.LoadManager getInstance() -> lTTITIlT1lI1Il
    void updateCount() -> TllTII1Il11lTI1T
    void registerMonitor(javax.swing.JProgressBar) -> TT1lIT1ll1ITIIl1
    void setMaximum(long) -> l1IlTT1lITIl1IT1
    void setActual(long) -> lI1I1T1ITTl1llIT
    long getActual() -> I1T1l1lITIllITT1
    void setTotal(int) -> Il11lTlITT1IlIT
    void update(long) -> update
    void start() -> start
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void stopAnimation() -> llITI11lTlII1T1T
    boolean isLoading() -> IT11TT1TI1IllllI
    java.lang.String getNotLoaded() -> lIIT1T1llT1IlTI1
    void setNotLoaded(java.lang.String) -> llTIT11ITl1I1TlI
isf.controls.controllers.PTMFrameManager -> isf.controls.l11lITTI.lIlIITlTT111:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    isf.ptm.controls.PTMWindow panel -> T1Tl11lIII1TlIlT
    isf.controls.controllers.PTMFrameManager manager -> TT11TlTIII1l1Ill
    java.util.HashMap pfcl -> TIITll1IITlT11l
    double version -> IIlTl1lTl1ITTI1
    int mode -> mode
    boolean autoClick -> T1IIITTll1lTIl
    java.util.HashMap copies -> I1lTITTl1Il1TlI
    boolean diffuse -> l1TIITT1lIIT11ll
    boolean canChange -> l1ITIIT1lI1llT1T
    boolean light -> l1lTIIIT1llI11TT
    boolean isAutoClick() -> TTll1I1TIIIlTl
    void releaseChangeListeners() -> IllTITI1l1l1TTI1
    void releaseChangeListener(isf.ptm.controls.PTMWindow) -> TT1lIT1ll1ITIIl1
    void refreshControls() -> TI1II11ITll1lTTl
    void setPTMWindow(isf.ptm.controls.PTMWindow) -> ITI1llTTI1lITl
    void addCopies(java.lang.String,javax.swing.JInternalFrame) -> TT1lIT1ll1ITIIl1
    java.util.Vector getCopies(java.lang.String) -> llll1IITTT1IT1I1
    void removeCopies(java.lang.String) -> I1TTlTl11llT1III
    isf.ptm.controls.PTMWindow getPTMWindow() -> T1I11TIll1TIlTlI
    void <init>() -> <init>
    isf.controls.controllers.PTMFrameManager getInstance() -> lI1IlTTIIll11T1T
    isf.controls.view.containers.PTMPanel getNewPTMPanel() -> T1lITIlIl1TI1l1T
    double getVersion() -> getVersion
    void setDiffuseOperation(boolean,boolean) -> TT1lIT1ll1ITIIl1
    void setLightOperation(boolean) -> II11llTI1TlTITl1
    isf.controls.view.controls.ISFButton[] getPTMButtons() -> Il11I1lTI1TTTIll
    int getMode() -> getMode
    void setMode(int) -> setMode
    void <clinit>() -> <clinit>
isf.controls.controllers.ToolbarManager -> isf.controls.l11lITTI.Il1TlIT1lTI1:
    isf.controls.controllers.ToolbarManager manager -> TIlI1ITTIT1ll1l
    isf.controls.view.controls.SidToolbar bar -> TIl1Tll1lTIII11T
    void <init>() -> <init>
    isf.controls.controllers.ToolbarManager getInstance() -> IIITlTlT1l1Il11T
    void registerToolbar(isf.controls.view.controls.SidToolbar) -> TT1lIT1ll1ITIIl1
    void updateToolbar() -> llTIT1TIIlI11l1T
    void <clinit>() -> <clinit>
isf.controls.models.DesktopDataObject -> isf.controls.I11lIlTT.l1IlIlTI1T1T:
    java.lang.String header -> lT1lITllTTII111I
    java.lang.String displayName -> IlTI11lll1ITTT1I
    java.lang.String fileName -> fileName
    boolean added -> II1I1Tll1TI1llTT
    java.lang.String photoIdenNo -> TI11T1IIllTIllT
    isf.common.utils.PTMConfig config -> lIl1TI111IlTTlTI
    boolean copy -> II11lTlTllTIIT11
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,isf.common.utils.PTMConfig) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    isf.common.utils.PTMConfig getConfig() -> l1ITITTlITl11Il1
    boolean isCopy() -> lIl11IT1TITlI1Tl
    void setCopy(boolean) -> Il1II1TlT1llTI1T
isf.controls.plaf.DesktopTheme -> isf.controls.plaf.l1IlIlTI1T1T:
    java.awt.Color titleColor -> titleColor
    void <init>(java.awt.Color) -> <init>
    javax.swing.plaf.ColorUIResource getWindowTitleForeground() -> getWindowTitleForeground
    javax.swing.plaf.ColorUIResource getWindowTitleInactiveForeground() -> getWindowTitleInactiveForeground
    javax.swing.plaf.ColorUIResource getWindowTitleBackground() -> getWindowTitleBackground
    javax.swing.plaf.ColorUIResource getWindowTitleInactiveBackground() -> getWindowTitleInactiveBackground
    javax.swing.plaf.ColorUIResource getPrimaryControl() -> getPrimaryControl
isf.controls.plaf.GeneralMenuItemUI -> isf.controls.plaf.GeneralMenuItemUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>() -> <init>
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.GeneralMenuUI -> isf.controls.plaf.GeneralMenuUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>() -> <init>
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.IPArrowButton -> isf.controls.plaf.lI1lTIIlT1T1:
    isf.controls.plaf.IPArrowIcon arrowIcon -> lIlITl1ITlTT1I
    void <init>(int) -> <init>
    boolean isFocusable() -> isFocusable
    void paint(java.awt.Graphics) -> paint
isf.controls.plaf.IPArrowIcon -> isf.controls.plaf.Tl1l11IlIITT:
    java.awt.Polygon arrowPolygon -> I1TT1llTllITI1I1
    java.awt.Polygon downArrowPolygon -> TT11IlIIT1ll1IlT
    java.awt.Color glyphColor -> IT1IIl1l11llITTT
    java.awt.Polygon leftArrowPolygon -> I1llTTl11TTIl1II
    int orientation -> orientation
    boolean paintGlyph -> lll1ITl1TTII11TI
    java.awt.Polygon rightArrowPolygon -> IlIT1T1TllI1ITl
    java.awt.Polygon upArrowPolygon -> TlTII11l1l1ITTIl
    void <init>() -> <init>
    void <init>(int) -> <init>
    int getIconHeight() -> getIconHeight
    int getIconWidth() -> getIconWidth
    int getOrientation() -> getOrientation
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    void setGlyphColor(java.awt.Color) -> lI1I1T1ITTl1llIT
isf.controls.plaf.IPButtonIcon -> isf.controls.plaf.Il1TI1lIT1lT:
isf.controls.plaf.IPButtonUI -> isf.controls.plaf.IPButtonUI:
    isf.controls.plaf.IPButtonUI buttonUI -> lTlTl1ITI1T11IIl
    int radiant -> TT1ll1IITT1llII
    java.awt.Color backgroundColor -> backgroundColor
    java.awt.Color borderColor -> borderColor
    javax.swing.plaf.FontUIResource defaultFont -> ll1IT1TII1Tll1IT
    java.awt.Color disabledBackgroundColor -> T1ITIIllTlI1Tl11
    java.awt.Color disabledBorderColor -> lIIlT1TTIlI1l1T1
    java.awt.Color disabledForegroundColor -> lITl11Ill11ITTTI
    java.awt.Color foregroundColor -> foregroundColor
    java.awt.Color rolloverBackgroundColor -> IT1TT1Tl1II1llIl
    javax.swing.plaf.FontUIResource rolloverFont -> IlTIlI1IT111lTlT
    java.awt.Color rolloverForegroundColor -> lIlT1lTI1I1TlIT
    java.awt.Color selectedBackgroundColor -> TIT1T1lI1IIlTll
    java.awt.Color selectedForegroundColor -> Il1TTlI1TT1lIlI
    java.awt.Color flushableBackgroundColor -> TlI1lllIT1IT1TI
    java.awt.Color flushableForgroundColor -> Tl1TIT1lTlIIIl1
    java.awt.Color flushableBorderColor -> Tl1TlI1lI11TlTII
    javax.swing.plaf.FontUIResource flushableFont -> ll1I1TlIIITl1T1T
    java.awt.Rectangle iconRectangle -> TT1ITlTI11llIIl
    java.awt.Rectangle textRectangle -> ll11l1TI1TTIIITl
    java.awt.Rectangle viewRectangle -> lI1ITTll1ITT11Il
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>() -> <init>
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void installDefaults(javax.swing.AbstractButton) -> installDefaults
    void setBackgroundColor(java.awt.Color) -> IT11TT1lIll1ITIl
    void <clinit>() -> <clinit>
isf.controls.plaf.IPComboBoxUI -> isf.controls.plaf.IPComboBoxUI:
    void <init>() -> <init>
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
isf.controls.plaf.IPComboBoxUI$1 -> isf.controls.plaf.l11lIlTTI1TI:
    isf.controls.plaf.IPComboBoxUI this$0 -> TlTITl1IIl1IlT11
    void <init>(isf.controls.plaf.IPComboBoxUI,javax.swing.JComboBox) -> <init>
    void show() -> show
isf.controls.plaf.IPScrollBarUI -> isf.controls.plaf.IPScrollBarUI:
    java.awt.Color backgroundColor -> backgroundColor
    java.awt.Color borderColor -> borderColor
    javax.swing.border.Border buttonBorder -> TITlITl1l11T1IlI
    java.awt.Color disabledBackgroundColor -> T1ITIIllTlI1Tl11
    java.awt.Color disabledBorderColor -> lIIlT1TTIlI1l1T1
    boolean isArmed -> II11l1T1lITTTllI
    boolean isRollover -> lIT1lIT1TTl1II1l
    java.awt.event.MouseListener mouseListener -> mouseListener
    java.awt.Color rolloverBackgroundColor -> IT1TT1Tl1II1llIl
    java.awt.Color selectedForegroundColor -> Il1TTlI1TT1lIlI
    java.awt.Color thumbBackgroundColor -> TITT11llI11IIllT
    java.awt.Color thumbRolloverBackgroundColor -> Tlll1IT1ITlI1TI
    java.awt.Color trackBackgroundColor -> lI1IIl11IT1llTTT
    void <init>() -> <init>
    void configureArrowButton(javax.swing.JButton) -> TT1lIT1ll1ITIIl1
    javax.swing.JButton createDecreaseButton(int) -> createDecreaseButton
    javax.swing.JButton createIncreaseButton(int) -> createIncreaseButton
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void installDefaults() -> installDefaults
    void installListeners() -> installListeners
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
    void paintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintTrack
    void setArmed(boolean) -> setArmed
    void setRollover(boolean) -> setRollover
    void uninstallDefaults() -> uninstallDefaults
    void uninstallListeners() -> uninstallListeners
    javax.swing.border.Border access$000(isf.controls.plaf.IPScrollBarUI) -> ITI1llTTI1lITl
isf.controls.plaf.IPScrollBarUI$IPScrollBarArrowButton -> isf.controls.plaf.lIlIITlTT111:
    isf.controls.plaf.IPScrollBarUI this$0 -> ITllI11ITTllI1T1
    void setBorder(javax.swing.border.Border) -> setBorder
    void paint(java.awt.Graphics) -> paint
    void <init>(isf.controls.plaf.IPScrollBarUI,int) -> <init>
isf.controls.plaf.IPScrollBarUI$IPScrollBarMouseListener -> isf.controls.plaf.Il1TlIT1lTI1:
    isf.controls.plaf.IPScrollBarUI this$0 -> ITllI11ITTllI1T1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void <init>(isf.controls.plaf.IPScrollBarUI) -> <init>
isf.controls.plaf.IPScrollPaneUI -> isf.controls.plaf.IPScrollPaneUI:
    void <init>() -> <init>
    void installDefaults(javax.swing.JScrollPane) -> installDefaults
    void uninstallDefaults(javax.swing.JScrollPane) -> uninstallDefaults
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
isf.controls.plaf.IPSplitPaneDivider -> isf.controls.plaf.IllTIT1l1IT1:
    int defaultDividerSize -> defaultDividerSize
    int thumbSize -> I1lTlI1T1IlTITl1
    java.awt.Color control -> l1ITIIIll11TTTl1
    javax.swing.ImageIcon icon1 -> TlllTIl1I1TTII1
    javax.swing.ImageIcon icon2 -> T1lIlITlIIl11TT
    javax.swing.ImageIcon current -> lT1lTlIT1lIT1II1
    void <init>(isf.controls.plaf.IPSplitPaneUI) -> <init>
    void setDividerSize(int) -> setDividerSize
    int getDividerSize() -> getDividerSize
    void paint(java.awt.Graphics) -> paint
    void paintTop$6d156780(java.awt.Graphics) -> a
    void paintBottom$3597fb83(java.awt.Graphics) -> b
    void paintLeft$6d156780(java.awt.Graphics) -> c
    void paintRight$3597fb83(java.awt.Graphics) -> d
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void changeImage() -> II1Il1TITl1llTT1
    void <clinit>() -> <clinit>
isf.controls.plaf.IPSplitPaneUI -> isf.controls.plaf.IPSplitPaneUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider() -> createDefaultDivider
    isf.controls.plaf.IPSplitPaneDivider getIsfDivider() -> lIlI1IITll1TT1T1
    int getDividerBorderSize() -> getDividerBorderSize
    void finishedPaintingChildren(javax.swing.JSplitPane,java.awt.Graphics) -> finishedPaintingChildren
    void finishDraggingTo(int) -> finishDraggingTo
    void dragDividerTo(int) -> dragDividerTo
    void startDragging() -> startDragging
isf.controls.plaf.IPVerticalLabelUI -> isf.controls.plaf.IPVerticalLabelUI:
    boolean clockwise -> TIlTl111IT1TlIlI
    java.awt.Rectangle paintIconR -> T11T11ITIllITIll
    java.awt.Rectangle paintTextR -> IT1Tl1TTI11IlllI
    java.awt.Rectangle paintViewR -> TI1Il1TI1Tll1ITl
    java.awt.Insets paintViewInsets -> TTlI1ITl1lITI1l1
    void <init>(boolean) -> <init>
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void <clinit>() -> <clinit>
isf.controls.plaf.ISFComboBoxButton -> isf.controls.plaf.l1TI11ITTIll:
    javax.swing.JComboBox comboBox -> comboBox
    javax.swing.JList listBox -> listBox
    javax.swing.CellRendererPane rendererPane -> rendererPane
    javax.swing.Icon comboIcon -> comboIcon
    boolean iconOnly -> iconOnly
    javax.swing.Icon getComboIcon() -> getComboIcon
    void setIconOnly(boolean) -> setIconOnly
    void <init>() -> <init>
    void <init>(javax.swing.JComboBox,javax.swing.Icon,javax.swing.CellRendererPane,javax.swing.JList) -> <init>
    void <init>(javax.swing.JComboBox,javax.swing.Icon,boolean,javax.swing.CellRendererPane,javax.swing.JList) -> <init>
    boolean isFocusTraversable() -> isFocusTraversable
    void paintComponent(java.awt.Graphics) -> paintComponent
isf.controls.plaf.ISFComboBoxButton$1 -> isf.controls.plaf.IllTIIlT11T:
    isf.controls.plaf.ISFComboBoxButton this$0 -> lI1TIl1TlI1IlTT
    void <init>(isf.controls.plaf.ISFComboBoxButton) -> <init>
    void setArmed(boolean) -> setArmed
isf.controls.plaf.ISFComboBoxEditor -> isf.controls.plaf.TllIII11T1Tl:
    java.awt.Insets editorBorderInsets -> editorBorderInsets
    void <init>() -> <init>
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void <clinit>() -> <clinit>
isf.controls.plaf.ISFComboBoxEditor$EditorBorder -> isf.controls.plaf.ITl11lI1ITTl:
    isf.controls.plaf.ISFComboBoxEditor this$0 -> II1l1llTTTIl1TI
    void <init>(isf.controls.plaf.ISFComboBoxEditor) -> <init>
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
isf.controls.plaf.ISFComboBoxEditor$UIResource -> isf.controls.plaf.IT1llT1I1lTI:
    void <init>() -> <init>
isf.controls.plaf.ISFComboBoxIcon -> isf.controls.plaf.I1TTIllTlI:
    void <init>() -> <init>
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
isf.controls.plaf.ISFComboBoxUI -> isf.controls.plaf.ISFComboBoxUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    javax.swing.ComboBoxEditor createEditor() -> createEditor
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
    javax.swing.JButton createArrowButton() -> createArrowButton
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    java.awt.LayoutManager createLayoutManager() -> createLayoutManager
    void layoutComboBox(java.awt.Container,isf.controls.plaf.ISFComboBoxUI$MetalComboBoxLayoutManager) -> TT1lIT1ll1ITIIl1
    void configureEditor() -> configureEditor
    void unconfigureEditor() -> unconfigureEditor
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    javax.swing.JButton access$000(isf.controls.plaf.ISFComboBoxUI) -> TT1lIT1ll1ITIIl1
    javax.swing.JComboBox access$100(isf.controls.plaf.ISFComboBoxUI) -> ITI1llTTI1lITl
    javax.swing.JComboBox access$200(isf.controls.plaf.ISFComboBoxUI) -> l1IlTT1lITIl1IT1
    javax.swing.JButton access$300(isf.controls.plaf.ISFComboBoxUI) -> lI1I1T1ITTl1llIT
    javax.swing.JButton access$400(isf.controls.plaf.ISFComboBoxUI) -> IlITlTTTl11Il1I
isf.controls.plaf.ISFComboBoxUI$MetalComboBoxLayoutManager -> isf.controls.plaf.Il1IlTT1l1IT:
    isf.controls.plaf.ISFComboBoxUI this$0 -> T1TTIlIl1T1l1IIl
    void <init>(isf.controls.plaf.ISFComboBoxUI) -> <init>
    void layoutContainer(java.awt.Container) -> layoutContainer
    void superLayout(java.awt.Container) -> superLayout
isf.controls.plaf.ISFComboBoxUI$MetalComboPopup -> isf.controls.plaf.I11IlTlI1TlT:
    int visible -> IlTT1I1lT1Il1TIl
    isf.controls.plaf.ISFComboBoxUI this$0 -> T1TTIlIl1T1l1IIl
    void <init>(isf.controls.plaf.ISFComboBoxUI,javax.swing.JComboBox) -> <init>
    void delegateFocus(java.awt.event.MouseEvent) -> delegateFocus
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void configurePopup() -> configurePopup
isf.controls.plaf.ISFComboBoxUI$MetalPropertyChangeListener -> isf.controls.plaf.l1ITTl1IlTI1:
    isf.controls.plaf.ISFComboBoxUI this$0 -> T1TTIlIl1T1l1IIl
    void <init>(isf.controls.plaf.ISFComboBoxUI) -> <init>
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
isf.controls.plaf.ISFSplitPaneDivider -> isf.controls.plaf.IlT1TI1llTI:
    javax.swing.border.Border border -> border
    isf.controls.plaf.ISFSplitPaneUI splitPaneUI -> IlIITl1ll1I1T1TT
    int inset -> TTIl1Il111ITIllT
    int dividerSize -> dividerSize
    int orientation -> orientation
    javax.swing.JSplitPane splitPane -> splitPane
    java.awt.Color controlColor -> lllTTIT11lTI11II
    java.awt.Color primaryControlColor -> TITl1T1ll1lI1ITI
    javax.swing.JButton divBut -> lI1ITllTITTI1l11
    void <init>(isf.controls.plaf.ISFSplitPaneUI) -> <init>
    void paint(java.awt.Graphics) -> paint
    int getOrientationFromSuper() -> getOrientationFromSuper
    javax.swing.JSplitPane getSplitPaneFromSuper() -> getSplitPaneFromSuper
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void setDividerSize(int) -> setDividerSize
    int getDividerSize() -> getDividerSize
    void setBorder(javax.swing.border.Border) -> setBorder
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    javax.swing.border.Border getBorder() -> getBorder
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    javax.swing.JButton access$000(isf.controls.plaf.ISFSplitPaneDivider) -> TT1lIT1ll1ITIIl1
isf.controls.plaf.ISFSplitPaneDivider$ISFDividerLayout -> isf.controls.plaf.TTITllII1l11:
    isf.controls.plaf.ISFSplitPaneDivider this$0 -> TIl111TIIllTlTI
    void <init>(isf.controls.plaf.ISFSplitPaneDivider) -> <init>
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
isf.controls.plaf.ISFSplitPaneUI -> isf.controls.plaf.ISFSplitPaneUI:
    javax.swing.JSplitPane splitPane -> splitPane
    isf.controls.plaf.ISFSplitPaneDivider divider -> llIlTITTT1I11lI
    int orientation -> orientation
    boolean continuousLayout -> continuousLayout
    boolean dividerKeyboardResize -> lTlTI1TIlTI1Il1
    boolean dividerLocationIsSet -> IllTTIl111ITTlI1
    int dividerSize -> dividerSize
    java.awt.Component nonContinuousLayoutDivider -> nonContinuousLayoutDivider
    boolean ignoreDividerLocationChange -> ignoreDividerLocationChange
    isf.controls.plaf.ISFSplitPaneUI$ISFHorizontalLayoutManager layoutManager -> TlITl11I1IlTlTI
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void installDefaults() -> installDefaults
    void resetLayoutManager() -> resetLayoutManager
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    boolean isContinuousLayout() -> isContinuousLayout
    void setContinuousLayout(boolean) -> setContinuousLayout
    javax.swing.JSplitPane getSplitPane() -> getSplitPane
    int getDividerLocation(javax.swing.JSplitPane) -> getDividerLocation
    int getMinimumDividerLocation(javax.swing.JSplitPane) -> getMinimumDividerLocation
    int getMaximumDividerLocation(javax.swing.JSplitPane) -> getMaximumDividerLocation
    void finishedPaintingChildren(javax.swing.JSplitPane,java.awt.Graphics) -> finishedPaintingChildren
    void resetToPreferredSizes(javax.swing.JSplitPane) -> resetToPreferredSizes
    void setDividerLocation(javax.swing.JSplitPane,int) -> setDividerLocation
    int getLastDragLocation() -> getLastDragLocation
    void setNonContinuousLayoutDivider(java.awt.Component) -> setNonContinuousLayoutDivider
    void setNonContinuousLayoutDivider(java.awt.Component,boolean) -> setNonContinuousLayoutDivider
    java.awt.Component createDefaultNonContinuousLayoutDivider() -> createDefaultNonContinuousLayoutDivider
    boolean access$000(isf.controls.plaf.ISFSplitPaneUI) -> TT1lIT1ll1ITIIl1
    boolean access$002(isf.controls.plaf.ISFSplitPaneUI,boolean) -> TT1lIT1ll1ITIIl1
    int access$100(isf.controls.plaf.ISFSplitPaneUI) -> ITI1llTTI1lITl
isf.controls.plaf.ISFSplitPaneUI$1 -> isf.controls.plaf.TI1l1TlTIlI:
    isf.controls.plaf.ISFSplitPaneUI this$0 -> lllIT1T1TIlT1I1I
    void <init>(isf.controls.plaf.ISFSplitPaneUI) -> <init>
    void paint(java.awt.Graphics) -> paint
isf.controls.plaf.ISFSplitPaneUI$ISFHorizontalLayoutManager -> isf.controls.plaf.IlI1Tl11TlTI:
    int[] sizes -> sizes
    java.awt.Component[] components -> components
    int lastSplitPaneSize -> Tl1IT1I1llTTIlI
    boolean doReset -> IIT1I1TlTl1TIll
    int axis -> axis
    isf.controls.plaf.ISFSplitPaneUI this$0 -> lllIT1T1TIlT1I1I
    void <init>(isf.controls.plaf.ISFSplitPaneUI) -> <init>
    void <init>(isf.controls.plaf.ISFSplitPaneUI,int) -> <init>
    void layoutContainer(java.awt.Container) -> layoutContainer
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    void resetToPreferredSizes() -> resetToPreferredSizes
    int getMinimumSizeOfComponent(java.awt.Component) -> getMinimumSizeOfComponent
    int getSizeForPrimaryAxis(java.awt.Dimension) -> getSizeForPrimaryAxis
    int getSizeForSecondaryAxis(java.awt.Dimension) -> getSizeForSecondaryAxis
    int getSizeForPrimaryAxis(java.awt.Insets,boolean) -> getSizeForPrimaryAxis
    int getSizeForSecondaryAxis(java.awt.Insets,boolean) -> getSizeForSecondaryAxis
    void updateComponents() -> updateComponents
isf.controls.plaf.ISFSplitPaneUI$ISFVerticalLayoutManager -> isf.controls.plaf.ll1TTTlI11II:
    isf.controls.plaf.ISFSplitPaneUI this$0 -> lllIT1T1TIlT1I1I
    void <init>(isf.controls.plaf.ISFSplitPaneUI) -> <init>
isf.controls.plaf.InscriptComboUI -> isf.controls.plaf.InscriptComboUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
isf.controls.plaf.InscriptMenuItemUI -> isf.controls.plaf.InscriptMenuItemUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void <init>() -> <init>
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.InscriptScrollBarUI -> isf.controls.plaf.InscriptScrollBarUI:
    void <init>() -> <init>
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
isf.controls.utils.CatalogueConstants -> isf.controls.l1IT1lTI.l1IlIlTI1T1T:
    java.lang.String[][] photoCatalogueNames -> lI1TIll1lITTT1I1
    java.lang.String[][] photoDublinNames -> IlTT1IIl1l1lITT1
    java.lang.String[][] textCatalogueNames -> TT1Illl1ITT1Il1I
    java.lang.String[][] textDublinNames -> T11lTlTlI1lII1TI
    void <clinit>() -> <clinit>
isf.controls.utils.CursorManager -> isf.controls.l1IT1lTI.lI1lTIIlT1T1:
    isf.controls.utils.CursorManager ourInstance -> llT1Il1TITlIIT11
    boolean wait -> IIT1T1lIl11ITllT
    isf.controls.view.listeners.CursorListener cl -> Il1IlIlT11ITTlT1
    isf.controls.utils.CursorManager getInstance() -> IlIlII1llT1TT11T
    void <init>() -> <init>
    void addCursorListener(isf.controls.view.listeners.CursorListener) -> TT1lIT1ll1ITIIl1
    void changeCursor(int) -> IT11TT1lIll1ITIl
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor getCursor() -> getCursor
isf.controls.utils.GlassPaneManager -> isf.controls.l1IT1lTI.Tl1l11IlIITT:
    isf.controls.view.containers.ISFGlassPane jpanel -> TlTIlTIlT1I11l1I
    javax.swing.JRootPane jrp -> TlII1l1TIT1TlI1l
    javax.swing.JFrame mainApp -> Il1TTTIlTI11l1lI
    isf.controls.utils.GlassPaneManager gpm -> Tl11I1lI1ITllITT
    java.awt.Rectangle bounds -> bounds
    void <init>() -> <init>
    isf.controls.utils.GlassPaneManager getInstance() -> TT1ITIllT1l1lI1I
    void showComponent(javax.swing.JComponent,java.awt.Rectangle) -> TT1lIT1ll1ITIIl1
    void showComponent(javax.swing.JComponent) -> ITI1llTTI1lITl
    void hideAll() -> T1TlI11TITIlIll1
    void setUpGlasssPane(javax.swing.JFrame) -> TT1lIT1ll1ITIIl1
    boolean isShowing() -> isShowing
    java.awt.Graphics getGraphics() -> getGraphics
    java.awt.Component getComponent() -> getComponent
isf.controls.utils.ResolutionManager -> isf.controls.l1IT1lTI.T11ITIIllTl:
    isf.controls.utils.ResolutionManager resolutionManager -> Tl1lI1IlIT1TlI1T
    java.awt.Dimension base -> TTlTll11I1Il1ITI
    java.awt.Dimension current -> lT1Il11TII1lTITl
    isf.controls.view.listeners.ImageLoader imageLoader -> lTII1Tl1lTlTI1I1
    java.lang.ClassLoader cl -> cl
    void <init>() -> <init>
    isf.controls.utils.ResolutionManager getInstance() -> ITTI11TlIlll1TI1
    javax.swing.ImageIcon loadImage(java.lang.String) -> IT11l1lTTI1lTIlI
    javax.swing.ImageIcon getImageIcon(java.lang.String) -> ITIlTITl111TlIl
    javax.swing.ImageIcon getScaledWidthIcon(java.lang.String) -> TIl1TT1lTI1I1Ill
    double[] getRatio() -> TlII1T1Il1lIl1TT
    int getFontSize(int) -> llITlIlTI11T11IT
    int getTextColumns(int) -> IT11TTIllIIl1T1l
    boolean isCurrentResolutionLower() -> TlI1TTlII1IT11ll
    java.awt.Dimension getScreen() -> Tl1llTII1Il11TTI
isf.controls.view.containers.CatalougeWindow -> isf.controls.llIT1TI.l11lITTI.l1IlIlTI1T1T:
    isf.controls.view.controls.InscriptButton catButton -> TITTlTl1II1l1Il
    isf.controls.view.controls.InscriptButton dubButton -> l1IIlTTT1II1l1Tl
    javax.swing.JLabel title -> lI1lT1lI1TIT1ITl
    isf.controls.view.controls.InscriptButton close1 -> I1lTITI1lT1TI1ll
    isf.controls.view.controls.InscriptButton close2 -> IIT1TTIll1llIT1
    java.awt.Color bgColor -> llI1l11TTITTIlI
    javax.swing.ImageIcon icon -> IlIlII1llT1TT11T
    javax.swing.ImageIcon titleIcon -> TIllITl1lTI1T1I1
    javax.swing.ImageIcon closeRight -> TTIlllTII1TI11l
    javax.swing.ImageIcon closeLeft -> T1TII1lTI1lITl1l
    java.util.Hashtable ht -> ht
    isf.controls.view.listeners.CWListener cwl -> TIll1IT1IIlT1lT1
    isf.controls.view.containers.InscriptTextPane cat -> I1TTIll1TIllI11T
    int width -> width
    javax.swing.JScrollPane jScrollPane1 -> Ill1ITI1ITT1l1Tl
    java.awt.event.MouseListener ml -> I11llTIT1IlT1lTI
    java.awt.event.MouseMotionListener mml -> I1IlII1lTlTTl11T
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void showDublinData() -> TTl1lI1TITllII
    void showCatalougeData() -> TlIITl1T11ITll1I
    java.lang.String buildCatalougeData() -> IlT11I1ll1TITIlT
    java.lang.String buildDubinData() -> I1llIllT1II11TTT
    java.lang.String getString(java.lang.Object,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean isValid(java.lang.String) -> I1TTT1IIlTIll1l
    javax.swing.ImageIcon access$000() -> ITTll1I1T1I1llIT
    void <clinit>() -> <clinit>
isf.controls.view.containers.CatalougeWindow$1 -> isf.controls.llIT1TI.l11lITTI.lI1lTIIlT1T1:
    isf.controls.view.containers.CatalougeWindow this$0 -> llIT1IIIT1lT1Tl1
    void <init>(isf.controls.view.containers.CatalougeWindow) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.containers.ISFGlassPane -> isf.controls.llIT1TI.l11lITTI.Il1TI1lIT1lT:
    javax.swing.JFrame frame -> lTI1T11TlITll1II
    java.awt.Point point -> ITlIITTI1l11Tl1l
    boolean processEvent -> lITl1TTlT1II11Il
    void <init>(javax.swing.JFrame) -> <init>
    void eventDispatched(java.awt.AWTEvent) -> eventDispatched
    boolean contains(int,int) -> contains
isf.controls.view.containers.ISFSplitPane -> isf.controls.llIT1TI.l11lITTI.l11lIlTTI1TI:
    int topHeight -> TT1TIlITIll11Il1
    int lastPosition -> l1I1IT11TTllTlII
    int curloc -> I11I1Tl1IllTlTIT
    void <init>() -> <init>
    void <init>(int,boolean,java.awt.Component,java.awt.Component,int,int) -> <init>
    void paintChildren(java.awt.Graphics) -> paintChildren
    int getMaximumDividerLocation() -> getMaximumDividerLocation
    int getMinimumDividerLocation() -> getMinimumDividerLocation
    void setOneSize(int) -> TIlTl1I1Il11TIlT
    void updateUI() -> updateUI
    void updateLocation() -> lIlTT1l11ITII1lT
    void setDivider(int) -> llT1lIITlIT11IT1
    int getCurrentPos() -> getCurrentPos
    void changeImage() -> II1Il1TITl1llTT1
isf.controls.view.containers.ImagePanel -> isf.controls.llIT1TI.l11lITTI.T11ITIIllTl:
    java.awt.Graphics offScreen -> lT1TIIl1TlITl1I1
    java.awt.image.BufferedImage offImg -> TlI1lTII11l1TlTI
    java.awt.Point sp -> llT11ITTITIl11lI
    java.awt.Point ep -> TTTIlII1T1l1ll1I
    int ax -> ax
    int ay -> ay
    int aw -> TlII1T1Il1lIl1TT
    int ah -> TlI1TTlII1IT11ll
    boolean active -> active
    boolean working -> TllII11IlTTT11Il
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    isf.controls.view.listeners.SizeChangeListener notifier -> TlI1lI1T1TlTI1lI
    void <init>() -> <init>
    void addImage(javax.swing.ImageIcon) -> lI1I1T1ITTl1llIT
    boolean isLoading() -> IT11TT1TI1IllllI
    boolean isPTMPanel() -> lI1TTT1l1llTI1II
    boolean isHSHPanel() -> lTT1llI1I1TlT1II
    boolean mustCurbResize() -> TTII1lllT1T1IlI
    boolean isAtMaxLevel() -> l1ll1TTIIl1IITT
    void setMessageShown(boolean) -> IlITlTTTl11Il1I
    boolean getMessageShown() -> IT1lTTI11llTIl1I
    void setStart(java.awt.Point) -> lI1I1T1ITTl1llIT
    void setEnd(java.awt.Point) -> IlITlTTTl11Il1I
    void drawRect(java.awt.Graphics) -> TT1lIT1ll1ITIIl1
    java.lang.String getDetails() -> IT1TlTl1I1TIlIl
    java.lang.String saveImage(java.lang.String,java.lang.String) -> lI1I1T1ITTl1llIT
    void setActive(boolean) -> setActive
    void setSizeNotifier(isf.controls.view.listeners.SizeChangeListener) -> TT1lIT1ll1ITIIl1
isf.controls.view.containers.InscriptTextPane -> isf.controls.llIT1TI.l11lITTI.lIlIITlTT111:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    boolean scale -> TIll1I11Tl1lITTI
    java.awt.event.MouseListener ml -> I11llTIT1IlT1lTI
    java.awt.event.MouseMotionListener mml -> I1IlII1lTlTTl11T
    void <init>(java.awt.Dimension,boolean) -> <init>
    void paint(java.awt.Graphics) -> paint
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void hyperlinkUpdate(javax.swing.event.HyperlinkEvent) -> hyperlinkUpdate
isf.controls.view.containers.JIFrame -> isf.controls.llIT1TI.l11lITTI.Il1TlIT1lTI1:
    java.lang.String header -> lT1lITllTTII111I
    java.lang.String imgName -> T1T11IIlllI1TITl
    java.lang.String size -> TIl1T1IlT1IIl1lT
    int orgLev -> l1TIT1Tl1l1lITII
    int maxLev -> Tl11lTIT1TlIII1l
    int curLev -> llIITIll1T1TTI1
    int wid -> TlTIl1T1TIl1lII
    int hei -> TT11Il1TTIllIIl1
    int w -> w
    int h -> h
    java.lang.String cpx -> TlTIlTIl1l1TI1I1
    java.lang.String cpy -> TllTIl11IlIT1TI
    java.awt.Point start -> T1T1lIlTTllIII
    java.awt.Point end -> l1ITITTlITl11Il1
    int px -> px
    int py -> py
    isf.controls.view.containers.ViewerPanel jip -> TlI1Il1Tl1lII1TT
    boolean active -> active
    java.awt.Cursor zin -> l1TI1ll1TlTIIIT1
    java.awt.Cursor zout -> TlI1TlIIlIT11Tl
    java.awt.Cursor drsel -> ITTI11TlIlll1TI1
    java.awt.Cursor hando -> ITII1lT1ll11lITT
    java.awt.Cursor handc -> T1I1TT1I1IITllll
    java.awt.Cursor light -> TIllTT1TIll1II
    java.awt.Cursor old -> IIlll1I1TTI1TTl
    int index -> index
    java.lang.String currentUrl -> IIllIllTI111TT1T
    boolean updated -> I11TIIlllT1TI1Tl
    org.apache.log4j.Logger logger -> logger
    javax.swing.JComponent comp -> Tl1l1lIITI1l1ITT
    java.awt.Rectangle rect -> rect
    boolean glassPaneShowing -> lIlIT1TllII11TT1
    boolean copy -> II11lTlTllTIIT11
    void <init>() -> <init>
    void <init>(isf.controls.models.DesktopDataObject) -> <init>
    void <init>(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> <init>
    void update() -> update
    void reset() -> reset
    void setLevel(int,int) -> TT1lIT1ll1ITIIl1
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void updateImg() -> lTlITlT1lII1IT11
    float levelCvt(int,int) -> ITI1llTTI1lITl
    void calculateDiff() -> I1IlT1llIT1Tl1IT
    void zoomOut() -> ITllTT11IllIT1I1
    void setBounds(int,int,int,int) -> setBounds
    void isActive(boolean) -> ITl1I11TIlTlTlI1
    java.lang.String getRet() -> T1IT1lTIIIT1l1ll
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    java.lang.String getProperties() -> TIlIT11l1lIT1ITl
    void resetAll() -> ITIlTITl111TlIl
    void saveAs(java.lang.String) -> I1Tlll1TTTI1Il1I
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    java.lang.String getImgName() -> lI11l1lIlT1TTTII
    void setMode(int) -> setMode
    isf.controls.view.containers.ImagePanel getImagePanel() -> IIIlTTll11I11TlT
    boolean isCopy() -> lIl11IT1TITlI1Tl
    isf.controls.view.containers.ViewerPanel access$000(isf.controls.view.containers.JIFrame) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor access$100() -> access$100
    void <clinit>() -> <clinit>
isf.controls.view.containers.JIFrame$1 -> isf.controls.llIT1TI.l11lITTI.l1lIl1TTTI1I:
    isf.common.utils.PTMConfig val$config -> lIIT11lTTTI1l1Il
    isf.controls.models.DesktopDataObject val$dsk -> TT11llTTIllII11I
    isf.controls.view.containers.JIFrame this$0 -> llTlIIT1lI1TTI
    void <init>(isf.controls.view.containers.JIFrame,isf.common.utils.PTMConfig,isf.controls.models.DesktopDataObject) -> <init>
    void run() -> run
isf.controls.view.containers.JIFrame$2 -> isf.controls.llIT1TI.l11lITTI.TTl11llIITI:
    isf.controls.view.containers.JIFrame this$0 -> llTlIIT1lI1TTI
    void <init>(isf.controls.view.containers.JIFrame) -> <init>
    void run() -> run
isf.controls.view.containers.PTMImpl -> isf.controls.llIT1TI.l11lITTI.IllTIT1l1IT1:
    void <init>() -> <init>
    void fitToSize() -> lTl1lTTIIIT1l1I
    void addImage(javax.swing.ImageIcon) -> lI1I1T1ITTl1llIT
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    void addImage(isf.controls.models.DesktopDataObject) -> l1IlTT1lITIl1IT1
    void reset() -> reset
    boolean isLoading() -> IT11TT1TI1IllllI
    java.lang.String getDetails() -> IT1TlTl1I1TIlIl
    isf.ptm.formats.PTM getPTM() -> TT1I1lTITll1lI1I
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void setMessageShown(boolean) -> IlITlTTTl11Il1I
    boolean getMessageShown() -> IT1lTTI11llTIl1I
    boolean mustCurbResize() -> TTII1lllT1T1IlI
    void setFrameActive(boolean) -> I1TTT1IIlTIll1l
isf.controls.view.containers.PTMPanel -> isf.controls.llIT1TI.l11lITTI.l1TI11ITTIll:
    isf.ptm.utils.LightSource[] lights -> lITTTlT1l1I1lI1I
    boolean lockLights -> IllITIT11IT1lTl
    void <init>() -> <init>
    void fitToSize() -> lTl1lTTIIIT1l1I
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    void addImage(isf.controls.models.DesktopDataObject) -> l1IlTT1lITIl1IT1
    void reset() -> reset
    void setSizeNotifier(isf.controls.view.listeners.SizeChangeListener) -> TT1lIT1ll1ITIIl1
    boolean isPTMPanel() -> lI1TTT1l1llTI1II
isf.controls.view.containers.PTMPanelImpl -> isf.controls.llIT1TI.l11lITTI.IllTIIlT11T:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    boolean animated -> TI11ITT1llIlITl
    boolean frameActive -> Tlll111lITITI1IT
    boolean loading -> ITI1IllIl1TlT1T1
    boolean paintPosition -> T1TII1TlIlTlI1l
    java.lang.Thread animator -> lTI1TIlI1TT1ll1I
    int mouseX -> IlI1T1IlT1ITll1T
    int mouseY -> TT11lIlITTl1IlI1
    short[] mutex -> lTl11Tl1I1IITITl
    isf.ptm.operations.Operation pixelTransformOp -> TIl1llIT1ITlI1T
    isf.common.utils.SegmentUtils[] segments -> T11TIIl1l1TTIlIl
    int activeLight -> ll1IT1I1lIlTTTI1
    isf.ptm.formats.PTM ptm -> IT1TlIII11TlTll
    int curWid -> lTlI1ITI11TlI1lT
    int curHei -> l1II1l1ITTTIll1T
    boolean dragging -> TlT1TII1llIIlT11
    java.lang.String fName -> fName
    java.lang.String thumbname -> T11llI1TIlTT1lII
    long size -> size
    double zoom -> lII1TlTIl1lTT1I1
    java.awt.image.BufferedImage actImg -> l1IT1lI1lIITTTl1
    int divx -> TlTT11IlIIll1T1I
    int divy -> ITTlllIT1I111lTI
    float ratio -> TTlT11IIl11lIlIT
    int[] pixels -> TlTl1ITllI1I11IT
    int[] tiles -> IT1lI1lTl1TI1ITl
    int peices -> TITI11l1llTITl1I
    int displayWidth -> I1Il11lllITTT1IT
    int displayHeight -> l11lITlITTlI1I1T
    int rows -> rows
    int cols -> cols
    int segSize -> TTIlTIIlT1l1l11I
    boolean hints -> l1Il1TTITlT1I1lI
    boolean isFast -> Il11llTlTTIIT1I1
    boolean fixed -> fixed
    int width -> width
    int height -> height
    int posx -> lITITlT11I11TIll
    int posy -> lIITI11lT1lTTlI1
    boolean contained -> IT1I1l1llTT1ITlI
    boolean atMaxLevel -> T1l1lI11ITTlTIIl
    boolean shown -> ITTll11IIlI1lTT1
    boolean drawRect -> TlTl1IllIITT1I1
    int obtained -> IlT1lTlT1T1IlI1I
    boolean calculated -> lTT1ITIlTlIl11I1
    boolean copied -> lIT1Tl1TIIlI1l1T
    isf.controls.view.containers.StatusPanel status -> llIIITTIl111lTT
    int newPX -> T1T1TllIII1TIl1l
    int newPY -> ll1I1II1TITTTl1l
    int newMX -> TI11TTllIlIlTI1
    int newMY -> I11TITlITl11lIlT
    int newDW -> TIII1T1lTl1TllI1
    int newDH -> TTl11TlIIlTII11l
    float factor -> ITl11TlTIlTlI1I
    int MAXPIXELS -> l1T1lTIIII1TllT1
    boolean thumbnailCached -> TIIlITI1Tl1l1l1T
    float dxLight -> ITI1ll11TlT1lITI
    float dyLight -> Tl1llIIlIIT1T1T
    int clickXImageCoordinate -> l1IlTITIT1llT11I
    int clickYImageCoordinate -> IlTlI111ITT1lITl
    isf.common.utils.PTMConfig config -> lIl1TI111IlTTlTI
    int times -> ITllT1l1l1TII1IT
    boolean isRTI -> TITlITlTIIl111l
    boolean firstView -> IIllIlT1111TlITT
    boolean multiView -> TlIl1IT1lTTIl1I
    void <init>() -> <init>
    void fireTransform() -> TIllIlT1I1T1TIl1
    boolean isAdditionalLight() -> TIlIl1T1Tl11lITI
    isf.ptm.formats.PTM getPTM() -> TT1I1lTITll1lI1I
    void loadLocalFile(java.lang.String) -> lT1TlTIlIlT1I1I1
    void loadFile(isf.common.utils.PTMConfig) -> lI1I1T1ITTl1llIT
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void paint(java.awt.Graphics) -> paint
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void run() -> run
    void setAnimated(boolean) -> setAnimated
    void start() -> start
    void addImage(javax.swing.ImageIcon) -> lI1I1T1ITTl1llIT
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.controls.models.DesktopDataObject) -> l1IlTT1lITIl1IT1
    boolean isLoading() -> IT11TT1TI1IllllI
    boolean isPTMPanel() -> lI1TTT1l1llTI1II
    boolean isHSHPanel() -> lTT1llI1I1TlT1II
    void zoomToFitDisplay() -> l11TlTlTI1IlI1TI
    java.lang.String getDetails() -> IT1TlTl1I1TIlIl
    java.lang.String arrayToString(float[]) -> l1IlTT1lITIl1IT1
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void fitToSize() -> lTl1lTTIIIT1l1I
    void reset() -> reset
    void calculateValuesAtFullSize() -> T1lITlIT1I11ITll
    void performResizeOnPTM() -> ITlTll1lTTII111I
    boolean isAtMaxLevel() -> l1ll1TTIIl1IITT
    void setMessageShown(boolean) -> IlITlTTTl11Il1I
    boolean getMessageShown() -> IT1lTTI11llTIl1I
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    boolean mustCurbResize() -> TTII1lllT1T1IlI
    void calcLightVector() -> T11TTlTlIIlIIl11
    void setFrameActive(boolean) -> I1TTT1IIlTIll1l
    void setDefaultLight() -> TIllIlITTIT1l111
    void setEnd(java.awt.Point) -> IlITlTTTl11Il1I
    java.lang.String saveImage(java.lang.String,java.lang.String) -> lI1I1T1ITTl1llIT
    java.lang.String access$002(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> TT1lIT1ll1ITIIl1
    java.lang.String access$000(isf.controls.view.containers.PTMPanelImpl) -> TT1lIT1ll1ITIIl1
    java.lang.String access$102(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> ITI1llTTI1lITl
    long access$202(isf.controls.view.containers.PTMPanelImpl,long) -> TT1lIT1ll1ITIIl1
    isf.ptm.formats.PTM access$302(isf.controls.view.containers.PTMPanelImpl,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    isf.ptm.formats.PTM access$300(isf.controls.view.containers.PTMPanelImpl) -> ITI1llTTI1lITl
    void access$400(isf.controls.view.containers.PTMPanelImpl) -> l1IlTT1lITIl1IT1
    org.apache.log4j.Logger access$500(isf.controls.view.containers.PTMPanelImpl) -> lI1I1T1ITTl1llIT
    void access$600(isf.controls.view.containers.PTMPanelImpl) -> IlITlTTTl11Il1I
    boolean access$702(isf.controls.view.containers.PTMPanelImpl,boolean) -> TT1lIT1ll1ITIIl1
    long access$200(isf.controls.view.containers.PTMPanelImpl) -> IT11TT1lIll1ITIl
    void access$800(isf.controls.view.containers.PTMPanelImpl) -> TIITI1lTlTl1Il11
    short[] access$900(isf.controls.view.containers.PTMPanelImpl) -> TTl1TITI1l1Il1lI
    isf.common.utils.SegmentUtils[] access$1100(isf.controls.view.containers.PTMPanelImpl) -> IITTlT11lII1T1ll
    int access$1200(isf.controls.view.containers.PTMPanelImpl) -> l1IllT11TIIT1ITl
    int access$1300(isf.controls.view.containers.PTMPanelImpl) -> l1lT1IlI1IlT1TIT
    int access$1400(isf.controls.view.containers.PTMPanelImpl) -> IlIT1lT1TI1IlT1l
    boolean access$1500(isf.controls.view.containers.PTMPanelImpl) -> II11llTI1TlTITl1
    int access$1302(isf.controls.view.containers.PTMPanelImpl,int) -> TT1lIT1ll1ITIIl1
    int access$1402(isf.controls.view.containers.PTMPanelImpl,int) -> ITI1llTTI1lITl
    int access$1600(isf.controls.view.containers.PTMPanelImpl) -> T1TlITlIl11I1TIl
    isf.ptm.operations.Operation access$1700(isf.controls.view.containers.PTMPanelImpl) -> Il1II1TlT1llTI1T
    int[] access$1800(isf.controls.view.containers.PTMPanelImpl) -> lITTlIlT1IlI1T
    void <clinit>() -> <clinit>
isf.controls.view.containers.PTMPanelImpl$1 -> isf.controls.llIT1TI.l11lITTI.TllIII11T1Tl:
    long start -> start
    java.lang.String val$ptmFile -> llTTI11Il1lT1ITI
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIITllTI1lTT11I1
    void <init>(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> <init>
    java.lang.Object construct() -> Ill1lITlI1TTIT1
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$1$1 -> isf.controls.llIT1TI.l11lITTI.ITl11lI1ITTl:
    isf.controls.view.containers.PTMPanelImpl$1 this$1 -> l111TIIlTI1llITT
    void <init>(isf.controls.view.containers.PTMPanelImpl$1) -> <init>
    void run() -> run
isf.controls.view.containers.PTMPanelImpl$3 -> isf.controls.llIT1TI.l11lITTI.Il1IlTT1l1IT:
    java.lang.String val$ptmFile -> llTTI11Il1lT1ITI
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIITllTI1lTT11I1
    void <init>(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> <init>
    java.lang.Object construct() -> Ill1lITlI1TTIT1
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$4 -> isf.controls.llIT1TI.l11lITTI.I11IlTlI1TlT:
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIITllTI1lTT11I1
    void <init>(isf.controls.view.containers.PTMPanelImpl) -> <init>
    java.lang.Object construct() -> Ill1lITlI1TTIT1
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$FetchImage -> isf.controls.llIT1TI.l11lITTI.l1ITTl1IlTI1:
    java.lang.String file -> file
    int index -> index
    isf.ptm.formats.PTM ptm -> IT1TlIII11TlTll
    int row -> row
    int col -> col
    int tilew -> I1TI11lTllT1IIlT
    int tileh -> I11TTI1llll1IITT
    int band -> llIITTlTITI111l1
    int top -> top
    int left -> left
    int tileIndex -> TlllTT11I11IIIlT
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIITllTI1lTT11I1
    void <init>(isf.controls.view.containers.PTMPanelImpl,isf.common.utils.SegmentUtils,isf.ptm.formats.PTM) -> <init>
    void run() -> run
isf.controls.view.containers.PTMPanelImpl$UpdateProgress -> isf.controls.llIT1TI.l11lITTI.IlT1TI1llTI:
    boolean changed -> ITTIll1lT11l1IIT
    javax.swing.Timer timer -> timer
    int count -> count
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIITllTI1lTT11I1
    void <init>(isf.controls.view.containers.PTMPanelImpl) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.containers.PTMPanelImpl$UpdateProgress$1 -> isf.controls.llIT1TI.l11lITTI.TIlT1lTIIl:
    isf.controls.view.containers.PTMPanelImpl$UpdateProgress this$1 -> lT1TIllT1ITI11lI
    void <init>(isf.controls.view.containers.PTMPanelImpl$UpdateProgress) -> <init>
    void run() -> run
isf.controls.view.containers.ProgressPane -> isf.controls.llIT1TI.l11lITTI.T1lTlIIlT1I:
    javax.swing.JPanel panel -> TlITTTII1ll1Il1
    javax.swing.JProgressBar progress -> lTTI1IlllI1I11TT
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    void registerBar() -> lI11Tl1lTITT1IlI
    java.lang.String fetchFileNames() -> I1TIllITT1I1l1Tl
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
isf.controls.view.containers.ProgressPane$1 -> isf.controls.llIT1TI.l11lITTI.TTITllII1l11:
    isf.controls.view.containers.ProgressPane this$0 -> Tl1llI1ITIITTl11
    void <init>(isf.controls.view.containers.ProgressPane) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.containers.SidPanel -> isf.controls.llIT1TI.l11lITTI.TI1l1TlTIlI:
    javax.swing.ImageIcon ic -> I1I1llTTTTI1l1lI
    int width -> width
    int height -> height
    int maxlevel -> IT1Tl11ll1ITlTII
    int curlevel -> l1lITTITlIlTI1
    java.lang.String imgName -> T1T11IIlllI1TITl
    java.lang.String fileSize -> llIl1Tl11IIITT1T
    boolean firstTime -> firstTime
    boolean shown -> ITTll11IIlI1lTT1
    void <init>() -> <init>
    void addImage(javax.swing.ImageIcon) -> lI1I1T1ITTl1llIT
    void paint(java.awt.Graphics) -> paint
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    boolean isAtMaxLevel() -> l1ll1TTIIl1IITT
    boolean isLoading() -> IT11TT1TI1IllllI
    java.lang.String getDetails() -> IT1TlTl1I1TIlIl
    void setImgWidth(int) -> TIITI1lTlTl1Il11
    void setImgHeight(int) -> TTl1TITI1l1Il1lI
    void setMaxLevel(int) -> IITTlT11lII1T1ll
    void setCurLevel(int) -> l1IllT11TIIT1ITl
    void setFileSize(java.lang.String) -> IT11TTIllIIl1T1l
    void setImgName(java.lang.String) -> TIlTl1I1Il11TIlT
    void setMessageShown(boolean) -> IlITlTTTl11Il1I
    boolean getMessageShown() -> IT1lTTI11llTIl1I
    boolean mustCurbResize() -> TTII1lllT1T1IlI
isf.controls.view.containers.StatusPanel -> isf.controls.llIT1TI.l11lITTI.IlI1Tl11TlTI:
    isf.controls.view.controls.ISFProgressBar bar -> TIlTlI11l1TlTI1I
    void <init>() -> <init>
    void showStatus(java.lang.String) -> showStatus
    void start() -> start
    void stop() -> stop
isf.controls.view.containers.TrimmedPanel -> isf.controls.llIT1TI.l11lITTI.ll1TTTlI11II:
    java.awt.Insets ins -> T1IlTTIIIlll1T11
    void <init>() -> <init>
    void <init>(java.awt.Insets) -> <init>
    java.awt.Insets getInsets() -> getInsets
isf.controls.view.containers.ViewDesktop -> isf.controls.llIT1TI.l11lITTI.lITIIlTT1l:
    isf.controls.view.listeners.ViewDesktopListener vdListener -> TI11TTlllIlT1II1
    isf.controls.view.containers.ViewDesktopPanels vdtPanels -> l11TTIlITT1ll1II
    java.util.Vector v -> lITT1Il1TIl1lTI
    java.awt.Frame parent -> l1lTlT11ITlI1IIT
    isf.controls.view.containers.CatalougeWindow cp -> IITl1lTl1ITI11Tl
    java.awt.Rectangle old -> llITI11lTlII1T1T
    java.awt.Point p -> ITTlTI1l1lTIl1I
    java.awt.Point temp -> I1T1l1lITIllITT1
    int xposition -> II11lT1TlIll1TIT
    int yposition -> IT11IlT1lIIlTlT
    void <init>() -> <init>
    void <init>(java.awt.Frame) -> <init>
    void init() -> init
    void addDataObject(isf.controls.models.DesktopDataObject) -> IlITlTTTl11Il1I
    void addDummy(java.lang.String) -> I1TT1IIll1ll1TTI
    void addViewDesktopListener(isf.controls.view.listeners.ViewDesktopListener) -> TT1lIT1ll1ITIIl1
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.awt.Insets getInsets() -> getInsets
    isf.controls.view.listeners.ViewDesktopListener getVDL() -> II1I1l1TlTTlITl1
    java.awt.Dimension getCatButtonSize() -> TTllITTII1l11lI1
    void setSelectedData(java.util.Vector) -> l1IlTT1lITIl1IT1
    void activationChanged() -> TTlTl1l1lIT1III
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void reset() -> reset
isf.controls.view.containers.ViewDesktopPanels -> isf.controls.llIT1TI.l11lITTI.ITTII1T1l1ll:
    java.awt.event.ActionListener al -> ITTTT11lIIIlll11
    isf.controls.view.controls.ViewDesktopButton emptyButton -> l1IIllT11ITT1lTI
    isf.controls.view.controls.InscriptButton catButton -> TITTlTl1II1l1Il
    isf.controls.view.controls.InscriptButton dublincatButton -> llII11I1lTTTl1TI
    isf.controls.view.controls.ViewDesktopButton button -> TTlI1I1Il1llT1IT
    javax.swing.JPanel emptyPanel -> I11llITIlTITlT11
    javax.swing.JPanel dataPanel -> TIT1TI1lTl1I1lIl
    javax.swing.JPanel catalogPanel -> lTIT1lT1TIlI1lI1
    java.util.Vector imageList -> l1lTlI1TlTI1TII
    int activeIndex -> l11TIlIT1IT1TllI
    isf.controls.view.listeners.ActivationListener acl -> ITI1TlTTl1l1IlI
    boolean notified -> notified
    int index -> index
    boolean border1 -> lTl11Il1TIl1IITT
    boolean border2 -> T11T1TlllIITII1l
    java.util.Vector selectedData -> lIT11TITl1TI1llI
    java.lang.String mode -> I1lIlITlTT1TI1l
    java.lang.String appName -> l1TlI11IIlTTIlT
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    void addDataObject(isf.controls.models.DesktopDataObject) -> IlITlTTTl11Il1I
    void addDummy(java.lang.String) -> I1TT1IIll1ll1TTI
    java.util.Vector getDataList() -> TTITII1TIll1l1l1
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void addActivationListener(isf.controls.view.listeners.ActivationListener) -> TT1lIT1ll1ITIIl1
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void minimized(java.lang.String) -> l1Il1TTIITIl1Tl
    void activated(java.lang.String) -> I1ll11TlTIITlT1I
    void setSelectedData(java.util.Vector) -> l1IlTT1lITIl1IT1
    java.util.Hashtable getActiveImageData() -> IT1TIllT1TlIl1I1
    void deleted(java.lang.String) -> IlI1Il1T1TlTITl1
    void buttonSelected(java.lang.String) -> l1ll1TTIIl1IITT
    void reset() -> reset
isf.controls.view.containers.ViewerPanel -> isf.controls.llIT1TI.l11lITTI.TlIT11IITll:
    isf.controls.view.containers.ImagePanel panel -> lTI11lTIlTTl11II
    isf.controls.view.containers.StatusPanel status -> llIIITTIl111lTT
    java.lang.String type -> type
    javax.swing.JLabel label -> label
    void <init>(java.lang.String) -> <init>
    isf.controls.view.containers.ImagePanel getPanel() -> I1ll11TTIlIlT1IT
    isf.controls.view.containers.StatusPanel getStatus() -> l1TIIlTlT11TIlI
    void updateSize(java.lang.String) -> IT11TT1TI1IllllI
isf.controls.view.controls.ISFButton -> isf.controls.llIT1TI.I11lIlTT.l1IlIlTI1T1T:
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    void setSelected(boolean) -> setSelected
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
isf.controls.view.controls.ISFProgressBar -> isf.controls.llIT1TI.I11lIlTT.lI1lTIIlT1T1:
    int SLOW -> TI1IllTTTl1lII11
    int speed -> I1TTlITl1I1l1TlI
    javax.swing.Timer timer -> timer
    boolean running -> running
    java.awt.Color bgColor -> llI1l11TTITTIlI
    java.awt.Color forecolor -> TI11lllTTIl1ITI
    java.awt.Color barBgColor -> lITI11IT1l1lTTlI
    java.util.ArrayList bars -> lIl11TTII1I1TlTl
    boolean rectsInitialized -> TlT11IlTII1lT1lI
    java.awt.Dimension size -> size
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int HIGH -> T1lTlIT1I1T1IllI
    int MED -> T1IllI11TIlTTl1I
    int LOW -> Il1TTI11TT1llIlI
    int OFF -> OFF
    int pos -> pos
    int direction -> direction
    java.lang.String message -> message
    java.awt.image.BufferedImage backBuffer -> TlTT111I1IlTIllI
    java.util.HashMap colorMap -> lI1TlII1T1TIllT1
    void <init>(java.awt.Color) -> <init>
    void setText(java.lang.String) -> setText
    void setBackgroundColor(java.awt.Color) -> IT11TT1lIll1ITIl
    void setForegroundColor(java.awt.Color) -> TIITI1lTlTl1Il11
    java.awt.Color getLighterColor(java.awt.Color) -> l1IllT11TIIT1ITl
    void paint(java.awt.Graphics) -> paint
    void stopAnimation() -> llITI11lTlII1T1T
    void initializeBars() -> I1IlT1lTlIITlT11
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void startAnimation() -> ll1lTIlTTI1I1I1T
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void <clinit>() -> <clinit>
isf.controls.view.controls.ISFProgressBar$Bar -> isf.controls.llIT1TI.I11lIlTT.Tl1l11IlIITT:
    int state -> state
    java.awt.Rectangle rect -> rect
    boolean stateModified -> lTlTlT1IIlT11II1
    isf.controls.view.controls.ISFProgressBar this$0 -> lIT1IlTITT11l1lI
    void <init>(isf.controls.view.controls.ISFProgressBar,int) -> <init>
    void setRect(java.awt.Rectangle) -> ITI1llTTI1lITl
    java.awt.Rectangle getRect() -> llTIITT111Il1TIl
    boolean isStateModified() -> IllII1TlT1lTTI1
    void setStateModified(boolean) -> lllITTIlTTII1111
    int getState() -> getState
    void setState(int) -> setState
isf.controls.view.controls.InscriptBorder -> isf.controls.llIT1TI.I11lIlTT.l11lIlTTI1TI:
    java.awt.Color col -> l1IlIT11lIT1ITTl
    void <init>(java.awt.Color) -> <init>
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
isf.controls.view.controls.InscriptButton -> isf.controls.llIT1TI.I11lIlTT.T11ITIIllTl:
    java.lang.String imageUrl -> lTI1TI1IT1TI1lll
    void <init>(java.lang.String) -> <init>
    void setScaledStatus(boolean) -> ITllTI1lTII11l1T
    void <init>(javax.swing.ImageIcon) -> <init>
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.controls.IsfComboBox -> isf.controls.llIT1TI.I11lIlTT.lIlIITlTT111:
    int popupWidth -> I1l1lT1lI1TTTIlI
    void <init>(java.util.Vector) -> <init>
    void setPopupWidth(int) -> IllTT1IITl11lT1I
    java.awt.Dimension getPopupSize() -> Tl1I1I1I1lTlTlTI
isf.controls.view.controls.SidDesktop -> isf.controls.llIT1TI.I11lIlTT.Il1TlIT1lTI1:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    boolean masked -> TTT111IlTll1IIlI
    java.util.Vector avail -> l1TTlT1I1llTII1I
    javax.swing.JDesktopPane jp -> lIT1lTITTlI111lI
    isf.controls.view.containers.JIFrame[] frames -> I1lTI1TT1TIllIl1
    int count -> count
    isf.controls.view.controls.SidToolbar sidtoolbar -> lIITlTTTIlI1l
    java.awt.Cursor current -> Il1TTIlIT1TIl1l1
    boolean loading -> ITI1IllIl1TlT1T1
    java.lang.String about -> Ill1ITIlTTITl
    void <init>() -> <init>
    java.awt.Insets getInsets() -> getInsets
    javax.swing.border.Border getBorder() -> getBorder
    java.lang.String addImage(isf.controls.models.DesktopDataObject) -> IT11TT1lIll1ITIl
    void performAction(int) -> I111IITI1TlllTTl
    void internalFrameClosing(javax.swing.event.InternalFrameEvent) -> internalFrameClosing
    void internalFrameClosed(javax.swing.event.InternalFrameEvent) -> internalFrameClosed
    void internalFrameOpened(javax.swing.event.InternalFrameEvent) -> internalFrameOpened
    void internalFrameIconified(javax.swing.event.InternalFrameEvent) -> internalFrameIconified
    void internalFrameDeiconified(javax.swing.event.InternalFrameEvent) -> internalFrameDeiconified
    void internalFrameActivated(javax.swing.event.InternalFrameEvent) -> internalFrameActivated
    void internalFrameDeactivated(javax.swing.event.InternalFrameEvent) -> internalFrameDeactivated
    void resize(java.awt.Rectangle) -> l1IlTT1lITIl1IT1
    java.lang.String getActive() -> l1lT1II1llTTITI1
    void setActive(java.lang.String) -> IT1TlTl1I1TIlIl
    java.lang.String checkImage(isf.controls.models.DesktopDataObject) -> TIITI1lTlTl1Il11
    void updateCount(int) -> llTTI111lI1IITlT
    void reset() -> reset
    java.lang.String addImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> ITI1llTTI1lITl
    boolean canLoad() -> lT1TIIl1TlITl1I1
    void stopLoad() -> llT11ITTITIl11lI
    void <clinit>() -> <clinit>
isf.controls.view.controls.SidToolbar -> isf.controls.llIT1TI.I11lIlTT.l1lIl1TTTI1I:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    int index -> index
    isf.controls.view.listeners.ViewDesktopListener vdl -> IIlTI11lTTlIlT1
    boolean spaceDown -> I1l1IlT11ITlTlTI
    boolean controlDown -> TlIIIlT11Tl1lIT1
    java.lang.String curDir -> TlTlIllTTII1I11
    java.lang.String appMode -> TIII1Tl1lTI1ll1T
    java.lang.String appName -> l1TlI11IIlTTIlT
    isf.controls.view.controls.ISFButton[] ptmTools -> llI1TlTII1TTIl11
    isf.controls.view.controls.ISFButton btnOpen -> T1Il1IIT1TIlT1ll
    isf.controls.view.controls.ISFButton btnDnl -> lT1ITl1TIllIT1I1
    isf.controls.view.controls.ISFButton btnZin -> ITIIIT1l1TTl1ll1
    isf.controls.view.controls.ISFButton btnZout -> TT11IIIIll1TlT1l
    isf.controls.view.controls.ISFButton btnPan -> lITIIl1lTTI1l1T
    isf.controls.view.controls.ISFButton btnSelZoom -> TIl1Tl1IIlT1lTI1
    isf.controls.view.controls.ISFButton btnFit -> Il11llITI11TIlTT
    isf.controls.view.controls.ISFButton btnProp -> TITIT1ll1TIIl11l
    isf.controls.view.controls.ISFButton btnAbt -> TTI1IITITll11l1l
    isf.controls.view.controls.ISFButton btnSave -> TTIllITI1llT11I
    isf.controls.view.controls.ISFButton btnScreen -> TT1lII1lI1ll1TIT
    void <init>() -> <init>
    void setCommonButtons(boolean) -> IITll1lI11TlTTI
    void setPTMButtons(boolean) -> lITT1Il1TIl1lTI
    void initComponents() -> initComponents
    void btnFitActionPerformed$413f16b() -> a
    void btnScreenActionPerformed(isf.controls.view.controls.ISFButton) -> l1IlTT1lITIl1IT1
    boolean isFloatable() -> isFloatable
    java.awt.Insets getMargin() -> getMargin
    void updateComp(isf.controls.view.controls.ISFButton) -> lI1I1T1ITTl1llIT
    void updateDefault() -> l1lITTITlIlTI1
    boolean trapKeys() -> I1Tlll1TTTI1Il1I
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
    void access$000(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TT1lIT1ll1ITIIl1
    void access$100(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> ITI1llTTI1lITl
    void access$200(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1IlTT1lITIl1IT1
    void access$300(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> lI1I1T1ITTl1llIT
    void access$400(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IlITlTTTl11Il1I
    void access$500(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IT11TT1lIll1ITIl
    void access$600(isf.controls.view.controls.SidToolbar,isf.controls.view.controls.ISFButton) -> TT1lIT1ll1ITIIl1
    void access$700(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TIITI1lTlTl1Il11
    void access$800(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TTl1TITI1l1Il1lI
    void access$900(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IITTlT11lII1T1ll
    void access$1000(isf.controls.view.controls.SidToolbar,isf.controls.view.controls.ISFButton) -> ITI1llTTI1lITl
    void access$1100(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1IllT11TIIT1ITl
    void access$1200(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1lT1IlI1IlT1TIT
    void <clinit>() -> <clinit>
isf.controls.view.controls.SidToolbar$1 -> isf.controls.llIT1TI.I11lIlTT.TTl11llIITI:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$10 -> isf.controls.llIT1TI.I11lIlTT.IllTIT1l1IT1:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$11 -> isf.controls.llIT1TI.I11lIlTT.l1TI11ITTIll:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$12 -> isf.controls.llIT1TI.I11lIlTT.IllTIIlT11T:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$13 -> isf.controls.llIT1TI.I11lIlTT.TllIII11T1Tl:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$14 -> isf.controls.llIT1TI.I11lIlTT.ITl11lI1ITTl:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    boolean accept(java.io.File) -> accept
    java.lang.String getDescription() -> getDescription
isf.controls.view.controls.SidToolbar$2 -> isf.controls.llIT1TI.I11lIlTT.IT1llT1I1lTI:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$3 -> isf.controls.llIT1TI.I11lIlTT.I1TTIllTlI:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$4 -> isf.controls.llIT1TI.I11lIlTT.Il1IlTT1l1IT:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$5 -> isf.controls.llIT1TI.I11lIlTT.I11IlTlI1TlT:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$6 -> isf.controls.llIT1TI.I11lIlTT.l1ITTl1IlTI1:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$7 -> isf.controls.llIT1TI.I11lIlTT.IlT1TI1llTI:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$8 -> isf.controls.llIT1TI.I11lIlTT.TIlT1lTIIl:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$9 -> isf.controls.llIT1TI.I11lIlTT.T1lTlIIlT1I:
    isf.controls.view.controls.SidToolbar this$0 -> llTII1lT1IT1l1TI
    void <init>(isf.controls.view.controls.SidToolbar) -> <init>
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.ViewDesktopButton -> isf.controls.llIT1TI.I11lIlTT.TTITllII1l11:
    isf.controls.models.DesktopDataObject object -> Il1Tl1lTT1lIITI
    java.awt.Dimension dim -> lIIT1TI11Tl1lITl
    java.awt.Color fgColor -> lIlIITT1l111ITTl
    java.awt.Color pfg -> l1TlITTT1IllII1
    java.awt.Color selectedColor -> TTTlI1l11I1IlTIl
    java.awt.Color sbgColor -> TTI1llIlI11I1TlT
    java.awt.Color bgColor -> llI1l11TTITTIlI
    void <init>(java.lang.String,javax.swing.ImageIcon,boolean) -> <init>
    void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    void <init>(java.lang.String,java.lang.String,boolean,byte) -> <init>
    void <init>(isf.controls.models.DesktopDataObject,java.lang.String,boolean) -> <init>
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setSelected(boolean) -> setSelected
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    isf.controls.models.DesktopDataObject getObject() -> TlITTTII1ll1Il1
    void <clinit>() -> <clinit>
isf.controls.view.gui.ISFDesktopManager -> isf.controls.llIT1TI.l1IT1lTI.l1IlIlTI1T1T:
    boolean isDragging -> isDragging
    int frmWidth -> l1I1IT1lIlTTlI1T
    int frmHeight -> I1lT1I1TTllT1IIl
    int noPTMS -> TlI1TT1I1l1lITlI
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    void addPTMs() -> II1l11TIlIlT1TTl
    void closePTMs() -> lIITIIlT111T1Tll
    void resetPTMs() -> IT11lII1ll1TTIlT
    void beginDraggingFrame(javax.swing.JComponent) -> beginDraggingFrame
    void endDraggingFrame(javax.swing.JComponent) -> endDraggingFrame
    void iconifyFrame(javax.swing.JInternalFrame) -> iconifyFrame
    void maximizeFrame(javax.swing.JInternalFrame) -> maximizeFrame
    void resizeFrame(javax.swing.JComponent,int,int,int,int) -> resizeFrame
    void <clinit>() -> <clinit>
isf.controls.view.gui.InscriptListCellRenderer -> isf.controls.llIT1TI.l1IT1lTI.lI1lTIIlT1T1:
    void <init>() -> <init>
    java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
isf.controls.view.gui.InscriptListCellRenderer$1 -> isf.controls.llIT1TI.l1IT1lTI.Tl1l11IlIITT:
    isf.controls.view.gui.InscriptListCellRenderer this$0 -> T1IT1l1lTl1TIlII
    void <init>(isf.controls.view.gui.InscriptListCellRenderer) -> <init>
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
isf.controls.view.gui.VerticalLayout -> isf.controls.llIT1TI.l1IT1lTI.Il1TI1lIT1lT:
    int hy -> TI11I1lTIlTITll1
    int wx -> l1TIITTll1I1T1lI
    void <init>() -> <init>
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
isf.controls.view.listeners.ActivationListener -> isf.controls.llIT1TI.llIT1TI.l1IlIlTI1T1T:
    void activationChanged() -> TTlTl1l1lIT1III
isf.controls.view.listeners.ActiveXListener -> isf.controls.llIT1TI.llIT1TI.lI1lTIIlT1T1:
    void minimized(java.lang.String) -> l1Il1TTIITIl1Tl
    void activated(java.lang.String) -> I1ll11TlTIITlT1I
    void deleted(java.lang.String) -> IlI1Il1T1TlTITl1
isf.controls.view.listeners.CWListener -> isf.controls.llIT1TI.llIT1TI.Tl1l11IlIITT:
    void buttonSelected(java.lang.String) -> l1ll1TTIIl1IITT
isf.controls.view.listeners.CursorListener -> isf.controls.llIT1TI.llIT1TI.Il1TI1lIT1lT:
    void changeCursor(int) -> IT11TT1lIll1ITIl
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor getCursor() -> getCursor
isf.controls.view.listeners.ImageLoader -> isf.controls.llIT1TI.llIT1TI.l11lIlTTI1TI:
    javax.swing.ImageIcon loadImage(java.lang.String) -> IT11l1lTTI1lTIlI
isf.controls.view.listeners.ImageLoaderListener -> isf.controls.llIT1TI.llIT1TI.T11ITIIllTl:
    void putImage(isf.controls.models.DesktopDataObject) -> ITI1llTTI1lITl
    void addDesktopData(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    void putImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
isf.controls.view.listeners.KeyHandler -> isf.controls.llIT1TI.llIT1TI.lIlIITlTT111:
    boolean trapKeys() -> I1Tlll1TTTI1Il1I
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
isf.controls.view.listeners.SizeChangeListener -> isf.controls.llIT1TI.llIT1TI.l1lIl1TTTI1I:
    void updateSize(java.lang.String) -> IT11TT1TI1IllllI
isf.controls.view.listeners.SortListener -> isf.controls.llIT1TI.llIT1TI.TTl11llIITI:
    void sort(java.lang.String) -> TTITl1lIllI1TI11
    void resetSort() -> T11IITlllTT1IlI1
isf.controls.view.listeners.ViewDesktopListener -> isf.controls.llIT1TI.llIT1TI.IllTIT1l1IT1:
    java.lang.String addImage(isf.controls.models.DesktopDataObject) -> IT11TT1lIll1ITIl
    java.lang.String addImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> ITI1llTTI1lITl
    java.lang.String checkImage(isf.controls.models.DesktopDataObject) -> TIITI1lTlTl1Il11
    void performAction(int) -> I111IITI1TlllTTl
isf.net.request.ImageRequestObject -> isf.I11lIlTT.l11lITTI.l1IlIlTI1T1T:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    isf.net.request.ImageRequestObject proxy -> TI11I1IITlTlTl1l
    isf.net.request.ImageRequestObject getInstance() -> T1l1IllIT11TTlII
    void <init>() -> <init>
    void <clinit>() -> <clinit>
isf.net.request.PTMRequestDispatcher -> isf.I11lIlTT.l11lITTI.Tl1l11IlIITT:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    isf.net.request.PTMRequestDispatcher proxy -> IIT1lTTl1IlTIl11
    java.lang.String serverPtm -> llTlIlII1TI11T1T
    void <init>() -> <init>
    isf.net.request.PTMRequestDispatcher getInstance() -> TITlTl1TIl11II1l
    byte[] getImageCoeff(java.lang.String,int,int,int) -> TT1lIT1ll1ITIIl1
    void <clinit>() -> <clinit>
isf.net.request.RequestDispatcherObject -> isf.I11lIlTT.l11lITTI.Il1TI1lIT1lT:
    java.lang.String server -> IlT1llTTIII1lT
    java.lang.String mode -> I1lIlITlTT1TI1l
    java.lang.String alt_server -> T1IITTl1ITl1llI
    isf.net.request.RequestDispatcherObject rdo -> IlTlTITlIl11I11T
    org.apache.commons.httpclient.HttpClient client -> lTTT1lTlIIIl1I
    isf.common.utils.LogoutListener lol -> TI1IlTl11ITTllI
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager mthcm -> T11llTIT1l1IIlTI
    org.apache.commons.httpclient.DefaultHttpMethodRetryHandler dmrh -> l1ITT1IlI1TTl1lI
    java.lang.String serverConfig -> TII1TTIl1ITlll1
    java.lang.String strMode -> I1ll11lITT1ITlTI
    org.apache.log4j.Logger logger -> logger
    void <init>() -> <init>
    isf.net.request.RequestDispatcherObject getInstance() -> lITTlI1T1I1lI1lT
    java.lang.Object handleQueryEvent(java.lang.String) -> l11TTIl11lITIlIT
    javax.swing.ImageIcon fetchImage(java.lang.String) -> TlIlTTlIIIlT111
    java.lang.Object getImageProperties(java.lang.String) -> T11IITlllTT1IlI1
    int checkConnection() -> TT1T1IllITlI1l1I
    void addLogoutListener(isf.common.utils.LogoutListener) -> TT1lIT1ll1ITIIl1
    isf.common.utils.PTMConfig getPTMConfig(java.lang.String) -> Il1I1llTTlI1TIT
    java.lang.String retrieveAttributeValue(org.w3c.dom.Document,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    int retrieveAttributeValueInt(org.w3c.dom.Document,java.lang.String,java.lang.String) -> ITI1llTTI1lITl
    void <clinit>() -> <clinit>
isf.ptm.controls.PTMWindow -> isf.l1IT1lTI.l11lITTI.l11lIlTTI1TI:
    isf.ptm.formats.PTM getPTM() -> TT1I1lTITll1lI1I
    void setFrameActive(boolean) -> I1TTT1IIlTIll1l
isf.ptm.fileio.HSHReader -> isf.l1IT1lTI.I11lIlTT.l1IlIlTI1T1T:
    isf.ptm.formats.HSH ptm -> T1TIIlTIT1ll1Il1
    java.lang.String version -> version
    java.io.InputStream __in -> Tl1ITT1I1TIlI1ll
    boolean DEBUG -> DEBUG
    boolean reset -> reset
    int type -> type
    int[] details -> T1IlTITlT11Il1lI
    boolean fromRTI -> II1Tll1lTTIlIT11
    void reset(boolean) -> reset
    void <init>(java.io.InputStream,boolean,int[],int) -> <init>
    void <init>(java.io.InputStream,boolean) -> <init>
    isf.ptm.formats.PTM readPTM() -> IlTT1llIl1TIIT11
isf.ptm.fileio.HSHWriter -> isf.l1IT1lTI.I11lIlTT.lI1lTIIlT1T1:
    void <init>() -> <init>
    void writePTM(isf.ptm.formats.PTM,java.io.OutputStream) -> TT1lIT1ll1ITIIl1
isf.ptm.fileio.LRGBReader -> isf.l1IT1lTI.I11lIlTT.Il1TI1lIT1lT:
    isf.ptm.formats.BLRGBPTM ptm -> l1I1T1ITlTI1TlIl
    java.lang.String version -> version
    java.io.InputStream __in -> Tl1ITT1I1TIlI1ll
    boolean DEBUG -> DEBUG
    boolean reset -> reset
    boolean fromRTI -> II1Tll1lTTIlIT11
    int type -> type
    int basis -> TTIIT1ll1ITlIl11
    void reset(boolean) -> reset
    void <init>(java.io.InputStream) -> <init>
    void <init>(java.io.InputStream,boolean) -> <init>
    void setVersion(java.lang.String) -> setVersion
    isf.ptm.formats.PTM readPTM() -> IlTT1llIl1TIIT11
isf.ptm.fileio.LRGBWriter -> isf.l1IT1lTI.I11lIlTT.l11lIlTTI1TI:
    void <init>() -> <init>
    void writePTM(isf.ptm.formats.PTM,java.io.OutputStream) -> TT1lIT1ll1ITIIl1
isf.ptm.fileio.PTMIO -> isf.l1IT1lTI.I11lIlTT.T11ITIIllTl:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>() -> <init>
    isf.ptm.fileio.PTMReader getPTMParser(java.io.InputStream,boolean) -> TT1lIT1ll1ITIIl1
    isf.ptm.fileio.PTMReader _getParser(java.io.InputStream,boolean) -> ITI1llTTI1lITl
    isf.ptm.formats.MVRTI getMView(java.io.InputStream) -> ITI1llTTI1lITl
    isf.ptm.formats.MVRTI _initMulti(java.io.InputStream) -> l1IlTT1lITIl1IT1
    isf.ptm.fileio.PTMReader _initParser(java.io.InputStream) -> lI1I1T1ITTl1llIT
    java.lang.String getLine(java.io.InputStream) -> IlITlTTTl11Il1I
    int[] getLineAsInts(java.io.InputStream) -> IT11TT1lIll1ITIl
    void <clinit>() -> <clinit>
isf.ptm.fileio.PTMReader -> isf.l1IT1lTI.I11lIlTT.lIlIITlTT111:
    isf.ptm.formats.PTM readPTM() -> IlTT1llIl1TIIT11
    void reset(boolean) -> reset
isf.ptm.fileio.PTMWriter -> isf.l1IT1lTI.I11lIlTT.Il1TlIT1lTI1:
    void <init>() -> <init>
    void writePTM(isf.ptm.formats.PTM,java.io.OutputStream) -> TT1lIT1ll1ITIIl1
    byte[] getLine(int) -> TIT1ITlI1lIl1lT1
    byte[] getLine(float[]) -> lI1I1T1ITTl1llIT
    byte[] getLine(java.lang.String) -> llI1T1IT1T1TIllI
    isf.ptm.fileio.PTMWriter getPTMWriter(isf.ptm.formats.PTM) -> l1IlTT1lITIl1IT1
isf.ptm.fileio.RGBReader -> isf.l1IT1lTI.I11lIlTT.l1lIl1TTTI1I:
    isf.ptm.formats.RGBPTM ptm -> lIITl1ITTTl111Il
    java.lang.String version -> version
    java.io.InputStream __in -> Tl1ITT1I1TIlI1ll
    boolean DEBUG -> DEBUG
    boolean reset -> reset
    int type -> type
    int basis -> TTIIT1ll1ITlIl11
    boolean fromRTI -> II1Tll1lTTIlIT11
    void reset(boolean) -> reset
    void <init>(java.io.InputStream) -> <init>
    void <init>(java.io.InputStream,boolean) -> <init>
    void setVersion(java.lang.String) -> setVersion
    isf.ptm.formats.PTM readPTM() -> IlTT1llIl1TIIT11
isf.ptm.fileio.RGBWriter -> isf.l1IT1lTI.I11lIlTT.TTl11llIITI:
    void <init>() -> <init>
    void writePTM(isf.ptm.formats.PTM,java.io.OutputStream) -> TT1lIT1ll1ITIIl1
isf.ptm.formats.BLRGBPTM -> isf.l1IT1lTI.l1IT1lTI.l1IlIlTI1T1T:
    isf.ptm.graphics.EnvironmentMap em -> ITI11llTlTT1lII
    java.util.ArrayList normals -> IlTlT1I1l1lI1TIT
    byte[][] coefficients -> II1lT1TllT1T1IIl
    int[] environmentMapCache -> T1TlIT1ITl1lI1lI
    int[] environmentMapMap -> ITTllITTI1Ill11
    int width -> width
    int height -> height
    java.lang.String name -> name
    int type -> type
    int basis -> TTIIT1ll1ITlIl11
    isf.ptm.utils.LightSource[] lights -> lITTTlT1l1I1lI1I
    boolean extrapolate -> Tl1lITI1TTll11II
    int colors -> lTITl1lTIII111Tl
    boolean useEnv -> lT1lI1IlIIT11TTl
    float DGAIN -> T1lTT1lIl1ITIIl
    float KSPEC -> lIl1TlI1TlI1T1TI
    float KDIFF -> lTT111IIT1lTlIIl
    int EXP -> EXP
    float LUM -> llTI1l1T1ITlIIT
    int Z -> IITTll1I1ll1TI1T
    java.lang.String version -> version
    float[] scale -> I1lTTIl1lI1I1TlT
    float[] bias -> lITTl1Ill11TTII1
    void release() -> release
    int[] getEnvironmentMapMap() -> ll1T1TTIIII1lTl1
    void <init>() -> <init>
    byte[][] getBCoefficients() -> lTlTIII1TI1T1ll1
    void setCoefficients(byte[][]) -> ITI1llTTI1lITl
    void setWidth(int) -> setWidth
    void setHeight(int) -> setHeight
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void computeNormals() -> I1TlTlT1Il11ITlI
    isf.ptm.graphics.EnvironmentMap getEnvironmentMap() -> l1IlTIlIT11TTIl
    int getFileType() -> llT1ITTIIl1l11TI
    int getExp() -> T1T1IIlI1lT1TlIl
    float getKDiff() -> ITIll1TIT111IllT
    float getKSpec() -> I1IITTT11lTlIll
    float getDGain() -> lT11IlTlTITlII11
    boolean useEnv() -> TT1T1IlITIlIll11
    int getZ() -> getZ
    void setVersion(java.lang.String) -> setVersion
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    java.lang.String getVersion() -> getVersion
    void setScaleArray(float[]) -> IlITlTTTl11Il1I
    float[] getBias() -> IlTIl1IITTll11T1
    float[] getScaleArray() -> TllIITIT1lIlT11
    boolean isExtrapolation() -> lTlTIlIT11ITIl11
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setBCoeffs(int,int,int,int,int,byte[]) -> ITI1llTTI1lITl
    int getColors() -> IlTITIl1I1T1lTl
    void setColors(int) -> Tll11l1T1TITIlII
    int getBasisType() -> l1T1I1llITI1TTlI
    void setBasisType(int) -> I11lT1lTlIIl1TIT
    void setFileType(int) -> IITlTllI1TTI11l
isf.ptm.formats.HSH -> isf.l1IT1lTI.l1IT1lTI.lI1lTIIlT1T1:
    int colors -> lTITl1lTIII111Tl
    boolean extrapolate -> Tl1lITI1TTll11II
    int EXP -> EXP
    float KDIFF -> lTT111IIT1lTlIIl
    float KSPEC -> lIl1TlI1TlI1T1TI
    float LUM -> llTI1l1T1ITlIIT
    float m_dGain -> TlTTIIT11lIllI11
    int Z -> IITTll1I1ll1TI1T
    int type -> type
    int width -> width
    int height -> height
    int basisType -> IllTTTTl1I1l11II
    int basisTerms -> Ill1lTITIT1Tl1I
    int elementSize -> lTI1ITlI11IlTlT
    java.lang.String name -> name
    java.lang.String version -> version
    float[] bias -> lITTl1Ill11TTII1
    float[] scale -> I1lTTIl1lI1I1TlT
    java.util.ArrayList normals -> IlTlT1I1l1lI1TIT
    byte[][] coefficients -> II1lT1TllT1T1IIl
    void <init>() -> <init>
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getBasisTerms() -> IITTl11lIlITl1T
    void setBasisTerms(int) -> TIlll1TI1lITT1I
    int getBasisType() -> l1T1I1llITI1TTlI
    void setBasisType(int) -> I11lT1lTlIIl1TIT
    int getElementSize() -> ITTTlIITI111l1ll
    void setElementSize(int) -> l1Il1TTIITIl1Tl
    void setFileType(int) -> IITlTllI1TTI11l
    int getFileType() -> llT1ITTIIl1l11TI
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getVersion() -> getVersion
    byte[][] getBCoefficients() -> lTlTIII1TI1T1ll1
    void setBCoefficients(byte[][]) -> l1IlTT1lITIl1IT1
    float[] getScaleArray() -> TllIITIT1lIlT11
    void setScaleArray(float[]) -> IlITlTTTl11Il1I
    void computeNormals() -> I1TlTlT1Il11ITlI
    java.util.ArrayList getNormals() -> TTI11l1ITlIlT1lI
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    float[] getBias() -> IlTIl1IITTll11T1
    float getKSpec() -> I1IITTT11lTlIll
    float getKDiff() -> ITIll1TIT111IllT
    float getDGain() -> lT11IlTlTITlII11
    int getExp() -> T1T1IIlI1lT1TlIl
    int getZ() -> getZ
    void release() -> release
    void setBCoeffs(int,int,int,int,int,byte[]) -> ITI1llTTI1lITl
    isf.ptm.graphics.EnvironmentMap getEnvironmentMap() -> l1IlTIlIT11TTIl
    int[] getEnvironmentMapMap() -> ll1T1TTIIII1lTl1
    boolean useEnv() -> TT1T1IlITIlIll11
    boolean isExtrapolation() -> lTlTIlIT11ITIl11
    int getColors() -> IlTITIl1I1T1lTl
    void setColors(int) -> Tll11l1T1TITIlII
isf.ptm.formats.MVRTI -> isf.l1IT1lTI.l1IT1lTI.Il1TI1lIT1lT:
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    java.util.Hashtable files -> IlTl1TI1T1IlTlI
    int orientation -> orientation
    int maxX -> maxX
    int maxY -> TTIl11IlIT1llT1I
    int views -> l1IlITTTl1l1IIT1
    int useFlow -> lIIll1TlI1TTT11I
    isf.ptm.formats.HSH ptm -> T1TIIlTIT1ll1Il1
    java.lang.String dir -> dir
    int currentView -> Illl1lTTTI1ITI
    void <init>() -> <init>
    void setFiles(java.util.Hashtable) -> ITI1llTTI1lITl
    void setOrientation(int) -> setOrientation
    void setMaxX(int) -> IlI1Il1T1TlTITl1
    void setMaxY(int) -> TI1T1llllTII1IT1
    void setViews(int) -> Il1Tl1IT1T1IlTIl
    void setUseFlow(int) -> llTIT11ITl1I1TlI
    void setDirectory(java.lang.String) -> setDirectory
    isf.ptm.formats.PTM getPTM(int) -> I1TTlTl11llT1III
    isf.ptm.formats.PTM _getPTM(int) -> IT11l1lTIlII1TTl
isf.ptm.formats.PTM -> isf.l1IT1lTI.l1IT1lTI.T11ITIIllTl:
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setVersion(java.lang.String) -> setVersion
    void setScaleArray(float[]) -> IlITlTTTl11Il1I
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    java.lang.String getVersion() -> getVersion
    float[] getBias() -> IlTIl1IITTll11T1
    float getKSpec() -> I1IITTT11lTlIll
    float getKDiff() -> ITIll1TIT111IllT
    float getDGain() -> lT11IlTlTITlII11
    int getExp() -> T1T1IIlI1lT1TlIl
    int getZ() -> getZ
    void release() -> release
    int getFileType() -> llT1ITTIIl1l11TI
    int getBasisType() -> l1T1I1llITI1TTlI
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setWidth(int) -> setWidth
    void setHeight(int) -> setHeight
    byte[][] getBCoefficients() -> lTlTIII1TI1T1ll1
    void setBCoeffs(int,int,int,int,int,byte[]) -> ITI1llTTI1lITl
    int getColors() -> IlTITIl1I1T1lTl
    void computeNormals() -> I1TlTlT1Il11ITlI
    isf.ptm.graphics.EnvironmentMap getEnvironmentMap() -> l1IlTIlIT11TTIl
    int[] getEnvironmentMapMap() -> ll1T1TTIIII1lTl1
    boolean useEnv() -> TT1T1IlITIlIll11
    float[] getScaleArray() -> TllIITIT1lIlT11
    boolean isExtrapolation() -> lTlTIlIT11ITIl11
    void setBasisType(int) -> I11lT1lTlIIl1TIT
isf.ptm.formats.RGBPTM -> isf.l1IT1lTI.l1IT1lTI.lIlIITlTT111:
    int type -> type
    int basis -> TTIIT1ll1ITlIl11
    byte[][] bcoeff -> lll11ITIT1T1lIIT
    int size -> size
    boolean extrapolate -> Tl1lITI1TTll11II
    int width -> width
    int height -> height
    int EXP -> EXP
    float KDIFF -> lTT111IIT1lTlIIl
    float KSPEC -> lIl1TlI1TlI1T1TI
    float LUM -> llTI1l1T1ITlIIT
    float m_dGain -> TlTTIIT11lIllI11
    int Z -> IITTll1I1ll1TI1T
    java.util.ArrayList normals -> IlTlT1I1l1lI1TIT
    java.lang.String name -> name
    java.lang.String version -> version
    float[] scale -> I1lTTIl1lI1I1TlT
    float[] bias -> lITTl1Ill11TTII1
    void <init>() -> <init>
    void computeNormals() -> I1TlTlT1Il11ITlI
    void setBCoefficients(byte[][]) -> l1IlTT1lITIl1IT1
    float getDGain() -> lT11IlTlTITlII11
    isf.ptm.graphics.EnvironmentMap getEnvironmentMap() -> l1IlTIlIT11TTIl
    int[] getEnvironmentMapMap() -> ll1T1TTIIII1lTl1
    int getExp() -> T1T1IIlI1lT1TlIl
    int getHeight() -> getHeight
    float getKDiff() -> ITIll1TIT111IllT
    float getKSpec() -> I1IITTT11lTlIll
    int getFileType() -> llT1ITTIIl1l11TI
    int getWidth() -> getWidth
    int getZ() -> getZ
    void release() -> release
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    boolean useEnv() -> TT1T1IlITIlIll11
    void setVersion(java.lang.String) -> setVersion
    void setScaleArray(float[]) -> IlITlTTTl11Il1I
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    java.lang.String getVersion() -> getVersion
    float[] getScaleArray() -> TllIITIT1lIlT11
    float[] getBias() -> IlTIl1IITTll11T1
    boolean isExtrapolation() -> lTlTIlIT11ITIl11
    byte[][] getBCoefficients() -> lTlTIII1TI1T1ll1
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setBCoeffs(int,int,int,int,int,byte[]) -> ITI1llTTI1lITl
    int getColors() -> IlTITIl1I1T1lTl
    int getBasisType() -> l1T1I1llITI1TTlI
    void setBasisType(int) -> I11lT1lTlIIl1TIT
    void setFileType(int) -> IITlTllI1TTI11l
isf.ptm.graphics.EnvironmentMap -> isf.l1IT1lTI.llIT1TI.l1IlIlTI1T1T:
    int[] buf -> buf
    isf.ptm.graphics.VRGB eye -> I1TI1I1TTll1TIll
    int getMapIndex(isf.ptm.graphics.VRGB) -> l1IlTT1lITIl1IT1
    int[] rotatedMap() -> lTl1IllIITTIT111
    void <clinit>() -> <clinit>
isf.ptm.graphics.VRGB -> isf.l1IT1lTI.llIT1TI.l11lIlTTI1TI:
    float red -> IlITl11ITl11ITlT
    float green -> II11Tl1TITlllTI
    float blue -> IllIIlT11IT1TlT1
    void <init>() -> <init>
    void <init>(float,float,float) -> <init>
    java.lang.String toString() -> toString
isf.ptm.operations.DirectionalLightOperation -> isf.l1IT1lTI.lT1lIIT1.Tl1l11IlIITT:
    int width -> width
    int height -> height
    int dW -> TlIITlIl1T1T11Il
    int type -> type
    int basis -> TTIIT1ll1ITlIl11
    isf.ptm.utils.LightSource[] sources -> TlllT1ITIT1I1Il
    boolean extrapolate -> Tl1lITI1TTll11II
    float factor -> ITl11TlTIlTlI1I
    int[] map -> map
    int[] rotatedEnv -> TIITTl1TIl1Ill1
    java.awt.Rectangle target -> I1lTTIlTI1l11ITl
    java.awt.Rectangle ptmRect -> lI11llITITI11TTl
    void <init>() -> <init>
    void LRGBXformEnv(int[],byte[][],int,int,float[],float[]) -> TT1lIT1ll1ITIIl1
    void LRGBXform(int[],byte[][],int,int,float[],float[]) -> ITI1llTTI1lITl
    void RGBXform(int[],byte[][],int,int,float[],float[]) -> l1IlTT1lITIl1IT1
    void HSHform(int[],byte[][],float[],float[],int) -> TT1lIT1ll1ITIIl1
    void performOperation(int[],isf.ptm.utils.LightSource[],isf.ptm.formats.PTM,int,int,int,int,int,int,int,int) -> TT1lIT1ll1ITIIl1
    java.lang.String getName() -> getName
isf.ptm.operations.Operation -> isf.l1IT1lTI.lT1lIIT1.T11ITIIllTl:
    double M_PI -> II1lI1TT11llTIlT
    void <init>() -> <init>
    void performOperation(int[],isf.ptm.utils.LightSource[],isf.ptm.formats.PTM,int,int,int,int,int,int,int,int) -> TT1lIT1ll1ITIIl1
    double[] getHSH(double,double) -> ITI1llTTI1lITl
    java.lang.String getName() -> getName
    void <clinit>() -> <clinit>
isf.ptm.utils.LightSource -> isf.l1IT1lTI.lITTl11I.l1IlIlTI1T1T:
    boolean enabled -> enabled
    javax.vecmath.Point3f light -> II1IT1TlTlllTI
    float luminance -> IlIl11Tl1TIIT1lT
    boolean active -> active
    int xpos -> IIITTlT1l11T1Ill
    int ypos -> lII1lTTllT1TI1I1
    void <init>() -> <init>
    boolean isEnabled() -> isEnabled
    javax.vecmath.Point3f getLight() -> ll1I1I1TTl1TITlI
    void setLight(javax.vecmath.Point3f) -> TT1lIT1ll1ITIIl1
    void setEnabled(boolean) -> setEnabled
    int getX() -> getX
    void setX(int) -> setX
    int getY() -> getY
    void setY(int) -> setY
    float getLuminance() -> l11TTT1I1IlIIllT
    void setLuminance(float) -> IlITlTTTl11Il1I
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    java.lang.String getDisplay() -> getDisplay
isf.ptm.utils.SwingWorker -> isf.l1IT1lTI.lITTl11I.lI1lTIIlT1T1:
    java.lang.Object value -> value
    isf.ptm.utils.SwingWorker$ThreadVar threadVar -> ITT1l1lII1TT1Ill
    void setValue(java.lang.Object) -> setValue
    java.lang.Object construct() -> Ill1lITlI1TTIT1
    void finished() -> finished
    void <init>() -> <init>
    void start() -> start
    void access$000(isf.ptm.utils.SwingWorker,java.lang.Object) -> TT1lIT1ll1ITIIl1
    isf.ptm.utils.SwingWorker$ThreadVar access$100(isf.ptm.utils.SwingWorker) -> TT1lIT1ll1ITIIl1
isf.ptm.utils.SwingWorker$1 -> isf.l1IT1lTI.lITTl11I.Tl1l11IlIITT:
    isf.ptm.utils.SwingWorker this$0 -> Il111lIlTl1TTITI
    void <init>(isf.ptm.utils.SwingWorker) -> <init>
    void run() -> run
isf.ptm.utils.SwingWorker$2 -> isf.l1IT1lTI.lITTl11I.Il1TI1lIT1lT:
    java.lang.Runnable val$doFinished -> TI1lIlIlI11lTT1T
    isf.ptm.utils.SwingWorker this$0 -> Il111lIlTl1TTITI
    void <init>(isf.ptm.utils.SwingWorker,java.lang.Runnable) -> <init>
    void run() -> run
isf.ptm.utils.SwingWorker$ThreadVar -> isf.l1IT1lTI.lITTl11I.l11lIlTTI1TI:
    java.lang.Thread thread -> thread
    void <init>(java.lang.Thread) -> <init>
    java.lang.Thread get() -> T1TlT11lTlI1lIII
    void clear() -> clear
isf.view.PTMTools -> isf.view.PTMTools:
    void <init>() -> <init>
isf.viewer.containers.ISFDesktopFrame -> isf.llIT1TI.l11lITTI.Il1TI1lIT1lT:
    isf.controls.view.containers.ViewDesktop vd -> TT1ITllll1TII1I1
    isf.controls.view.controls.SidDesktop activexPanel -> TTI1TIlllII1T1l1
    isf.controls.view.containers.ISFSplitPane jp -> T1Tl1Tl1TIlIlII
    isf.controls.view.containers.ProgressPane progressPane -> TI1l1TITl11IIlTl
    int index -> index
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    java.net.ServerSocket listenSocket -> ll1TIII1lI11lTTT
    java.awt.Cursor oldCursor -> Ill1I1I1TTlIl1TT
    void <init>() -> <init>
    void addDesktopData(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void putImage(isf.controls.models.DesktopDataObject) -> ITI1llTTI1lITl
    void main(java.lang.String[]) -> main
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void putImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    void changeCursor(int) -> IT11TT1lIll1ITIl
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    boolean validRTIFile(java.lang.String) -> TTIlTI1lI1T1l1lI
    java.net.ServerSocket access$000() -> ITl1Il1II1Tll1TT
    void <clinit>() -> <clinit>
isf.viewer.containers.ISFDesktopFrame$1 -> isf.llIT1TI.l11lITTI.l11lIlTTI1TI:
    isf.viewer.containers.ISFDesktopFrame this$0 -> IlTT1l1ITITllI11
    void <init>(isf.viewer.containers.ISFDesktopFrame) -> <init>
    void run() -> run
isf.viewer.utils.ClientSocket -> isf.llIT1TI.l1IT1lTI.lI1lTIIlT1T1:
    java.net.Socket socket -> socket
    org.apache.log4j.Logger log -> IITTlT11lII1T1ll
    void <init>(java.net.Socket) -> <init>
    void run() -> run
    void <clinit>() -> <clinit>
