isf.controls.controllers.ActiveXListenerManager -> isf.controls.l11lIDDI.l1IlIlTI1T1T:
    isf.controls.view.listeners.ActiveXListener al -> TT1lIT1ll1ITIIl1
    void registerActivationListener(isf.controls.view.listeners.ActiveXListener) -> TT1lIT1ll1ITIIl1
    void minimized(java.lang.String) -> TT1lIT1ll1ITIIl1
    void activated(java.lang.String) -> ITI1llTTI1lITl
    void deleted(java.lang.String) -> l1IlTT1lITIl1IT1
    void setNotification(java.lang.String) -> lI1I1T1ITTl1llIT
isf.controls.controllers.ISFGarbageCollector -> isf.controls.l11lIDDI.lI1lTIIlT1T1:
    int interval -> ITI1llTTI1lITl
    org.apache.log4j.Logger logger -> logger
    void run() -> run
isf.controls.controllers.ImageLoaderManager -> isf.controls.l11lIDDI.Tl1l11IlIITT:
    isf.controls.view.listeners.ImageLoaderListener iLL -> l1IlTT1lITIl1IT1
    isf.controls.controllers.ImageLoaderManager img -> lI1I1T1ITTl1llIT
    isf.controls.view.listeners.SortListener sl -> IlITlTTTl11Il1I
    java.lang.String[] cache -> IT11TT1lIll1ITIl
    isf.controls.controllers.ImageLoaderManager getInstance() -> TT1lIT1ll1ITIIl1
    void registerListener(isf.controls.view.listeners.ImageLoaderListener) -> TT1lIT1ll1ITIIl1
    isf.controls.view.listeners.ImageLoaderListener getLoader() -> ITI1llTTI1lITl
    void cacheQuery(java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    void resetcache() -> l1IlTT1lITIl1IT1
    java.lang.String[] getCacheQuery() -> lI1I1T1ITTl1llIT
    void registerSorter(isf.controls.view.listeners.SortListener) -> TT1lIT1ll1ITIIl1
    isf.controls.view.listeners.SortListener getSorter() -> IlITlTTTl11Il1I
isf.controls.controllers.IsfSplitManager -> isf.controls.l11lIDDI.Il1TI1lIT1lT:
    isf.controls.controllers.IsfSplitManager ourInstance -> TIITI1lTlTl1Il11
    isf.controls.view.containers.ISFSplitPane verticalSplit -> TTl1TITI1l1Il1lI
    isf.controls.view.containers.ISFSplitPane horizontalSplit -> IITTlT11lII1T1ll
    isf.controls.controllers.IsfSplitManager getInstance() -> IT11TT1lIll1ITIl
    void setSplitPane(isf.controls.view.containers.ISFSplitPane,int) -> TT1lIT1ll1ITIIl1
    void updateState(int) -> TT1lIT1ll1ITIIl1
isf.controls.controllers.KeyProcessManager -> isf.controls.l11lIDDI.l11lIlTTI1TI:
    isf.controls.controllers.KeyProcessManager ourInstance -> l1IllT11TIIT1ITl
    isf.controls.view.listeners.KeyHandler activeKH -> l1lT1IlI1IlT1TIT
    java.util.ArrayList handlers -> IlIT1lT1TI1IlT1l
    isf.controls.controllers.KeyProcessManager getInstance() -> TIITI1lTlTl1Il11
    boolean isKeyStrokeRequired() -> TTl1TITI1l1Il1lI
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
    void addKeyHandler(isf.controls.view.listeners.KeyHandler) -> TT1lIT1ll1ITIIl1
    void setActive(isf.controls.view.listeners.KeyHandler) -> ITI1llTTI1lITl
isf.controls.controllers.LoadManager -> isf.controls.l11lIDDI.T11ITIIllTl:
    isf.controls.controllers.LoadManager manager -> II11llTI1TlTITl1
    int current -> current
    int total -> total
    long maximum -> T1TlITlIl11I1TIl
    long actual -> Il1II1TlT1llTI1T
    long loaded -> lITTlIlT1IlI1T
    long lastLoaded -> ITl1I11TIlTlTlI1
    int count -> count
    long startTime -> startTime
    javax.swing.Timer timer -> timer
    boolean loading -> T11I1Tll1IllIITT
    boolean fromStandalone -> lT1lITllTTII111I
    java.lang.String notLoaded -> IlTT11IT1ITI1lll
    javax.swing.JProgressBar bar1 -> TIl1T1IlT1IIl1lT
    isf.controls.controllers.LoadManager getInstance() -> IITTlT11lII1T1ll
    void updateCount() -> l1IllT11TIIT1ITl
    void registerMonitor(javax.swing.JProgressBar) -> TT1lIT1ll1ITIIl1
    void setMaximum(long) -> TT1lIT1ll1ITIIl1
    long getMaximum() -> l1lT1IlI1IlT1TIT
    void setActual(long) -> ITI1llTTI1lITl
    long getActual() -> IlIT1lT1TI1IlT1l
    void setTotal(int) -> ITI1llTTI1lITl
    void update(long) -> update
    void start() -> start
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void stopAnimation() -> II11llTI1TlTITl1
    void startLoading(java.lang.String) -> IlITlTTTl11Il1I
    void stopLoading() -> stopLoading
    boolean isLoading() -> T1TlITlIl11I1TIl
    java.lang.String getNotLoaded() -> Il1II1TlT1llTI1T
    void setNotLoaded(java.lang.String) -> IT11TT1lIll1ITIl
isf.controls.controllers.PTMFrameManager -> isf.controls.l11lIDDI.lIlIITlTT111:
    org.apache.log4j.Logger log -> log
    isf.ptm.controls.PTMWindow panel -> I1TTT1IIlTIll1l
    isf.controls.view.controls.ISFButton btn -> lllITTIlTTII1111
    isf.controls.controllers.PTMFrameManager manager -> ITllTI1lTII11l1T
    java.util.HashMap pfcl -> IITll1lI11TlTTI
    double version -> lITT1Il1TIl1lTI
    int mode -> mode
    boolean autoClick -> I1TT1IIll1ll1TTI
    java.util.HashMap copies -> Tll11l1T1TITIlII
    boolean diffuse -> I1lITT1lTT11lIIl
    boolean canChange -> TTITl1lIllI1TI11
    boolean light -> ITlT1IITl11l1lTI
    boolean isAutoClick() -> lITTlIlT1IlI1T
    void setAutoClick(boolean) -> TT1lIT1ll1ITIIl1
    void registerChangeListener(isf.controls.view.listeners.PTMFrameChangeListener,isf.ptm.controls.PTMWindow) -> TT1lIT1ll1ITIIl1
    void releaseChangeListeners() -> ITl1I11TIlTlTlI1
    void releaseChangeListener(isf.controls.view.listeners.PTMFrameChangeListener) -> TT1lIT1ll1ITIIl1
    void releaseChangeListener(isf.ptm.controls.PTMWindow) -> TT1lIT1ll1ITIIl1
    void releaseChangeListener(isf.controls.view.listeners.PTMFrameChangeListener,isf.ptm.controls.PTMWindow) -> ITI1llTTI1lITl
    void refreshControls() -> T11I1Tll1IllIITT
    void setPTMWindow(isf.ptm.controls.PTMWindow) -> setPTMWindow
    void showControls() -> lT1lITllTTII111I
    void registerButton(isf.controls.view.controls.ISFButton) -> TT1lIT1ll1ITIIl1
    void addCopies(java.lang.String,javax.swing.JInternalFrame) -> TT1lIT1ll1ITIIl1
    java.util.Vector getCopies(java.lang.String) -> TIITI1lTlTl1Il11
    void removeCopies(java.lang.String) -> TTl1TITI1l1Il1lI
    isf.ptm.controls.PTMWindow getPTMWindow() -> IlTT11IT1ITI1lll
    isf.controls.controllers.PTMFrameManager getInstance() -> TIl1T1IlT1IIl1lT
    isf.controls.view.containers.PTMPanel getNewPTMPanel() -> I1TTT1IIlTIll1l
    double getVersion() -> getVersion
    void setDiffuseOperation(boolean,boolean) -> TT1lIT1ll1ITIIl1
    boolean getDiffuseOperation() -> lllITTIlTTII1111
    void setLightOperation(boolean) -> ITI1llTTI1lITl
    boolean getLightOperation() -> ITllTI1lTII11l1T
    isf.controls.view.controls.ISFButton[] getPTMButtons() -> IITll1lI11TlTTI
    int getMode() -> getMode
    void setMode(int) -> setMode
isf.controls.controllers.ToolbarManager -> isf.controls.l11lIDDI.Il1TlIT1lTI1:
    isf.controls.controllers.ToolbarManager manager -> l1TlT1T1IlIII1Tl
    isf.controls.view.controls.SidToolbar bar -> TTT11I1lI1llTIIl
    isf.controls.controllers.ToolbarManager getInstance() -> lITT1Il1TIl1lTI
    void registerToolbar(isf.controls.view.controls.SidToolbar) -> TT1lIT1ll1ITIIl1
    void updateToolbar() -> I1TT1IIll1ll1TTI
isf.controls.models.DesktopDataObject -> isf.controls.I11lIlDD.l1IlIlTI1T1T:
    java.lang.String header -> ITlT1lll1IITI1T1
    java.lang.String displayName -> Il11lTlITT1IlIT
    java.lang.String fileName -> fileName
    boolean added -> TIl1TTIIT11I1lll
    java.lang.String photoIdenNo -> llITlIlTI11T11IT
    isf.common.utils.PTMConfig config -> IT11TTIllIIl1T1l
    boolean copy -> TIlTl1I1Il11TIlT
    java.lang.String getHeader() -> getHeader
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getFileName() -> getFileName
    boolean isAdded() -> Tll11l1T1TITIlII
    void setAdded(boolean) -> l1IlTT1lITIl1IT1
    void setPhotoIdentificationNo(java.lang.String) -> IITTlT11lII1T1ll
    java.lang.String getPhotoIdentificationNo() -> I1lITT1lTT11lIIl
    java.lang.String toString() -> toString
    isf.common.utils.PTMConfig getConfig() -> TTITl1lIllI1TI11
    void setConfig(isf.common.utils.PTMConfig) -> TT1lIT1ll1ITIIl1
    boolean isCopy() -> ITlT1IITl11l1lTI
    void setCopy(boolean) -> lI1I1T1ITTl1llIT
isf.controls.plaf.DesktopTheme -> isf.controls.plaf.l1IlIlTI1T1T:
    java.awt.Color titleColor -> titleColor
    javax.swing.plaf.ColorUIResource getWindowTitleForeground() -> getWindowTitleForeground
    javax.swing.plaf.ColorUIResource getWindowTitleInactiveForeground() -> getWindowTitleInactiveForeground
    javax.swing.plaf.ColorUIResource getWindowTitleBackground() -> getWindowTitleBackground
    javax.swing.plaf.ColorUIResource getWindowTitleInactiveBackground() -> getWindowTitleInactiveBackground
    javax.swing.plaf.ColorUIResource getPrimaryControl() -> getPrimaryControl
isf.controls.plaf.GeneralMenuItemUI -> isf.controls.plaf.GeneralMenuItemUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.GeneralMenuUI -> isf.controls.plaf.GeneralMenuUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.IPArrowButton -> isf.controls.plaf.lI1lTIIlT1T1:
    isf.controls.plaf.IPArrowIcon arrowIcon -> llT1lIITlIT11IT1
    java.awt.Color disabledBorderColor -> T11TlTlTIlIlI1I
    java.awt.Color rolloverBorderColor -> lIIT1TI11Tl1lITl
    int SIDE_LENGTH -> ITTTT11lIIIlll11
    boolean isFocusable() -> isFocusable
    void paint(java.awt.Graphics) -> paint
    void setBorderColor(java.awt.Color) -> setBorderColor
    void setDisabledBorderColor(java.awt.Color) -> TT1lIT1ll1ITIIl1
    void setRolloverBorderColor(java.awt.Color) -> ITI1llTTI1lITl
isf.controls.plaf.IPArrowIcon -> isf.controls.plaf.Tl1l11IlIITT:
    int ARROW_HEIGHT -> TTIlIIlTI1l11lT
    int ARROW_WIDTH -> lITTT1lIlI1lTI
    java.awt.Polygon arrowPolygon -> T1TllIll1T1II1IT
    java.awt.Color borderColor -> borderColor
    java.awt.Polygon downArrowPolygon -> ITlTTIlII11T1ll1
    java.awt.Color glyphColor -> TITlT1lIlTI1l1I
    java.awt.Color interiorColor -> IT1lTll1IT1lII1T
    java.awt.Polygon leftArrowPolygon -> TlTI11TIT1lIIll
    int orientation -> orientation
    boolean paintGlyph -> IllTT1IITl11lT1I
    java.awt.Polygon rightArrowPolygon -> I111IITI1TlllTTl
    java.awt.Polygon upArrowPolygon -> llTTI111lI1IITlT
    java.awt.Color getBorderColor() -> getBorderColor
    int getIconHeight() -> getIconHeight
    int getIconWidth() -> getIconWidth
    int getOrientation() -> getOrientation
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    void setBorderColor(java.awt.Color) -> setBorderColor
    void setGlyphColor(java.awt.Color) -> l1IlTT1lITIl1IT1
    void setInteriorColor(java.awt.Color) -> lI1I1T1ITTl1llIT
    void setOrientation(int) -> setOrientation
    void setPaintGlyph(boolean) -> IlITlTTTl11Il1I
isf.controls.plaf.IPButtonIcon -> isf.controls.plaf.Il1TI1lIT1lT:
    void setBorderColor(java.awt.Color) -> setBorderColor
    void setGlyphColor(java.awt.Color) -> l1IlTT1lITIl1IT1
    void setInteriorColor(java.awt.Color) -> lI1I1T1ITTl1llIT
    void setPaintGlyph(boolean) -> IlITlTTTl11Il1I
isf.controls.plaf.IPButtonUI -> isf.controls.plaf.IPButtonUI:
    isf.controls.plaf.IPButtonUI buttonUI -> I1TTlI1IT1l1lIlT
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int radiant -> TlIlTTlIIIlT111
    java.awt.Color backgroundColor -> backgroundColor
    java.awt.Color borderColor -> borderColor
    javax.swing.plaf.FontUIResource defaultFont -> T11IITlllTT1IlI1
    java.awt.Color disabledBackgroundColor -> l11TTIl11lITIlIT
    java.awt.Color disabledBorderColor -> T11TlTlTIlIlI1I
    java.awt.Color disabledForegroundColor -> Il1I1llTTlI1TIT
    java.awt.Color foregroundColor -> foregroundColor
    java.awt.Color rolloverBackgroundColor -> IIllII1TlTTT11l1
    javax.swing.plaf.FontUIResource rolloverFont -> l1lTlT11ITlI1IIT
    java.awt.Color rolloverForegroundColor -> ll1TIIIT1lT1TIl1
    java.awt.Color selectedBackgroundColor -> TIT1ITlI1lIl1lT1
    java.awt.Color selectedForegroundColor -> TlII1ITllTlIT
    java.awt.Color flushableBackgroundColor -> TIIlT111IITTll1l
    java.awt.Color flushableForgroundColor -> III1Tl1lTllTIT11
    java.awt.Color flushableBorderColor -> lIT1T1lIlT1ITIl
    javax.swing.plaf.FontUIResource flushableFont -> ITlIIl1TT1Tl1lI
    java.awt.Rectangle iconRectangle -> Il1TTlI1lIIlT1T
    java.awt.Rectangle textRectangle -> I11lT1lTlIIl1TIT
    java.awt.Rectangle viewRectangle -> IITlTllI1TTI11l
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void writeText(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle,java.lang.String) -> TT1lIT1ll1ITIIl1
    void paintExternalButtonImages(java.awt.Graphics,javax.swing.JComponent) -> TT1lIT1ll1ITIIl1
    void installDefaults(javax.swing.AbstractButton) -> installDefaults
    void setBackgroundColor(java.awt.Color) -> IlITlTTTl11Il1I
isf.controls.plaf.IPComboBoxUI -> isf.controls.plaf.IPComboBoxUI:
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
isf.controls.plaf.IPComboBoxUI$1 -> isf.controls.plaf.l11lIlTTI1TI:
    isf.controls.plaf.IPComboBoxUI this$0 -> TIlll1TI1lITT1I
    void show() -> show
isf.controls.plaf.IPScrollBar -> isf.controls.plaf.T11ITIIllTl:
    void setUI(isf.controls.plaf.IPScrollBarUI) -> TT1lIT1ll1ITIIl1
isf.controls.plaf.IPScrollBarUI -> isf.controls.plaf.IPScrollBarUI:
    java.awt.Color backgroundColor -> backgroundColor
    java.awt.Color borderColor -> borderColor
    javax.swing.border.Border buttonBorder -> l1Il1TTIITIl1Tl
    java.awt.Color disabledBackgroundColor -> l11TTIl11lITIlIT
    java.awt.Color disabledBorderColor -> T11TlTlTIlIlI1I
    boolean isArmed -> I1ll11TlTIITlT1I
    boolean isRollover -> IlI1Il1T1TlTITl1
    java.awt.event.MouseListener mouseListener -> mouseListener
    java.awt.Color rolloverBackgroundColor -> IIllII1TlTTT11l1
    java.awt.Color selectedForegroundColor -> TlII1ITllTlIT
    java.awt.Color thumbBackgroundColor -> TI1T1llllTII1IT1
    java.awt.Color thumbRolloverBackgroundColor -> Il1Tl1IT1T1IlTIl
    java.awt.Color trackBackgroundColor -> llTIT11ITl1I1TlI
    void configureArrowButton(javax.swing.JButton) -> TT1lIT1ll1ITIIl1
    javax.swing.JButton createDecreaseButton(int) -> createDecreaseButton
    javax.swing.JButton createIncreaseButton(int) -> createIncreaseButton
    java.awt.event.MouseListener createMouseListener() -> createMouseListener
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void installDefaults() -> installDefaults
    void installListeners() -> installListeners
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
    void paintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintTrack
    void setArmed(boolean) -> setArmed
    void setRollover(boolean) -> setRollover
    void uninstallDefaults() -> uninstallDefaults
    void uninstallListeners() -> uninstallListeners
    javax.swing.border.Border access$000(isf.controls.plaf.IPScrollBarUI) -> ITI1llTTI1lITl
isf.controls.plaf.IPScrollBarUI$IPScrollBarArrowButton -> isf.controls.plaf.lIlIITlTT111:
    isf.controls.plaf.IPScrollBarUI this$0 -> llll1IITTT1IT1I1
    void setBorder(javax.swing.border.Border) -> setBorder
    void paint(java.awt.Graphics) -> paint
isf.controls.plaf.IPScrollBarUI$IPScrollBarMouseListener -> isf.controls.plaf.Il1TlIT1lTI1:
    isf.controls.plaf.IPScrollBarUI this$0 -> llll1IITTT1IT1I1
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
isf.controls.plaf.IPScrollButton -> isf.controls.plaf.l1lIl1TTTI1I:
    java.awt.Color shadowColor -> shadowColor
    java.awt.Color highlightColor -> highlightColor
    boolean isFreeStanding -> isFreeStanding
    int buttonWidth -> I1TTlTl11llT1III
    java.awt.Color scrollButton -> IT11l1lTIlII1TTl
    java.awt.Color scrollButtonBorder3D -> IT11l1lTTI1lTIlI
    java.awt.Color scrollBackGround -> ITIlTITl111TlIl
    void paint(java.awt.Graphics) -> paint
    void drawDisabledBorder(java.awt.Graphics,int,int,int,int) -> drawDisabledBorder
    void setFreeStanding(boolean) -> setFreeStanding
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    java.awt.Dimension getMaximumSize() -> getMaximumSize
    int getButtonWidth() -> getButtonWidth
isf.controls.plaf.IPScrollButtonUI -> isf.controls.plaf.TTl11llIITI:
    java.awt.Color col1 -> TIl1TT1lTI1I1Ill
    void paint(java.awt.Graphics) -> paint
isf.controls.plaf.IPScrollPaneUI -> isf.controls.plaf.IPScrollPaneUI:
    void installDefaults(javax.swing.JScrollPane) -> installDefaults
    void uninstallDefaults(javax.swing.JScrollPane) -> uninstallDefaults
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
isf.controls.plaf.IPSplitPaneDivider -> isf.controls.plaf.IllTIT1l1IT1:
    int defaultDividerSize -> defaultDividerSize
    int thumbSize -> I1Tlll1TTTI1Il1I
    java.awt.Color lightShadow -> lT1TlTIlIlT1I1I1
    java.awt.Color mediumShadow -> l1ll1TTIIl1IITT
    java.awt.Color darkShadow -> darkShadow
    java.awt.Color control -> IT11TT1TI1IllllI
    java.awt.Color focus -> focus
    javax.swing.ImageIcon icon1 -> IT1TlTl1I1TIlIl
    javax.swing.ImageIcon icon2 -> IT1IllT1II11llTT
    javax.swing.ImageIcon current -> llI1T1IT1T1TIllI
    java.awt.Cursor crosshairCursor -> TTIlTI1lI1T1l1lI
    java.awt.Cursor defaultCursor -> lI11l1lIlT1TTTII
    void setIPSplitPaneUI(isf.controls.plaf.IPSplitPaneUI) -> TT1lIT1ll1ITIIl1
    java.awt.Rectangle getThumbBounds() -> getThumbBounds
    void setDividerSize(int) -> setDividerSize
    int getDividerSize() -> getDividerSize
    void paint(java.awt.Graphics) -> paint
    void paintTop(java.awt.Graphics,int) -> TT1lIT1ll1ITIIl1
    void paintBottom(java.awt.Graphics,int,int) -> TT1lIT1ll1ITIIl1
    void paintLeft(java.awt.Graphics,int) -> ITI1llTTI1lITl
    void paintRight(java.awt.Graphics,int,int) -> ITI1llTTI1lITl
    void drawBorder(java.awt.Graphics,int,int,int,int,java.awt.Color,java.awt.Color,java.awt.Color,boolean) -> TT1lIT1ll1ITIIl1
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void changeImage() -> l1TlT1T1IlIII1Tl
isf.controls.plaf.IPSplitPaneUI -> isf.controls.plaf.IPSplitPaneUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installDefaults() -> installDefaults
    javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider() -> createDefaultDivider
    isf.controls.plaf.IPSplitPaneDivider getIsfDivider() -> TTT11I1lI1llTIIl
    int getDividerBorderSize() -> getDividerBorderSize
    void finishedPaintingChildren(javax.swing.JSplitPane,java.awt.Graphics) -> finishedPaintingChildren
    void finishDraggingTo(int) -> finishDraggingTo
    void dragDividerTo(int) -> dragDividerTo
    void startDragging() -> startDragging
isf.controls.plaf.IPVerticalLabelUI -> isf.controls.plaf.IPVerticalLabelUI:
    boolean clockwise -> IT1lTTI11llTIl1I
    java.awt.Rectangle paintIconR -> TTII1lllT1T1IlI
    java.awt.Rectangle paintTextR -> IlTI11IlT1lTl1IT
    java.awt.Rectangle paintViewR -> TIll1l1ITIIlT11T
    java.awt.Insets paintViewInsets -> llI1TTI1Il11lITT
    java.awt.Dimension getPreferredSize(javax.swing.JComponent) -> getPreferredSize
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.ISFComboBoxButton -> isf.controls.plaf.l1TI11ITTIll:
    javax.swing.JComboBox comboBox -> comboBox
    javax.swing.JList listBox -> listBox
    javax.swing.CellRendererPane rendererPane -> rendererPane
    javax.swing.Icon comboIcon -> comboIcon
    boolean iconOnly -> iconOnly
    javax.swing.JComboBox getComboBox() -> getComboBox
    void setComboBox(javax.swing.JComboBox) -> setComboBox
    javax.swing.Icon getComboIcon() -> getComboIcon
    void setComboIcon(javax.swing.Icon) -> setComboIcon
    boolean isIconOnly() -> isIconOnly
    void setIconOnly(boolean) -> setIconOnly
    boolean isFocusTraversable() -> isFocusTraversable
    boolean isLeftToRight(java.awt.Component) -> isLeftToRight
    void paintComponent(java.awt.Graphics) -> paintComponent
isf.controls.plaf.ISFComboBoxButton$1 -> isf.controls.plaf.IllTIIlT11T:
    isf.controls.plaf.ISFComboBoxButton this$0 -> Tl1Tl11ITl1IlTII
    void setArmed(boolean) -> setArmed
isf.controls.plaf.ISFComboBoxEditor -> isf.controls.plaf.TllIII11T1Tl:
    java.awt.Insets editorBorderInsets -> editorBorderInsets
    void focusGained(java.awt.event.FocusEvent) -> focusGained
isf.controls.plaf.ISFComboBoxEditor$EditorBorder -> isf.controls.plaf.ITl11lI1ITTl:
    isf.controls.plaf.ISFComboBoxEditor this$0 -> I1TlTIl1ITTl1lI
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
isf.controls.plaf.ISFComboBoxEditor$UIResource -> isf.controls.plaf.IT1llT1I1lTI:
isf.controls.plaf.ISFComboBoxIcon -> isf.controls.plaf.I1TTIllTlI:
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
isf.controls.plaf.ISFComboBoxUI -> isf.controls.plaf.ISFComboBoxUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    javax.swing.ComboBoxEditor createEditor() -> createEditor
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
    javax.swing.JButton createArrowButton() -> createArrowButton
    java.beans.PropertyChangeListener createPropertyChangeListener() -> createPropertyChangeListener
    void editablePropertyChanged(java.beans.PropertyChangeEvent) -> editablePropertyChanged
    java.awt.LayoutManager createLayoutManager() -> createLayoutManager
    void layoutComboBox(java.awt.Container,isf.controls.plaf.ISFComboBoxUI$MetalComboBoxLayoutManager) -> TT1lIT1ll1ITIIl1
    void removeListeners() -> removeListeners
    void configureEditor() -> configureEditor
    void unconfigureEditor() -> unconfigureEditor
    java.awt.Dimension getMinimumSize(javax.swing.JComponent) -> getMinimumSize
    javax.swing.JButton access$000(isf.controls.plaf.ISFComboBoxUI) -> TT1lIT1ll1ITIIl1
    javax.swing.JComboBox access$100(isf.controls.plaf.ISFComboBoxUI) -> ITI1llTTI1lITl
    javax.swing.JComboBox access$200(isf.controls.plaf.ISFComboBoxUI) -> l1IlTT1lITIl1IT1
    javax.swing.JButton access$300(isf.controls.plaf.ISFComboBoxUI) -> lI1I1T1ITTl1llIT
    javax.swing.JButton access$400(isf.controls.plaf.ISFComboBoxUI) -> IlITlTTTl11Il1I
isf.controls.plaf.ISFComboBoxUI$MetalComboBoxLayoutManager -> isf.controls.plaf.Il1IlTT1l1IT:
    isf.controls.plaf.ISFComboBoxUI this$0 -> I1TTl1TlIlT1l1II
    void layoutContainer(java.awt.Container) -> layoutContainer
    void superLayout(java.awt.Container) -> superLayout
isf.controls.plaf.ISFComboBoxUI$MetalComboPopup -> isf.controls.plaf.I11IlTlI1TlT:
    java.awt.Dimension dim -> l11TlIlTITI1IT1l
    int visible -> T1TlI11TITIlIll1
    isf.controls.plaf.ISFComboBoxUI this$0 -> I1TTl1TlIlT1l1II
    void delegateFocus(java.awt.event.MouseEvent) -> delegateFocus
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void configurePopup() -> configurePopup
isf.controls.plaf.ISFComboBoxUI$MetalPropertyChangeListener -> isf.controls.plaf.l1ITTl1IlTI1:
    isf.controls.plaf.ISFComboBoxUI this$0 -> I1TTl1TlIlT1l1II
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
isf.controls.plaf.ISFSplitPaneDivider -> isf.controls.plaf.IlT1TI1llTI:
    int ONE_TOUCH_SIZE -> ONE_TOUCH_SIZE
    int ONE_TOUCH_OFFSET -> ONE_TOUCH_OFFSET
    javax.swing.border.Border border -> border
    isf.controls.plaf.ISFSplitPaneUI splitPaneUI -> lIlI1T1T1llT1ITI
    int inset -> lTTTl11lI1IlII1T
    int dividerSize -> dividerSize
    int orientation -> orientation
    javax.swing.JSplitPane splitPane -> splitPane
    java.awt.Color controlColor -> TTlTIIllT11IlI1
    java.awt.Color primaryControlColor -> IlT1TTI1I1TlIll1
    javax.swing.JButton divBut -> TllIITlI1l1TI1T1
    void paint(java.awt.Graphics) -> paint
    javax.swing.JButton createLeftOneTouchButton() -> createLeftOneTouchButton
    javax.swing.JButton createRightOneTouchButton() -> createRightOneTouchButton
    int getOneTouchSizeFromSuper() -> getOneTouchSizeFromSuper
    int getOneTouchOffsetFromSuper() -> getOneTouchOffsetFromSuper
    int getOrientationFromSuper() -> getOrientationFromSuper
    javax.swing.JSplitPane getSplitPaneFromSuper() -> getSplitPaneFromSuper
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void setDividerSize(int) -> setDividerSize
    int getDividerSize() -> getDividerSize
    void setBorder(javax.swing.border.Border) -> setBorder
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    javax.swing.border.Border getBorder() -> getBorder
    java.awt.Dimension getMinimumSize() -> getMinimumSize
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    javax.swing.JButton access$000(isf.controls.plaf.ISFSplitPaneDivider) -> TT1lIT1ll1ITIIl1
isf.controls.plaf.ISFSplitPaneDivider$1 -> isf.controls.plaf.TIlT1lTIIl:
    int[][] Lbuffer -> T1l1I1IITlT1ITll
    isf.controls.plaf.ISFSplitPaneDivider this$0 -> TTT1IIlITI1ll11l
    void setBorder(javax.swing.border.Border) -> setBorder
    void paint(java.awt.Graphics) -> paint
    boolean isFocusTraversable() -> isFocusTraversable
isf.controls.plaf.ISFSplitPaneDivider$2 -> isf.controls.plaf.T1lTlIIlT1I:
    int[][] buffer -> buffer
    isf.controls.plaf.ISFSplitPaneDivider this$0 -> TTT1IIlITI1ll11l
    void setBorder(javax.swing.border.Border) -> setBorder
    void paint(java.awt.Graphics) -> paint
    boolean isFocusTraversable() -> isFocusTraversable
isf.controls.plaf.ISFSplitPaneDivider$ISFDividerLayout -> isf.controls.plaf.TTITllII1l11:
    isf.controls.plaf.ISFSplitPaneDivider this$0 -> TTT1IIlITI1ll11l
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
isf.controls.plaf.ISFSplitPaneUI -> isf.controls.plaf.ISFSplitPaneUI:
    javax.swing.JSplitPane splitPane -> splitPane
    isf.controls.plaf.ISFSplitPaneDivider divider -> I1lI1lTIl1IlTT1T
    int orientation -> orientation
    int lastDragLocation -> lI1T1Il1l1ITlTTI
    boolean continuousLayout -> continuousLayout
    boolean dividerKeyboardResize -> lI1lIT1lI1T1ITlT
    boolean dividerLocationIsSet -> Il1IIl1IT1TlTTl
    int dividerSize -> dividerSize
    java.awt.Component nonContinuousLayoutDivider -> nonContinuousLayoutDivider
    boolean draggingHW -> draggingHW
    java.lang.String NON_CONTINUOUS_DIVIDER -> NON_CONTINUOUS_DIVIDER
    boolean painted -> painted
    boolean ignoreDividerLocationChange -> ignoreDividerLocationChange
    isf.controls.plaf.ISFSplitPaneUI$ISFHorizontalLayoutManager layoutManager -> TIlIT1l111IlTTIl
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void installDefaults() -> installDefaults
    void resetLayoutManager() -> resetLayoutManager
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    boolean isContinuousLayout() -> isContinuousLayout
    void setContinuousLayout(boolean) -> setContinuousLayout
    javax.swing.JSplitPane getSplitPane() -> getSplitPane
    int getDividerLocation(javax.swing.JSplitPane) -> getDividerLocation
    int getMinimumDividerLocation(javax.swing.JSplitPane) -> getMinimumDividerLocation
    int getMaximumDividerLocation(javax.swing.JSplitPane) -> getMaximumDividerLocation
    void finishedPaintingChildren(javax.swing.JSplitPane,java.awt.Graphics) -> finishedPaintingChildren
    void resetToPreferredSizes(javax.swing.JSplitPane) -> resetToPreferredSizes
    void setDividerLocation(javax.swing.JSplitPane,int) -> setDividerLocation
    int getLastDragLocation() -> getLastDragLocation
    void setNonContinuousLayoutDivider(java.awt.Component) -> setNonContinuousLayoutDivider
    void setNonContinuousLayoutDivider(java.awt.Component,boolean) -> setNonContinuousLayoutDivider
    java.awt.Component createDefaultNonContinuousLayoutDivider() -> createDefaultNonContinuousLayoutDivider
    boolean access$000(isf.controls.plaf.ISFSplitPaneUI) -> TT1lIT1ll1ITIIl1
    boolean access$002(isf.controls.plaf.ISFSplitPaneUI,boolean) -> TT1lIT1ll1ITIIl1
    int access$100(isf.controls.plaf.ISFSplitPaneUI) -> ITI1llTTI1lITl
isf.controls.plaf.ISFSplitPaneUI$1 -> isf.controls.plaf.TI1l1TlTIlI:
    isf.controls.plaf.ISFSplitPaneUI this$0 -> llTl1l1TT1I1IIIT
    void paint(java.awt.Graphics) -> paint
isf.controls.plaf.ISFSplitPaneUI$ISFHorizontalLayoutManager -> isf.controls.plaf.IlI1Tl11TlTI:
    int[] sizes -> sizes
    java.awt.Component[] components -> components
    int lastSplitPaneSize -> IlT111IlTTTlIIl1
    boolean doReset -> l1TIlTIlIIlT1T1
    int axis -> axis
    isf.controls.plaf.ISFSplitPaneUI this$0 -> llTl1l1TT1I1IIIT
    void layoutContainer(java.awt.Container) -> layoutContainer
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    void resetToPreferredSizes() -> resetToPreferredSizes
    void resetSizeAt(int) -> resetSizeAt
    void setSizes(int[]) -> setSizes
    int[] getSizes() -> getSizes
    int getPreferredSizeOfComponent(java.awt.Component) -> getPreferredSizeOfComponent
    int getMinimumSizeOfComponent(java.awt.Component) -> getMinimumSizeOfComponent
    int getSizeOfComponent(java.awt.Component) -> getSizeOfComponent
    int getAvailableSize(java.awt.Dimension,java.awt.Insets) -> getAvailableSize
    int getInitialLocation(java.awt.Insets) -> getInitialLocation
    void setComponentToSize(java.awt.Component,int,int,java.awt.Insets,java.awt.Dimension) -> setComponentToSize
    int getSizeForPrimaryAxis(java.awt.Dimension) -> getSizeForPrimaryAxis
    int getSizeForSecondaryAxis(java.awt.Dimension) -> getSizeForSecondaryAxis
    int getSizeForPrimaryAxis(java.awt.Insets,boolean) -> getSizeForPrimaryAxis
    int getSizeForSecondaryAxis(java.awt.Insets,boolean) -> getSizeForSecondaryAxis
    void updateComponents() -> updateComponents
    void setDividerLocation(int,int) -> setDividerLocation
    int[] getPreferredSizes() -> getPreferredSizes
    int[] getMinimumSizes() -> getMinimumSizes
    void resetToPreferredSizes(int) -> resetToPreferredSizes
    void distributeSpace(int) -> l1IlTT1lITIl1IT1
isf.controls.plaf.ISFSplitPaneUI$ISFVerticalLayoutManager -> isf.controls.plaf.ll1TTTlI11II:
    isf.controls.plaf.ISFSplitPaneUI this$0 -> llTl1l1TT1I1IIIT
isf.controls.plaf.InscriptComboUI -> isf.controls.plaf.InscriptComboUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void setPopSize(java.awt.Dimension,javax.swing.JComboBox) -> TT1lIT1ll1ITIIl1
isf.controls.plaf.InscriptMenuItemUI -> isf.controls.plaf.InscriptMenuItemUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
isf.controls.plaf.InscriptScrollBarUI -> isf.controls.plaf.InscriptScrollBarUI:
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
isf.controls.utils.CatalogueConstants -> isf.controls.l1ID1lDI.l1IlIlTI1T1T:
    java.lang.String pStr -> lTITl11TI1lTIIl
    java.lang.String iStr -> lTTI111I1ITlTIll
    java.lang.String oStr -> TIlTlT1IIll11I1T
    java.lang.String[][] photoCatalogueNames -> IITIlllI1Tl11T1T
    java.lang.String[][] photoDublinNames -> T1T1TlIlIIT1I1ll
    java.lang.String[][] textCatalogueNames -> IIlT1TT1l1IIl1Tl
    java.lang.String[][] textDublinNames -> TIl1l1I1TITllIT
isf.controls.utils.CursorManager -> isf.controls.l1ID1lDI.lI1lTIIlT1T1:
    isf.controls.utils.CursorManager ourInstance -> ITl1TlII1TTllI
    boolean wait -> l11lIIT1TI1lITTl
    isf.controls.view.listeners.CursorListener cl -> l11I1TTlTIlIlT1I
    isf.controls.utils.CursorManager getInstance() -> ITlT1lll1IITI1T1
    void addCursorListener(isf.controls.view.listeners.CursorListener) -> TT1lIT1ll1ITIIl1
    void changeCursor(int) -> lI1I1T1ITTl1llIT
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor getCursor() -> getCursor
    java.awt.Rectangle getFrameBounds() -> Il11lTlITT1IlIT
isf.controls.utils.GlassPaneManager -> isf.controls.l1ID1lDI.Tl1l11IlIITT:
    isf.controls.view.containers.ISFGlassPane jpanel -> IIII1lT1lT1ll1TT
    javax.swing.JRootPane jrp -> TITIlT111IllT1lI
    javax.swing.JFrame mainApp -> Tl1111TllITTIIlI
    isf.controls.utils.GlassPaneManager gpm -> IIl1lTI1TIT11llT
    java.awt.Rectangle bounds -> bounds
    isf.controls.utils.GlassPaneManager getInstance() -> TIl1TTIIT11I1lll
    void showComponent(javax.swing.JComponent,java.awt.Rectangle) -> TT1lIT1ll1ITIIl1
    void updateControlBounds(java.awt.Rectangle) -> TT1lIT1ll1ITIIl1
    void showComponent(javax.swing.JComponent) -> TT1lIT1ll1ITIIl1
    void hideAll() -> llITlIlTI11T11IT
    void setUpGlasssPane(javax.swing.JFrame) -> TT1lIT1ll1ITIIl1
    void repaintRoot() -> IT11TTIllIIl1T1l
    boolean isShowing() -> isShowing
    java.awt.Graphics getGraphics() -> getGraphics
    java.awt.Component getComponent() -> getComponent
isf.controls.utils.PTMUtils -> isf.controls.l1ID1lDI.Il1TI1lIT1lT:
    isf.ptm.formats.PTM createCopy(isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    isf.common.utils.PTMConfig createCopy(isf.common.utils.PTMConfig) -> ITI1llTTI1lITl
    void copyPTM(java.io.File,java.io.File) -> TT1lIT1ll1ITIIl1
isf.controls.utils.ProgressManager -> isf.controls.l1ID1lDI.l11lIlTTI1TI:
    javax.swing.JComboBox box -> I1lT1lTITIlT1Il1
    isf.common.utils.PTMConfig ptm -> TT1lT1I1I1lITlIl
    void registerCombo(javax.swing.JComboBox) -> TT1lIT1ll1ITIIl1
    void setConfig(isf.common.utils.PTMConfig) -> TT1lIT1ll1ITIIl1
    isf.common.utils.PTMConfig getConfig() -> TTITl1lIllI1TI11
isf.controls.utils.ResolutionManager -> isf.controls.l1ID1lDI.T11ITIIllTl:
    isf.controls.utils.ResolutionManager resolutionManager -> I1l1IIITll1l1TTT
    java.awt.Dimension base -> TIll1IT1TlTI1lI
    java.awt.Dimension current -> Ill1ITI1ITT1l1Tl
    isf.controls.view.listeners.ImageLoader imageLoader -> lTllITIl1111TTII
    java.lang.ClassLoader cl -> cl
    isf.controls.utils.ResolutionManager getInstance() -> TIlTl1I1Il11TIlT
    void setDefaultResolution(java.awt.Dimension) -> TT1lIT1ll1ITIIl1
    void setImageLoader(isf.controls.view.listeners.ImageLoader) -> TT1lIT1ll1ITIIl1
    javax.swing.ImageIcon loadImage(java.lang.String) -> l1IllT11TIIT1ITl
    javax.swing.ImageIcon getImageIcon(java.lang.String) -> l1lT1IlI1IlT1TIT
    javax.swing.ImageIcon getImageIcon(javax.swing.ImageIcon) -> TT1lIT1ll1ITIIl1
    javax.swing.ImageIcon getScaledWidthIcon(java.lang.String) -> IlIT1lT1TI1IlT1l
    double[] getRatio() -> llT1lIITlIT11IT1
    int getFontSize(int) -> IlITlTTTl11Il1I
    int getTextColumns(int) -> IT11TT1lIll1ITIl
    boolean isCurrentResolutionLower() -> T11TlTlTIlIlI1I
    java.awt.Dimension getScreen() -> lIIT1TI11Tl1lITl
isf.controls.view.containers.CatalougeWindow -> isf.controls.llID1DI.l11lIDDI.l1IlIlTI1T1T:
    isf.controls.view.controls.InscriptButton catButton -> Il1TTTI1l1TIlIl1
    isf.controls.view.controls.InscriptButton dubButton -> IT1lll1TITI11ITl
    javax.swing.JLabel title -> I1TTIll1TIllI11T
    isf.controls.view.controls.InscriptButton close1 -> TTTI1TIl1l11IlIl
    isf.controls.view.controls.InscriptButton close2 -> TTIl11IITI1l1llT
    java.awt.Color bgColor -> TIlTlTlT11I1II1l
    javax.swing.ImageIcon icon -> TIlTlT1ITl1lI1I
    javax.swing.ImageIcon titleIcon -> IIlIlTTI1TTl1l1
    javax.swing.ImageIcon closeRight -> llTI1I11llTITIT
    javax.swing.ImageIcon closeLeft -> l11T1TIlIlIlTIT
    java.util.Hashtable ht -> ht
    isf.controls.view.listeners.CWListener cwl -> Tl11TI1T1IIIlTll
    isf.controls.view.containers.InscriptTextPane cat -> T1IlT1ITll1Il1TI
    int width -> width
    javax.swing.JScrollPane jScrollPane1 -> IT1l1I1TT1TlIllI
    java.awt.event.MouseListener ml -> TIl1lT1IITl1I1Tl
    java.awt.event.MouseMotionListener mml -> ITl1lTT1llI1TII1
    int mouseX -> IllI1TTT1lIITl1
    int mouseY -> lIl1IlTIl1TT1T1I
    int xposition -> TII1l1TIllI1lTT
    int yposition -> IlTllITI1I1TlT1
    org.apache.log4j.Logger log -> log
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void showDublinData() -> ITTTT11lIIIlll11
    void showCatalougeData() -> TTIlIIlTI1l11lT
    void setData(java.util.Hashtable) -> TT1lIT1ll1ITIIl1
    java.lang.String buildCatalougeData() -> lITTT1lIlI1lTI
    java.lang.String buildDubinData() -> T1TllIll1T1II1IT
    java.lang.String getString(java.lang.Object,java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    boolean isValid(java.lang.String) -> II11llTI1TlTITl1
    void addCWListener(isf.controls.view.listeners.CWListener) -> TT1lIT1ll1ITIIl1
    javax.swing.ImageIcon access$000() -> ITlTTIlII11T1ll1
isf.controls.view.containers.CatalougeWindow$1 -> isf.controls.llID1DI.l11lIDDI.lI1lTIIlT1T1:
    isf.controls.view.containers.CatalougeWindow this$0 -> TTIIlllIT11TlI1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.containers.ControlMenu -> isf.controls.llID1DI.l11lIDDI.Tl1l11IlIITT:
    void init() -> init
    void setEnabled(boolean) -> setEnabled
    void releaseControlMenu() -> TITlT1lIlTI1l1I
    void resetControls() -> IT1lTll1IT1lII1T
isf.controls.view.containers.ISFGlassPane -> isf.controls.llID1DI.l11lIDDI.Il1TI1lIT1lT:
    javax.swing.JFrame frame -> lTI1ITIlIll1T11T
    java.awt.Point point -> TT1ITllll1TII1I1
    boolean processEvent -> TTI1TIlllII1T1l1
    void setPoint(java.awt.Point) -> TT1lIT1ll1ITIIl1
    void eventDispatched(java.awt.AWTEvent) -> eventDispatched
    boolean contains(int,int) -> contains
isf.controls.view.containers.ISFSplitPane -> isf.controls.llID1DI.l11lIDDI.l11lIlTTI1TI:
    int topHeight -> T1Tl1Tl1TIlIlII
    int lastPosition -> l1TITTIIlI11Tll
    int curloc -> TIllITl1lTI1T1I1
    void paintChildren(java.awt.Graphics) -> paintChildren
    int getMaximumDividerLocation() -> getMaximumDividerLocation
    int getMinimumDividerLocation() -> getMinimumDividerLocation
    int getOneSize() -> TlTI11TIT1lIIll
    void setOneSize(int) -> TIITI1lTlTl1Il11
    void updateUI() -> updateUI
    void updateLocation() -> IllTT1IITl11lT1I
    void setDivider(int) -> TTl1TITI1l1Il1lI
    int getCurrentPos() -> getCurrentPos
    void changeImage() -> l1TlT1T1IlIII1Tl
isf.controls.view.containers.ImagePanel -> isf.controls.llID1DI.l11lIDDI.T11ITIIllTl:
    java.awt.Graphics offScreen -> TlIllTT11ITl1I1I
    java.awt.image.BufferedImage offImg -> TlI1lIIT1TlTI11l
    java.awt.Point sp -> ITI11llTll1I1ITT
    java.awt.Point ep -> TlII1TTTIl11lIl1
    int ax -> IIlITllT11I1T1Tl
    int ay -> TITlTIl1I11lTl1I
    int aw -> l1I1TIT1lIllT1IT
    int ah -> T1ITllTI11l1ITIl
    boolean active -> active
    boolean working -> lIITIl1I1lTTl11T
    org.apache.log4j.Logger log -> log
    isf.controls.view.listeners.SizeChangeListener notifier -> TI1l1TIlIlTlT1I1
    void addImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    void addImage(java.lang.String) -> T1TlITlIl11I1TIl
    boolean isLoading() -> T1TlITlIl11I1TIl
    boolean isPTMPanel() -> I111IITI1TlllTTl
    boolean isHSHPanel() -> llTTI111lI1IITlT
    boolean mustCurbResize() -> I1TTlI1IT1l1lIlT
    boolean isAtMaxLevel() -> TlIlTTlIIIlT111
    void setMessageShown(boolean) -> IT11TT1lIll1ITIl
    boolean getMessageShown() -> T11IITlllTT1IlI1
    void setStart(java.awt.Point) -> ITI1llTTI1lITl
    void setEnd(java.awt.Point) -> l1IlTT1lITIl1IT1
    void drawRect(java.awt.Graphics) -> TT1lIT1ll1ITIIl1
    java.lang.String getDetails() -> l11TTIl11lITIlIT
    java.lang.String saveImage(java.lang.String,java.lang.String) -> ITI1llTTI1lITl
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void setSizeNotifier(isf.controls.view.listeners.SizeChangeListener) -> TT1lIT1ll1ITIIl1
isf.controls.view.containers.InscriptTextPane -> isf.controls.llID1DI.l11lIDDI.lIlIITlTT111:
    org.apache.log4j.Logger log -> log
    java.awt.Dimension dim -> l11TlIlTITI1IT1l
    boolean scale -> ITIlTT111llI1TIl
    java.awt.event.MouseListener ml -> TIl1lT1IITl1I1Tl
    java.awt.event.MouseMotionListener mml -> ITl1lTT1llI1TII1
    void paint(java.awt.Graphics) -> paint
    void addMouseListener(java.awt.event.MouseListener) -> addMouseListener
    void addMouseMotionListener(java.awt.event.MouseMotionListener) -> addMouseMotionListener
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void hyperlinkUpdate(javax.swing.event.HyperlinkEvent) -> hyperlinkUpdate
isf.controls.view.containers.JIFrame -> isf.controls.llID1DI.l11lIDDI.Il1TlIT1lTI1:
    java.lang.String header -> ITlT1lll1IITI1T1
    java.lang.String imgName -> TT1T1IllITlI1l1I
    java.lang.String size -> IIITlTllIT1Tl1
    int orgLev -> TTIl1l1lTI1I1lIT
    int maxLev -> II11l1TTTIIllTl1
    int curLev -> TTI1lIIlTTIll11
    int wid -> TTTlIl11llIITI
    int hei -> IlTl1lI1TlIITT11
    int w -> w
    int h -> Tl11l1TTIIIT1Ill
    java.lang.String cpx -> IlTIl1IITTll11T1
    java.lang.String cpy -> lTlITT1lITlII
    java.awt.Point temp -> ITI1lT1Il11TITll
    java.awt.Point p -> T1Tl1llIIII11lTT
    java.awt.Point start -> TIlllIT1TITlI111
    java.awt.Point end -> IlTITIl1I1T1lTl
    java.awt.Rectangle oldrect -> TTTIlllI1I1IlT
    int px -> llI1l11TTITTIlI
    int py -> I1Tll1I1IlTTIl1T
    isf.controls.view.containers.ViewerPanel jip -> ITITT1lTll11I1Il
    boolean active -> active
    java.awt.Cursor zin -> lTTlITlITI1111Il
    java.awt.Cursor zout -> llTI1111TIIllTIT
    java.awt.Cursor drsel -> I11TTlTl1ITIlI1l
    java.awt.Cursor hando -> TlTllI1TI1T1II1l
    java.awt.Cursor handc -> lITT1TlI1lI1IT1l
    java.awt.Cursor light -> IT1ITllI1lTI1T1l
    java.awt.Cursor old -> TTTI11llTlIII1l
    int index -> index
    java.lang.String currentUrl -> Il1IlTT11TTI1llI
    boolean updated -> ITIl1T1lIT11TIll
    org.apache.log4j.Logger logger -> logger
    javax.swing.JComponent comp -> lTTlTII11ll1TII1
    java.awt.Rectangle rect -> T1IlITlTl1TII1l1
    boolean glassPaneShowing -> IlTIIT1Tl1llT1I
    boolean copy -> TIlTl1I1Il11TIlT
    void getDefVal() -> Il1I1llTTlI1TIT
    void update() -> update
    void reset() -> reset
    void setLevel(int,int) -> TT1lIT1ll1ITIIl1
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void updateImg() -> IIllII1TlTTT11l1
    float levelCvt(int,int) -> ITI1llTTI1lITl
    void calculateDiff() -> l1lTlT11ITlI1IIT
    void zoomOut() -> ll1TIIIT1lT1TIl1
    void setBounds(int,int,int,int) -> setBounds
    void isActive(boolean) -> TIITI1lTlTl1Il11
    java.lang.String getRet() -> TIT1ITlI1lIl1lT1
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    java.lang.String getProperties() -> TlII1ITllTlIT
    void resetAll() -> TIIlT111IITTll1l
    void saveAs(java.lang.String) -> Il1II1TlT1llTI1T
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    java.lang.String getImgName() -> III1Tl1lTllTIT11
    void setMode(int) -> setMode
    isf.controls.view.containers.ImagePanel getImagePanel() -> lIT1T1lIlT1ITIl
    boolean isCopy() -> ITlT1IITl11l1lTI
    void setCopy(boolean) -> lI1I1T1ITTl1llIT
    isf.controls.view.containers.ViewerPanel access$000(isf.controls.view.containers.JIFrame) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor access$100() -> access$100
isf.controls.view.containers.JIFrame$1 -> isf.controls.llID1DI.l11lIDDI.l1lIl1TTTI1I:
    isf.common.utils.PTMConfig val$config -> ll1II11T1lTlTTII
    isf.controls.models.DesktopDataObject val$dsk -> lT1lllITTIT1II11
    isf.controls.view.containers.JIFrame this$0 -> IIllI11TI1TTT1ll
    void run() -> run
isf.controls.view.containers.JIFrame$2 -> isf.controls.llID1DI.l11lIDDI.TTl11llIITI:
    isf.controls.view.containers.JIFrame this$0 -> IIllI11TI1TTT1ll
    void run() -> run
isf.controls.view.containers.PTMImpl -> isf.controls.llID1DI.l11lIDDI.IllTIT1l1IT1:
    void fitToSize() -> ITlIIl1TT1Tl1lI
    void addImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    void addImage(java.lang.String) -> T1TlITlIl11I1TIl
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    void addImage(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    void setDrawRect(boolean) -> TTl1TITI1l1Il1lI
    java.lang.String getCurrentLevel() -> Il1TTlI1lIIlT1T
    void reset() -> reset
    boolean isAdditionalLight() -> I11lT1lTlIIl1TIT
    isf.ptm.operations.Operation getPixelTransformOp() -> IITlTllI1TTI11l
    int getActiveLight() -> TIlll1TI1lITT1I
    void setActiveLight(int) -> IITTlT11lII1T1ll
    boolean isAnimated() -> l1Il1TTIITIl1Tl
    void setScale(float) -> setScale
    float getScale() -> getScale
    void setAnimated(boolean) -> setAnimated
    boolean isLoading() -> T1TlITlIl11I1TIl
    java.lang.String getDetails() -> l11TTIl11lITIlIT
    void fireTransform() -> fireTransform
    float getKSpec() -> getKSpec
    float getKDiff() -> getKDiff
    int getExp() -> getExp
    int getPTMWidth() -> getPTMWidth
    int getPTMHeight() -> getPTMHeight
    void setKSpec(float) -> setKSpec
    void setKDiff(float) -> setKDiff
    void setExp(int) -> setExp
    float getLuminance(int) -> getLuminance
    void setLuminance(float,int) -> setLuminance
    void setMapSampleSize(int) -> setMapSampleSize
    void setMapBlurType(int) -> setMapBlurType
    void setMapKernelSize(int) -> setMapKernelSize
    void setMapGuassianBlurSigma(float) -> setMapGuassianBlurSigma
    void refreshMap() -> refreshMap
    isf.ptm.formats.PTM getPTM() -> getPTM
    void forceUpdate() -> forceUpdate
    void setBrowser(java.awt.Container) -> setBrowser
    void setEnvironmentMap(isf.ptm.graphics.EnvironmentMap) -> setEnvironmentMap
    void setPixelTransformOp(isf.ptm.operations.Operation) -> setPixelTransformOp
    javax.swing.JLayeredPane getLayeredPane() -> getLayeredPane
    void toggleLight(boolean) -> IITTlT11lII1T1ll
    void setExtrapolation(boolean) -> setExtrapolation
    boolean isExtrapolation() -> isExtrapolation
    void detail() -> detail
    void speed() -> speed
    void useHint(boolean) -> useHint
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void setMessageShown(boolean) -> IT11TT1lIll1ITIl
    boolean getMessageShown() -> T11IITlllTT1IlI1
    boolean mustCurbResize() -> I1TTlI1IT1l1lIlT
    boolean isFrameActive() -> isFrameActive
    void setFrameActive(boolean) -> setFrameActive
    java.awt.Rectangle getDisplayRect() -> I1ll11TlTIITlT1I
    java.awt.Dimension getCurrentSize() -> getCurrentSize
    void updateLightPosition(int,int) -> l1IlTT1lITIl1IT1
isf.controls.view.containers.PTMPanel -> isf.controls.llID1DI.l11lIDDI.l1TI11ITTIll:
    isf.ptm.utils.LightSource[] lights -> IllTITT111IlIT1l
    boolean lockLights -> I1llIlTl1T11TIIT
    void addImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    void fitToSize() -> ITlIIl1TT1Tl1lI
    void addImage(java.lang.String) -> T1TlITlIl11I1TIl
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    void addImage(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    void setDrawRect(boolean) -> TTl1TITI1l1Il1lI
    java.lang.String getCurrentLevel() -> Il1TTlI1lIIlT1T
    void reset() -> reset
    boolean isAdditionalLight() -> I11lT1lTlIIl1TIT
    isf.ptm.operations.Operation getPixelTransformOp() -> IITlTllI1TTI11l
    int getActiveLight() -> TIlll1TI1lITT1I
    void toggleLight(boolean) -> IITTlT11lII1T1ll
    boolean isAnimated() -> l1Il1TTIITIl1Tl
    void setScale(float) -> setScale
    float getScale() -> getScale
    void setAnimated(boolean) -> setAnimated
    boolean isLoading() -> T1TlITlIl11I1TIl
    java.lang.String getDetails() -> l11TTIl11lITIlIT
    void fireTransform() -> fireTransform
    float getKSpec() -> getKSpec
    float getKDiff() -> getKDiff
    int getExp() -> getExp
    int getPTMWidth() -> getPTMWidth
    int getPTMHeight() -> getPTMHeight
    void setKSpec(float) -> setKSpec
    void setKDiff(float) -> setKDiff
    void setExp(int) -> setExp
    float getLuminance(int) -> getLuminance
    void setLuminance(float,int) -> setLuminance
    isf.ptm.formats.PTM getPTM() -> getPTM
    void setExtrapolation(boolean) -> setExtrapolation
    boolean isExtrapolation() -> isExtrapolation
    void setSizeNotifier(isf.controls.view.listeners.SizeChangeListener) -> TT1lIT1ll1ITIIl1
    void detail() -> detail
    void speed() -> speed
    void useHint(boolean) -> useHint
    void setActiveLight(int) -> IITTlT11lII1T1ll
    boolean isPTMPanel() -> I111IITI1TlllTTl
    void lockLights() -> IlI1Il1T1TlTITl1
    boolean isLocked() -> isLocked
    isf.ptm.utils.LightSource[] getLights() -> TI1T1llllTII1IT1
    java.awt.Rectangle getDisplayRect() -> I1ll11TlTIITlT1I
    java.awt.Dimension getCurrentSize() -> getCurrentSize
    void updateLightPosition(int,int) -> l1IlTT1lITIl1IT1
isf.controls.view.containers.PTMPanelImpl -> isf.controls.llID1DI.l11lIDDI.IllTIIlT11T:
    org.apache.log4j.Logger log -> log
    boolean animated -> TTll1I11II1TTlIl
    boolean frameActive -> IIl1ITTlTl1IlT
    boolean loading -> T11I1Tll1IllIITT
    boolean paintPosition -> III1ITlTT11l1llT
    java.lang.Thread animator -> ITll11TTTl1III1l
    int mouseX -> IllI1TTT1lIITl1
    int mouseY -> lIl1IlTIl1TT1T1I
    short[] mutex -> II11lT1TlIll1TIT
    isf.ptm.operations.Operation pixelTransformOp -> IT11IlT1lIIlTlT
    isf.common.utils.SegmentUtils[] segments -> IlI1T1IlT1ITll1T
    int activeLight -> TT11lIlITTl1IlI1
    isf.ptm.formats.PTM ptm -> ITTlTI1l1lTIl1I
    int curWid -> lTTITIlT1lI1Il
    int curHei -> TllTII1Il11lTI1T
    boolean dragging -> I1TllIITlT1T1lI
    java.lang.String fName -> fName
    java.lang.String thumbname -> I1T1l1lITIllITT1
    long size -> size
    double zoom -> llITI11lTlII1T1T
    java.awt.image.BufferedImage actImg -> lIIT1T1llT1IlTI1
    int divx -> TTll1I1TIIIlTl
    int divy -> IllTITI1l1l1TTI1
    float ratio -> ratio
    int[] pixels -> TI1II11ITll1lTTl
    int[] tiles -> IlTll1IITlI1T11T
    int peices -> T1I11TIll1TIlTlI
    int displayWidth -> displayWidth
    int displayHeight -> displayHeight
    int rows -> rows
    int cols -> cols
    int segSize -> lI1IlTTIIll11T1T
    boolean hints -> hints
    boolean isFast -> isFast
    boolean fixed -> fixed
    int width -> width
    int height -> height
    int posx -> T1lITIlIl1TI1l1T
    int posy -> l1TI1TIlIlTl11IT
    boolean contained -> T1lIT1llT1IlITI1
    boolean atMaxLevel -> Il11I1lTI1TTTIll
    boolean shown -> IIITlTlT1l1Il11T
    boolean drawRect -> llTIT1TIIlI11l1T
    int obtained -> T1IlTTIIIlll1T11
    boolean calculated -> T1T1lIlTTllIII
    boolean copied -> l1ITITTlITl11Il1
    isf.controls.view.containers.StatusPanel status -> lIl11IT1TITlI1Tl
    int newPX -> II1Il1TITl1llTT1
    int newPY -> lIlI1IITll1TT1T1
    int newMX -> IlIlII1llT1TT11T
    int newMY -> TT1ITIllT1l1lI1I
    int newDW -> I1IT1lT1lTIIllT
    int newDH -> ITTI11TlIlll1TI1
    float factor -> factor
    int MAXPIXELS -> TlII1T1Il1lIl1TT
    boolean thumbnailCached -> TlI1TTlII1IT11ll
    float dxLight -> Tl1llTII1Il11TTI
    float dyLight -> TTl1lI1TITllII
    int clickXImageCoordinate -> TlIITl1T11ITll1I
    int clickYImageCoordinate -> IlT11I1ll1TITIlT
    isf.common.utils.PTMConfig config -> IT11TTIllIIl1T1l
    int times -> I1llIllT1II11TTT
    boolean isRTI -> ITTll1I1T1I1llIT
    boolean firstView -> TII11lTTIll1ITl
    boolean multiView -> lllTITl1I1ITTI
    void fireTransform() -> fireTransform
    java.lang.String getCurrentLevel() -> Il1TTlI1lIIlT1T
    void forceUpdate() -> forceUpdate
    int getExp() -> getExp
    float getKDiff() -> getKDiff
    float getKSpec() -> getKSpec
    void setScale(float) -> setScale
    float getScale() -> getScale
    float getLuminance(int) -> getLuminance
    float getLuminance() -> getLuminance
    int getActiveLight() -> TIlll1TI1lITT1I
    void setActiveLight(int) -> IITTlT11lII1T1ll
    boolean isAdditionalLight() -> I11lT1lTlIIl1TIT
    isf.ptm.formats.PTM getPTM() -> getPTM
    int getPTMHeight() -> getPTMHeight
    int getPTMWidth() -> getPTMWidth
    void loadLocalFile(java.lang.String) -> lITTlIlT1IlI1T
    void loadMViewFile(int) -> l1IllT11TIIT1ITl
    void loadFile(isf.controls.models.DesktopDataObject) -> ITI1llTTI1lITl
    void loadFile(isf.common.utils.PTMConfig) -> lI1I1T1ITTl1llIT
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void paint(java.awt.Graphics) -> paint
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void notImplemented() -> Il1Tl1IT1T1IlTIl
    void refreshMap() -> refreshMap
    void run() -> run
    void setBrowser(java.awt.Container) -> setBrowser
    void setEnvironmentMap(isf.ptm.graphics.EnvironmentMap) -> setEnvironmentMap
    void setExp(int) -> setExp
    void setKDiff(float) -> setKDiff
    void setKSpec(float) -> setKSpec
    void setLuminance(float,int) -> setLuminance
    void setLuminance(float) -> setLuminance
    void setMapBlurType(int) -> setMapBlurType
    void setMapGuassianBlurSigma(float) -> setMapGuassianBlurSigma
    void setMapKernelSize(int) -> setMapKernelSize
    void setMapSampleSize(int) -> setMapSampleSize
    void setPixelTransformOp(isf.ptm.operations.Operation) -> setPixelTransformOp
    isf.ptm.operations.Operation getPixelTransformOp() -> IITlTllI1TTI11l
    void setAnimated(boolean) -> setAnimated
    boolean isAnimated() -> l1Il1TTIITIl1Tl
    void saveThumbnail() -> llTIT11ITl1I1TlI
    void start() -> start
    javax.swing.JLayeredPane getLayeredPane() -> getLayeredPane
    void addImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    void addImage(java.lang.String) -> T1TlITlIl11I1TIl
    void addImage(isf.common.utils.PTMConfig) -> l1IlTT1lITIl1IT1
    void addImage(isf.controls.models.DesktopDataObject) -> TT1lIT1ll1ITIIl1
    boolean isLoading() -> T1TlITlIl11I1TIl
    boolean isPTMPanel() -> I111IITI1TlllTTl
    boolean isHSHPanel() -> llTTI111lI1IITlT
    void zoomToFitDisplay() -> llll1IITTT1IT1I1
    java.awt.Dimension getCurrentSize() -> getCurrentSize
    java.awt.Dimension getDisplaySize() -> getDisplaySize
    java.lang.String getDetails() -> l11TTIl11lITIlIT
    void speed() -> speed
    void detail() -> detail
    void useHint(boolean) -> useHint
    java.lang.String arrayToString(int[]) -> TT1lIT1ll1ITIIl1
    java.lang.String arrayToString(float[]) -> TT1lIT1ll1ITIIl1
    void toggleLight(boolean) -> IITTlT11lII1T1ll
    void setExtrapolation(boolean) -> setExtrapolation
    boolean isExtrapolation() -> isExtrapolation
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void fitToSize() -> ITlIIl1TT1Tl1lI
    void reset() -> reset
    void setSingleLight() -> I1TTlTl11llT1III
    void calculateValuesAtFullSize() -> IT11l1lTIlII1TTl
    void performResizeOnPTM() -> IT11l1lTTI1lTIlI
    boolean isAtMaxLevel() -> TlIlTTlIIIlT111
    void setDrawRect(boolean) -> TTl1TITI1l1Il1lI
    void setMessageShown(boolean) -> IT11TT1lIll1ITIl
    boolean getMessageShown() -> T11IITlllTT1IlI1
    void addImage(isf.common.utils.PTMConfig,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    boolean mustCurbResize() -> I1TTlI1IT1l1lIlT
    void updateLight() -> ITIlTITl111TlIl
    void calcLightVector() -> TIl1TT1lTI1I1Ill
    void calcLightVector(int) -> l1lT1IlI1IlT1TIT
    void setFrameActive(boolean) -> setFrameActive
    boolean isFrameActive() -> isFrameActive
    java.awt.Rectangle getDisplayRect() -> I1ll11TlTIITlT1I
    float getFactor() -> I1Tlll1TTTI1Il1I
    void updateLightPosition(int,int) -> l1IlTT1lITIl1IT1
    void setDefaultLight() -> lT1TlTIlIlT1I1I1
    void setStart(java.awt.Point,int) -> TT1lIT1ll1ITIIl1
    void setEnd(java.awt.Point) -> l1IlTT1lITIl1IT1
    java.lang.String saveImage(java.lang.String,java.lang.String) -> ITI1llTTI1lITl
    java.lang.String getDisplayText() -> l1ll1TTIIl1IITT
    java.lang.String access$002(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> TT1lIT1ll1ITIIl1
    java.lang.String access$000(isf.controls.view.containers.PTMPanelImpl) -> TT1lIT1ll1ITIIl1
    java.lang.String access$102(isf.controls.view.containers.PTMPanelImpl,java.lang.String) -> ITI1llTTI1lITl
    long access$202(isf.controls.view.containers.PTMPanelImpl,long) -> TT1lIT1ll1ITIIl1
    isf.ptm.formats.PTM access$302(isf.controls.view.containers.PTMPanelImpl,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    isf.ptm.formats.PTM access$300(isf.controls.view.containers.PTMPanelImpl) -> ITI1llTTI1lITl
    void access$400(isf.controls.view.containers.PTMPanelImpl) -> l1IlTT1lITIl1IT1
    org.apache.log4j.Logger access$500(isf.controls.view.containers.PTMPanelImpl) -> lI1I1T1ITTl1llIT
    void access$600(isf.controls.view.containers.PTMPanelImpl) -> IlITlTTTl11Il1I
    boolean access$702(isf.controls.view.containers.PTMPanelImpl,boolean) -> TT1lIT1ll1ITIIl1
    long access$200(isf.controls.view.containers.PTMPanelImpl) -> IT11TT1lIll1ITIl
    void access$800(isf.controls.view.containers.PTMPanelImpl) -> TIITI1lTlTl1Il11
    short[] access$900(isf.controls.view.containers.PTMPanelImpl) -> TTl1TITI1l1Il1lI
    boolean access$1002(isf.controls.view.containers.PTMPanelImpl,boolean) -> ITI1llTTI1lITl
    isf.common.utils.SegmentUtils[] access$1100(isf.controls.view.containers.PTMPanelImpl) -> IITTlT11lII1T1ll
    int access$1200(isf.controls.view.containers.PTMPanelImpl) -> l1IllT11TIIT1ITl
    int access$1300(isf.controls.view.containers.PTMPanelImpl) -> l1lT1IlI1IlT1TIT
    int access$1400(isf.controls.view.containers.PTMPanelImpl) -> IlIT1lT1TI1IlT1l
    boolean access$1500(isf.controls.view.containers.PTMPanelImpl) -> II11llTI1TlTITl1
    int access$1302(isf.controls.view.containers.PTMPanelImpl,int) -> TT1lIT1ll1ITIIl1
    int access$1402(isf.controls.view.containers.PTMPanelImpl,int) -> ITI1llTTI1lITl
    int access$1600(isf.controls.view.containers.PTMPanelImpl) -> T1TlITlIl11I1TIl
    isf.ptm.operations.Operation access$1700(isf.controls.view.containers.PTMPanelImpl) -> Il1II1TlT1llTI1T
    int[] access$1800(isf.controls.view.containers.PTMPanelImpl) -> lITTlIlT1IlI1T
isf.controls.view.containers.PTMPanelImpl$1 -> isf.controls.llID1DI.l11lIDDI.TllIII11T1Tl:
    long start -> start
    java.lang.String val$ptmFile -> IITll1TT11Il1IlT
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    java.lang.Object construct() -> construct
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$1$1 -> isf.controls.llID1DI.l11lIDDI.ITl11lI1ITTl:
    isf.controls.view.containers.PTMPanelImpl$1 this$1 -> lI1TTT1l1llTI1II
    void run() -> run
isf.controls.view.containers.PTMPanelImpl$2 -> isf.controls.llID1DI.l11lIDDI.IT1llT1I1lTI:
    long start -> start
    int val$index -> val$index
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    java.lang.Object construct() -> construct
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$2$1 -> isf.controls.llID1DI.l11lIDDI.I1TTIllTlI:
    isf.controls.view.containers.PTMPanelImpl$2 this$1 -> lTT1llI1I1TlT1II
    void run() -> run
isf.controls.view.containers.PTMPanelImpl$3 -> isf.controls.llID1DI.l11lIDDI.Il1IlTT1l1IT:
    java.lang.String val$ptmFile -> IITll1TT11Il1IlT
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    java.lang.Object construct() -> construct
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$4 -> isf.controls.llID1DI.l11lIDDI.I11IlTlI1TlT:
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    java.lang.Object construct() -> construct
    void finished() -> finished
isf.controls.view.containers.PTMPanelImpl$FetchImage -> isf.controls.llID1DI.l11lIDDI.l1ITTl1IlTI1:
    java.lang.String file -> file
    int index -> index
    isf.ptm.formats.PTM ptm -> ITTlTI1l1lTIl1I
    int row -> row
    int col -> col
    int tilew -> TII1ll1l1IlTTIT
    int tileh -> lTlITlT1lII1IT11
    int band -> I1IlT1llIT1Tl1IT
    int top -> top
    int left -> left
    int tileIndex -> ITllTT11IllIT1I1
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    void run() -> run
isf.controls.view.containers.PTMPanelImpl$UpdateProgress -> isf.controls.llID1DI.l11lIDDI.IlT1TI1llTI:
    boolean changed -> T1IT1lTIIIT1l1ll
    javax.swing.Timer timer -> timer
    int count -> count
    isf.controls.view.containers.PTMPanelImpl this$0 -> lIlTT1l11ITII1lT
    void startMonitor() -> startMonitor
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void updateFinalize() -> IT11TT1TI1IllllI
isf.controls.view.containers.PTMPanelImpl$UpdateProgress$1 -> isf.controls.llID1DI.l11lIDDI.TIlT1lTIIl:
    isf.controls.view.containers.PTMPanelImpl$UpdateProgress this$1 -> TIlIT11l1lIT1ITl
    void run() -> run
isf.controls.view.containers.ProgressPane -> isf.controls.llID1DI.l11lIDDI.T1lTlIIlT1I:
    isf.common.utils.PTMConfig ptm -> TT1lT1I1I1lITlIl
    javax.swing.JPanel panel -> IIIlTTll11I11TlT
    javax.swing.JProgressBar progress -> lTl1lTTIIIT1l1I
    org.apache.log4j.Logger log -> log
    void registerBar() -> IT1TlTl1I1TIlIl
    java.lang.String fetchFileNames() -> IT1IllT1II11llTT
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
isf.controls.view.containers.ProgressPane$1 -> isf.controls.llID1DI.l11lIDDI.TTITllII1l11:
    isf.controls.view.containers.ProgressPane this$0 -> II1llIl11TlITTT
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.containers.SidPanel -> isf.controls.llID1DI.l11lIDDI.TI1l1TlTIlI:
    javax.swing.ImageIcon ic -> TIlIl1T1Tl11lITI
    int width -> width
    int height -> height
    int maxlevel -> TTIT1llTIl1I1lI
    int curlevel -> lTTTI11IIll11TlI
    java.lang.String imgName -> TT1T1IllITlI1l1I
    java.lang.String fileSize -> IlTl111llITTIT1I
    boolean firstTime -> firstTime
    boolean shown -> IIITlTlT1l1Il11T
    void addImage(java.lang.String) -> T1TlITlIl11I1TIl
    void addImage(javax.swing.ImageIcon) -> ITI1llTTI1lITl
    void paint(java.awt.Graphics) -> paint
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    boolean isAtMaxLevel() -> TlIlTTlIIIlT111
    boolean isLoading() -> T1TlITlIl11I1TIl
    java.lang.String getDetails() -> l11TTIl11lITIlIT
    int getImgWidth() -> llI1T1IT1T1TIllI
    void setImgWidth(int) -> IlIT1lT1TI1IlT1l
    int getImgHeight() -> TTIlTI1lI1T1l1lI
    void setImgHeight(int) -> II11llTI1TlTITl1
    int getMaxLevel() -> lI11l1lIlT1TTTII
    void setMaxLevel(int) -> T1TlITlIl11I1TIl
    int getCurLevel() -> IT1lTTI11llTIl1I
    void setCurLevel(int) -> Il1II1TlT1llTI1T
    java.lang.String getFileSize() -> TTII1lllT1T1IlI
    void setFileSize(java.lang.String) -> ITl1I11TIlTlTlI1
    java.lang.String getImgName() -> III1Tl1lTllTIT11
    void setImgName(java.lang.String) -> T11I1Tll1IllIITT
    void updateSizeInformation() -> IlTI11IlT1lTl1IT
    void setMessageShown(boolean) -> IT11TT1lIll1ITIl
    boolean getMessageShown() -> T11IITlllTT1IlI1
    boolean mustCurbResize() -> I1TTlI1IT1l1lIlT
isf.controls.view.containers.StatusPanel -> isf.controls.llID1DI.l11lIDDI.IlI1Tl11TlTI:
    isf.controls.view.controls.ISFProgressBar bar -> TIllIlT1I1T1TIl1
    void showStatus(java.lang.String) -> showStatus
    void start() -> start
    void stop() -> stop
isf.controls.view.containers.TrimmedPanel -> isf.controls.llID1DI.l11lIDDI.ll1TTTlI11II:
    java.awt.Insets ins -> I1IITTT11lTlIll
    java.awt.Insets getInsets() -> getInsets
isf.controls.view.containers.ViewDesktop -> isf.controls.llID1DI.l11lIDDI.lITIIlTT1l:
    isf.controls.view.listeners.ViewDesktopListener vdListener -> ITIll1TIT111IllT
    isf.controls.view.containers.ViewDesktopPanels vdtPanels -> T1T1IIlI1lT1TlIl
    java.awt.Container contentPane -> contentPane
    java.util.Vector v -> IITTTTllIl11I11l
    java.awt.Frame parent -> llI1lIIITTT1l11T
    isf.controls.view.containers.CatalougeWindow cp -> TT1ll1lIlIITIT1
    java.awt.Rectangle old -> TT1I1lTITll1lI1I
    java.awt.Point p -> T1Tl1llIIII11lTT
    java.awt.Point temp -> ITI1lT1Il11TITll
    int mouseX -> IllI1TTT1lIITl1
    int mouseY -> lIl1IlTIl1TT1T1I
    int xposition -> TII1l1TIllI1lTT
    int yposition -> IlTllITI1I1TlT1
    void setFrame(java.awt.Frame) -> TT1lIT1ll1ITIIl1
    void init() -> init
    void addDataObject(isf.controls.models.DesktopDataObject) -> l1IlTT1lITIl1IT1
    void addDummy(java.lang.String) -> lT1lITllTTII111I
    void addViewDesktopListener(isf.controls.view.listeners.ViewDesktopListener) -> TT1lIT1ll1ITIIl1
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.awt.Insets getInsets() -> getInsets
    isf.controls.view.listeners.ViewDesktopListener getVDL() -> TIll1l1ITIIlT11T
    java.awt.Dimension getCatButtonSize() -> llI1TTI1Il11lITT
    boolean getNotification() -> Tl1Tl11ITl1IlTII
    void setSelectedData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    void activationChanged() -> I1TlTIl1ITTl1lI
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void reset() -> reset
isf.controls.view.containers.ViewDesktopPanels -> isf.controls.llID1DI.l11lIDDI.ITTII1T1l1ll:
    java.awt.event.ActionListener al -> TIITTlI1llI1lT11
    isf.controls.view.controls.ViewDesktopButton emptyButton -> lTlTIlIT11ITIl11
    isf.controls.view.controls.InscriptButton catButton -> Il1TTTI1l1TIlIl1
    isf.controls.view.controls.InscriptButton dublincatButton -> l1TIlTITlTI1lI11
    isf.controls.view.controls.ViewDesktopButton button -> IT1TlI1lI1lTTl1I
    javax.swing.JPanel emptyPanel -> IITT111lTlIIl1lT
    javax.swing.JPanel dataPanel -> IT1TlI1TI11ITlll
    javax.swing.JPanel catalogPanel -> I1TllIlIl1ITT1T1
    java.util.Vector imageList -> TTl1l1ITIl1Il1IT
    int activeIndex -> TTIlI111llTlTII
    isf.controls.view.listeners.ActivationListener acl -> l11TTT1I1IlIIllT
    boolean notified -> notified
    int index -> index
    boolean border1 -> lIl1lTITITl1IT1
    boolean border2 -> TITll11I11ITlTlI
    java.util.Vector selectedData -> l11TlTlTI1IlI1TI
    java.lang.String mode -> II1I1lI1TTll1TTl
    java.lang.String appName -> T1lITlIT1I11ITll
    org.apache.log4j.Logger logger -> logger
    void init() -> init
    void addDataObject(isf.controls.models.DesktopDataObject) -> l1IlTT1lITIl1IT1
    void addDummy(java.lang.String) -> lT1lITllTTII111I
    java.util.Vector getDataList() -> I1TTl1TlIlT1l1II
    void addActionListener(java.awt.event.ActionListener) -> addActionListener
    void addActivationListener(isf.controls.view.listeners.ActivationListener) -> TT1lIT1ll1ITIIl1
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void minimized(java.lang.String) -> TT1lIT1ll1ITIIl1
    void activated(java.lang.String) -> ITI1llTTI1lITl
    void setSelectedData(java.util.Vector) -> TT1lIT1ll1ITIIl1
    java.util.Hashtable getActiveImageData() -> l11TlIlTITI1IT1l
    void deleted(java.lang.String) -> l1IlTT1lITIl1IT1
    void setNotification(java.lang.String) -> lI1I1T1ITTl1llIT
    boolean getNotification() -> Tl1Tl11ITl1IlTII
    void buttonSelected(java.lang.String) -> IlTT11IT1ITI1lll
    void reset() -> reset
isf.controls.view.containers.ViewerPanel -> isf.controls.llID1DI.l11lIDDI.TlIT11IITll:
    isf.controls.view.containers.ImagePanel panel -> ITlTll1lTTII111I
    isf.controls.view.containers.StatusPanel status -> lIl11IT1TITlI1Tl
    java.lang.String type -> type
    javax.swing.JLabel label -> label
    isf.controls.view.containers.ImagePanel getPanel() -> T1TlI11TITIlIll1
    isf.controls.view.containers.StatusPanel getStatus() -> lIlI1T1T1llT1ITI
    void updateSize(java.lang.String) -> TIl1T1IlT1IIl1lT
isf.controls.view.controls.ISFButton -> isf.controls.llID1DI.I11lIlDD.l1IlIlTI1T1T:
    void setSelected(boolean) -> setSelected
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    java.awt.Insets getInsets() -> getInsets
isf.controls.view.controls.ISFProgressBar -> isf.controls.llID1DI.I11lIlDD.lI1lTIIlT1T1:
    int SLOW -> Tl11lTl1IIIT1IlT
    int speed -> T11TTlTlIIlIIl11
    javax.swing.Timer timer -> timer
    boolean running -> running
    java.awt.Color bgColor -> TIlTlTlT11I1II1l
    java.awt.Color forecolor -> II1lI1Tl1lTITT1l
    java.awt.Color barBgColor -> TIllIlITTIT1l111
    java.util.ArrayList bars -> TIlI11IlTlI1l1TT
    boolean rectsInitialized -> Ill1lITlI1TTIT1
    java.awt.Dimension size -> size
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int HIGH -> l1T1lI1TI1lTTlII
    int MED -> lI11Tl1lTITT1IlI
    int LOW -> I1TIllITT1I1l1Tl
    int OFF -> OFF
    int pos -> pos
    int direction -> direction
    java.lang.String message -> message
    java.awt.image.BufferedImage backBuffer -> lI1Il1llITTT1TI
    java.util.HashMap colorMap -> II1I1l1TlTTlITl1
    java.awt.Color getBackgroundColor() -> lTTTl11lI1IlII1T
    boolean isRunning() -> isRunning
    void setText(java.lang.String) -> setText
    void setBackgroundColor(java.awt.Color) -> IlITlTTTl11Il1I
    void setForegroundColor(java.awt.Color) -> IT11TT1lIll1ITIl
    java.awt.Color getBarBackgroundColor() -> TTlTIIllT11IlI1
    void setBarBackgroundColor(java.awt.Color) -> TIITI1lTlTl1Il11
    void setBarColor(java.awt.Color) -> TTl1TITI1l1Il1lI
    java.awt.Color getLighterColor(java.awt.Color) -> IITTlT11lII1T1ll
    void paint(java.awt.Graphics) -> paint
    java.awt.Color getStateColor(int) -> lITTlIlT1IlI1T
    void drawBar(java.awt.Graphics2D,java.awt.Color,java.awt.Rectangle) -> TT1lIT1ll1ITIIl1
    void drawBar(java.awt.Graphics2D,java.awt.Color,int,int,int,int) -> TT1lIT1ll1ITIIl1
    void updateAnimation() -> IlT1TTI1I1TlIll1
    void stopAnimation() -> II11llTI1TlTITl1
    void initializeBars() -> TllIITlI1l1TI1T1
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void traditional() -> T1l1I1IITlT1ITll
    void startAnimation() -> TTT1IIlITI1ll11l
    void setAnimationSpeed(int) -> ITl1I11TIlTlTlI1
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.ISFProgressBar$Bar -> isf.controls.llID1DI.I11lIlDD.Tl1l11IlIITT:
    int state -> state
    java.awt.Rectangle rect -> T1IlITlTl1TII1l1
    boolean stateModified -> TTllITTII1l11lI1
    boolean sizeModified -> lIl1ITTIl11TIT1l
    isf.controls.view.controls.ISFProgressBar this$0 -> TTlTl1l1lIT1III
    boolean isRectDefined() -> I1lI1lTIl1IlTT1T
    void setRect(java.awt.Rectangle) -> ITI1llTTI1lITl
    java.awt.Rectangle getRect() -> lI1T1Il1l1ITlTTI
    boolean isStateModified() -> lI1lIT1lI1T1ITlT
    void setStateModified(boolean) -> l1IllT11TIIT1ITl
    int getState() -> getState
    void setState(int) -> setState
    void setSizeModified() -> Il1IIl1IT1TlTTl
    boolean isSizeModified() -> TIlIT1l111IlTTIl
isf.controls.view.controls.ISFSlider -> isf.controls.llID1DI.I11lIlDD.Il1TI1lIT1lT:
isf.controls.view.controls.InscriptBorder -> isf.controls.llID1DI.I11lIlDD.l11lIlTTI1TI:
    java.awt.Color col -> TTITII1TIll1l1l1
    java.awt.Insets getBorderInsets(java.awt.Component) -> getBorderInsets
    boolean isBorderOpaque() -> isBorderOpaque
    void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) -> paintBorder
isf.controls.view.controls.InscriptButton -> isf.controls.llID1DI.I11lIlDD.T11ITIIllTl:
    java.lang.String imageUrl -> IT1TIllT1TlIl1I1
    void setScaledStatus(boolean) -> l1lT1IlI1IlT1TIT
    java.awt.Dimension getPreferredSize() -> getPreferredSize
isf.controls.view.controls.IsfComboBox -> isf.controls.llID1DI.I11lIlDD.lIlIITlTT111:
    int popupWidth -> I1ll11TTIlIlT1IT
    void setPopupWidth(int) -> T11I1Tll1IllIITT
    java.awt.Dimension getPopupSize() -> llTl1l1TT1I1IIIT
isf.controls.view.controls.SidDesktop -> isf.controls.llID1DI.I11lIlDD.Il1TlIT1lTI1:
    org.apache.log4j.Logger log -> log
    int ZIN -> l1TIIlTlT11TIlI
    int ZOUT -> Ill1I1I1TTlIl1TT
    int SZ -> TIl1TIlllI1T11IT
    int PAN -> I11IlT1TllII1TlT
    int PROP -> I1IlT1lTlIITlT11
    int FIT -> IlT1II111llTITlT
    int ABT -> ll1lTIlTTI1I1I1T
    int SAVE -> SAVE
    int PTM -> IIlllTT11IlTIT
    int SELECT -> SELECT
    boolean masked -> llTIITT111Il1TIl
    java.util.Vector avail -> IllII1TlT1lTTI1
    javax.swing.JDesktopPane jp -> Il1TTl1IT11llTII
    isf.controls.view.containers.JIFrame[] frames -> lTTI1IlllI1I11TT
    int count -> count
    isf.controls.view.controls.SidToolbar sidtoolbar -> Tl1I1I1I1lTlTlTI
    java.awt.Cursor current -> l1lT1II1llTTITI1
    boolean loading -> T11I1Tll1IllIITT
    java.lang.String about -> I1I1llTTTTI1l1lI
    java.awt.Insets getInsets() -> getInsets
    javax.swing.border.Border getBorder() -> getBorder
    java.lang.String addImage(isf.controls.models.DesktopDataObject) -> lI1I1T1ITTl1llIT
    void performAction(int) -> lT1lITllTTII111I
    void internalFrameClosing(javax.swing.event.InternalFrameEvent) -> internalFrameClosing
    void internalFrameClosed(javax.swing.event.InternalFrameEvent) -> internalFrameClosed
    void internalFrameOpened(javax.swing.event.InternalFrameEvent) -> internalFrameOpened
    void internalFrameIconified(javax.swing.event.InternalFrameEvent) -> internalFrameIconified
    void internalFrameDeiconified(javax.swing.event.InternalFrameEvent) -> internalFrameDeiconified
    void internalFrameActivated(javax.swing.event.InternalFrameEvent) -> internalFrameActivated
    void internalFrameDeactivated(javax.swing.event.InternalFrameEvent) -> internalFrameDeactivated
    void resize(java.awt.Rectangle) -> l1IlTT1lITIl1IT1
    java.lang.String getActive() -> IlT111IlTTTlIIl1
    void setActive(java.lang.String) -> I1TTT1IIlTIll1l
    java.lang.String checkImage(isf.controls.models.DesktopDataObject) -> IlITlTTTl11Il1I
    void updateCount(int) -> IlTT11IT1ITI1lll
    void reset() -> reset
    void deleteControl() -> l1TIlTIlIIlT1T1
    java.lang.String addImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    boolean canLoad() -> lTITl11TI1lTIIl
    void stopLoad() -> lTTI111I1ITlTIll
isf.controls.view.controls.SidToolbar -> isf.controls.llID1DI.I11lIlDD.l1lIl1TTTI1I:
    int index -> index
    isf.controls.view.listeners.ViewDesktopListener vdl -> lT1TIIl1TlITl1I1
    boolean spaceDown -> llT11ITTITIl11lI
    boolean controlDown -> TTTIlII1T1l1ll1I
    java.lang.String curDir -> IT1Tl11ll1ITlTII
    java.lang.String appMode -> l1lITTITlIlTI1
    java.lang.String appName -> T1lITlIT1I11ITll
    isf.controls.view.controls.ISFButton[] ptmTools -> T1T11IIlllI1TITl
    isf.controls.view.controls.ISFButton btnOpen -> llIl1Tl11IIITT1T
    isf.controls.view.controls.ISFButton btnDnl -> TlITTTII1ll1Il1
    isf.controls.view.controls.ISFButton btnZin -> II1l11TIlIlT1TTl
    isf.controls.view.controls.ISFButton btnZout -> lIITIIlT111T1Tll
    isf.controls.view.controls.ISFButton btnPan -> IT11lII1ll1TTIlT
    isf.controls.view.controls.ISFButton btnSelZoom -> T1l1IllIT11TTlII
    isf.controls.view.controls.ISFButton btnFit -> TITlTl1TIl11II1l
    isf.controls.view.controls.ISFButton btnProp -> lITTlI1T1I1lI1lT
    isf.controls.view.controls.ISFButton btnAbt -> ITTlIllIlT1IT1
    isf.controls.view.controls.ISFButton btnSave -> TllITTl11IIlI11T
    isf.controls.view.controls.ISFButton btnScreen -> TllTIlTTIII111l
    void addVDListener(isf.controls.view.listeners.ViewDesktopListener) -> ITI1llTTI1lITl
    void setCommonButtons(boolean) -> IlIT1lT1TI1IlT1l
    void setPTMButtons(boolean) -> II11llTI1TlTITl1
    void initComponents() -> initComponents
    void btnCopyActionPerformed(java.awt.event.ActionEvent) -> TT1lIT1ll1ITIIl1
    void btnPanActionPerformed(java.awt.event.ActionEvent) -> ITI1llTTI1lITl
    void btnZoutActionPerformed(java.awt.event.ActionEvent) -> l1IlTT1lITIl1IT1
    void btnZinActionPerformed(java.awt.event.ActionEvent) -> lI1I1T1ITTl1llIT
    void btnDnlActionPerformed(java.awt.event.ActionEvent) -> IlITlTTTl11Il1I
    void btnSelZoomActionPerformed(java.awt.event.ActionEvent) -> IT11TT1lIll1ITIl
    void btnFitActionPerformed(isf.controls.view.controls.ISFButton) -> ITI1llTTI1lITl
    void btnPropActionPerformed(java.awt.event.ActionEvent) -> TIITI1lTlTl1Il11
    void btnAbtActionPerformed(java.awt.event.ActionEvent) -> TTl1TITI1l1Il1lI
    void btnSaveActionPerformed(java.awt.event.ActionEvent) -> IITTlT11lII1T1ll
    void btnLightActionPerformed(java.awt.event.ActionEvent) -> l1IllT11TIIT1ITl
    void btnScreenActionPerformed(isf.controls.view.controls.ISFButton) -> l1IlTT1lITIl1IT1
    void btnOpenActionPerformed(java.awt.event.ActionEvent) -> l1lT1IlI1IlT1TIT
    boolean isFloatable() -> isFloatable
    java.awt.Insets getMargin() -> getMargin
    void setEnabledButtons() -> TIlTlT1IIll11I1T
    void updateComp(isf.controls.view.controls.ISFButton) -> lI1I1T1ITTl1llIT
    isf.controls.view.controls.ISFButton getSelected() -> IITIlllI1Tl11T1T
    void updateDefault() -> T1T1TlIlIIT1I1ll
    boolean trapKeys() -> IIlT1TT1l1IIl1Tl
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
    void setupZoom(boolean) -> T1TlITlIl11I1TIl
    void setupPan() -> TIl1l1I1TITllIT
    void setupSelZoom() -> ITl1TlII1TTllI
    void access$000(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TT1lIT1ll1ITIIl1
    void access$100(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> ITI1llTTI1lITl
    void access$200(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1IlTT1lITIl1IT1
    void access$300(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> lI1I1T1ITTl1llIT
    void access$400(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IlITlTTTl11Il1I
    void access$500(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IT11TT1lIll1ITIl
    void access$600(isf.controls.view.controls.SidToolbar,isf.controls.view.controls.ISFButton) -> TT1lIT1ll1ITIIl1
    void access$700(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TIITI1lTlTl1Il11
    void access$800(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> TTl1TITI1l1Il1lI
    void access$900(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> IITTlT11lII1T1ll
    void access$1000(isf.controls.view.controls.SidToolbar,isf.controls.view.controls.ISFButton) -> ITI1llTTI1lITl
    void access$1100(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1IllT11TIIT1ITl
    void access$1200(isf.controls.view.controls.SidToolbar,java.awt.event.ActionEvent) -> l1lT1IlI1IlT1TIT
isf.controls.view.controls.SidToolbar$1 -> isf.controls.llID1DI.I11lIlDD.TTl11llIITI:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$10 -> isf.controls.llID1DI.I11lIlDD.IllTIT1l1IT1:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$11 -> isf.controls.llID1DI.I11lIlDD.l1TI11ITTIll:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$12 -> isf.controls.llID1DI.I11lIlDD.IllTIIlT11T:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$13 -> isf.controls.llID1DI.I11lIlDD.TllIII11T1Tl:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$14 -> isf.controls.llID1DI.I11lIlDD.ITl11lI1ITTl:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    boolean accept(java.io.File) -> accept
    java.lang.String getDescription() -> getDescription
isf.controls.view.controls.SidToolbar$2 -> isf.controls.llID1DI.I11lIlDD.IT1llT1I1lTI:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$3 -> isf.controls.llID1DI.I11lIlDD.I1TTIllTlI:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$4 -> isf.controls.llID1DI.I11lIlDD.Il1IlTT1l1IT:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$5 -> isf.controls.llID1DI.I11lIlDD.I11IlTlI1TlT:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$6 -> isf.controls.llID1DI.I11lIlDD.l1ITTl1IlTI1:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$7 -> isf.controls.llID1DI.I11lIlDD.IlT1TI1llTI:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$8 -> isf.controls.llID1DI.I11lIlDD.TIlT1lTIIl:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.SidToolbar$9 -> isf.controls.llID1DI.I11lIlDD.T1lTlIIlT1I:
    isf.controls.view.controls.SidToolbar this$0 -> II111llT1lITITlT
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
isf.controls.view.controls.ViewDesktopButton -> isf.controls.llID1DI.I11lIlDD.TTITllII1l11:
    isf.controls.models.DesktopDataObject object -> l1IlTIlIT11TTIl
    java.awt.Dimension dim -> l11TlIlTITI1IT1l
    java.awt.Color fgColor -> II1I1IT11lTlTTll
    java.awt.Color pfg -> ll1T1ITTlIlII1T
    java.awt.Color selectedColor -> lT11l1TllTITI1II
    java.awt.Color sbgColor -> TllT1lII11lITTI
    java.awt.Color bgColor -> TIlTlTlT11I1II1l
    java.awt.Insets getInsets() -> getInsets
    java.awt.Dimension getPreferredSize() -> getPreferredSize
    void setSelected(boolean) -> setSelected
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    isf.controls.models.DesktopDataObject getObject() -> l11lIIT1TI1lITTl
isf.controls.view.gui.ISFDesktopManager -> isf.controls.llID1DI.l1ID1lDI.l1IlIlTI1T1T:
    boolean isDragging -> isDragging
    int frmWidth -> TIIl111lITITllT1
    int frmHeight -> lTlI1Il11TTlI1IT
    int FRMDIM -> llITlIT1ITIT11l1
    int noPTMS -> IlTT1llIl1TIIT11
    org.apache.log4j.Logger log -> log
    void addPTMs() -> l11I1TTlTIlIlT1I
    void closePTMs() -> IIII1lT1lT1ll1TT
    void resetPTMs() -> TITIlT111IllT1lI
    void beginDraggingFrame(javax.swing.JComponent) -> beginDraggingFrame
    void endDraggingFrame(javax.swing.JComponent) -> endDraggingFrame
    void iconifyFrame(javax.swing.JInternalFrame) -> iconifyFrame
    void maximizeFrame(javax.swing.JInternalFrame) -> maximizeFrame
    void resizeFrame(javax.swing.JComponent,int,int,int,int) -> resizeFrame
isf.controls.view.gui.InscriptListCellRenderer -> isf.controls.llID1DI.l1ID1lDI.lI1lTIIlT1T1:
    java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
isf.controls.view.gui.InscriptListCellRenderer$1 -> isf.controls.llID1DI.l1ID1lDI.Tl1l11IlIITT:
    isf.controls.view.gui.InscriptListCellRenderer this$0 -> TIllIl1ITTTI111l
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
isf.controls.view.gui.VerticalLayout -> isf.controls.llID1DI.l1ID1lDI.Il1TI1lIT1lT:
    int hy -> TI1lII1lTllT11IT
    int wx -> llIl1T1Tl1ITTII1
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    void layoutContainer(java.awt.Container) -> layoutContainer
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
isf.controls.view.listeners.ActivationListener -> isf.controls.llID1DI.llID1DI.l1IlIlTI1T1T:
    void activationChanged() -> I1TlTIl1ITTl1lI
isf.controls.view.listeners.ActiveXListener -> isf.controls.llID1DI.llID1DI.lI1lTIIlT1T1:
    void minimized(java.lang.String) -> TT1lIT1ll1ITIIl1
    void activated(java.lang.String) -> ITI1llTTI1lITl
    void deleted(java.lang.String) -> l1IlTT1lITIl1IT1
    void setNotification(java.lang.String) -> lI1I1T1ITTl1llIT
isf.controls.view.listeners.CWListener -> isf.controls.llID1DI.llID1DI.Tl1l11IlIITT:
    void buttonSelected(java.lang.String) -> IlTT11IT1ITI1lll
isf.controls.view.listeners.CursorListener -> isf.controls.llID1DI.llID1DI.Il1TI1lIT1lT:
    void changeCursor(int) -> lI1I1T1ITTl1llIT
    void changeCursor(java.awt.Cursor) -> TT1lIT1ll1ITIIl1
    java.awt.Cursor getCursor() -> getCursor
    java.awt.Rectangle getFrameBounds() -> Il11lTlITT1IlIT
isf.controls.view.listeners.ImageLoader -> isf.controls.llID1DI.llID1DI.l11lIlTTI1TI:
    javax.swing.ImageIcon loadImage(java.lang.String) -> l1IllT11TIIT1ITl
isf.controls.view.listeners.ImageLoaderListener -> isf.controls.llID1DI.llID1DI.T11ITIIllTl:
    void putImage(isf.controls.models.DesktopDataObject) -> IT11TT1lIll1ITIl
    void addDesktopData(isf.controls.models.DesktopDataObject) -> TIITI1lTlTl1Il11
    void putImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> ITI1llTTI1lITl
isf.controls.view.listeners.KeyHandler -> isf.controls.llID1DI.llID1DI.lIlIITlTT111:
    boolean trapKeys() -> IIlT1TT1l1IIl1Tl
    void fireKeyEvent(java.awt.event.KeyEvent) -> TT1lIT1ll1ITIIl1
isf.controls.view.listeners.PTMFrameChangeListener -> isf.controls.llID1DI.llID1DI.Il1TlIT1lTI1:
    void resetControls() -> IT1lTll1IT1lII1T
isf.controls.view.listeners.SizeChangeListener -> isf.controls.llID1DI.llID1DI.l1lIl1TTTI1I:
    void updateSize(java.lang.String) -> TIl1T1IlT1IIl1lT
isf.controls.view.listeners.SortListener -> isf.controls.llID1DI.llID1DI.TTl11llIITI:
    void sort(java.lang.String) -> lllITTIlTTII1111
    void resetSort() -> Tl1111TllITTIIlI
isf.controls.view.listeners.ViewDesktopListener -> isf.controls.llID1DI.llID1DI.IllTIT1l1IT1:
    java.lang.String addImage(isf.controls.models.DesktopDataObject) -> lI1I1T1ITTl1llIT
    java.lang.String addImage(isf.controls.models.DesktopDataObject,isf.ptm.formats.PTM) -> TT1lIT1ll1ITIIl1
    java.lang.String checkImage(isf.controls.models.DesktopDataObject) -> IlITlTTTl11Il1I
    void performAction(int) -> lT1lITllTTII111I
