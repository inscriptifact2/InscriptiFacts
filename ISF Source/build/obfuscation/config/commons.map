isf.common.Debug -> isf.common.l1IlIlTI1T1T:
    boolean shallDisplay -> TT1lIT1ll1ITIIl1
    void debug() -> TT1lIT1ll1ITIIl1
    void debug(java.lang.Object) -> debug
    void debug(char[]) -> TT1lIT1ll1ITIIl1
    void debug(double) -> TT1lIT1ll1ITIIl1
    void debug(float) -> TT1lIT1ll1ITIIl1
    void debug(int) -> TT1lIT1ll1ITIIl1
    void debug(long) -> TT1lIT1ll1ITIIl1
    void debug(boolean) -> TT1lIT1ll1ITIIl1
    void debug(char) -> TT1lIT1ll1ITIIl1
isf.common.FilmTypeComparator -> isf.common.lI1lTIIlT1T1:
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean check(java.lang.Object,java.lang.Object) -> TT1lIT1ll1ITIIl1
    boolean equals(java.lang.Object) -> equals
isf.common.ISFBase64 -> isf.common.Tl1l11IlIITT:
    org.apache.log4j.Logger log -> ITI1llTTI1lITl
    int NO_OPTIONS -> l1IlTT1lITIl1IT1
    int ENCODE -> lI1I1T1ITTl1llIT
    int DECODE -> IlITlTTTl11Il1I
    int GZIP -> IT11TT1lIll1ITIl
    int DONT_BREAK_LINES -> TIITI1lTlTl1Il11
    int MAX_LINE_LENGTH -> TTl1TITI1l1Il1lI
    byte EQUALS_SIGN -> IITTlT11lII1T1ll
    byte NEW_LINE -> l1IllT11TIIT1ITl
    java.lang.String PREFERRED_ENCODING -> l1lT1IlI1IlT1TIT
    byte[] ALPHABET -> IlIT1lT1TI1IlT1l
    byte[] _NATIVE_ALPHABET -> II11llTI1TlTITl1
    byte[] DECODABET -> T1TlITlIl11I1TIl
    byte BAD_ENCODING -> Il1II1TlT1llTI1T
    byte WHITE_SPACE_ENC -> lITTlIlT1IlI1T
    byte EQUALS_SIGN_ENC -> ITl1I11TIlTlTlI1
    byte[] encode3to4(byte[]) -> TT1lIT1ll1ITIIl1
    byte[] encode3to4(byte[],int) -> TT1lIT1ll1ITIIl1
    byte[] encode3to4(byte[],byte[],int) -> TT1lIT1ll1ITIIl1
    byte[] encode3to4(byte[],int,int,byte[],int) -> TT1lIT1ll1ITIIl1
    java.lang.String encodeObject(java.io.Serializable) -> TT1lIT1ll1ITIIl1
    java.lang.String encodeObject(java.io.Serializable,int) -> TT1lIT1ll1ITIIl1
    java.lang.String encodeBytes(byte[]) -> ITI1llTTI1lITl
    java.lang.String encodeBytes(byte[],int) -> ITI1llTTI1lITl
    java.lang.String encodeBytes(byte[],int,int) -> TT1lIT1ll1ITIIl1
    java.lang.String encodeBytes(byte[],int,int,int) -> TT1lIT1ll1ITIIl1
    byte[] decode4to3(byte[]) -> l1IlTT1lITIl1IT1
    int decode4to3(byte[],int,byte[],int) -> TT1lIT1ll1ITIIl1
    byte[] decode(byte[],int,int) -> ITI1llTTI1lITl
    byte[] decode(java.lang.String) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> TT1lIT1ll1ITIIl1
    java.lang.String getVal(java.lang.String) -> ITI1llTTI1lITl
    java.lang.String getQueryVal(java.lang.String) -> l1IlTT1lITIl1IT1
    byte[] access$000(byte[],byte[],int) -> ITI1llTTI1lITl
    byte[] access$100() -> access$100
    int access$200(byte[],int,byte[],int) -> ITI1llTTI1lITl
    byte[] access$300(byte[],int,int,byte[],int) -> ITI1llTTI1lITl
isf.common.ISFBase64$InputStream -> isf.common.Il1TI1lIT1lT:
    int options -> options
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> T11I1Tll1IllIITT
    int numSigBytes -> lT1lITllTTII111I
    int lineLength -> IlTT11IT1ITI1lll
    boolean breakLines -> TIl1T1IlT1IIl1lT
    int read() -> read
    int read(byte[],int,int) -> read
isf.common.ISFBase64$OutputStream -> isf.common.l11lIlTTI1TI:
    int options -> options
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> T11I1Tll1IllIITT
    int lineLength -> IlTT11IT1ITI1lll
    boolean breakLines -> TIl1T1IlT1IIl1lT
    byte[] b4 -> I1TTT1IIlTIll1l
    boolean suspendEncoding -> lllITTIlTTII1111
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> ITI1llTTI1lITl
    void close() -> close
    void suspendEncoding() -> l1IlTT1lITIl1IT1
    void resumeEncoding() -> lI1I1T1ITTl1llIT
isf.common.ISFRequestDocHandler -> isf.common.T11ITIIllTl:
    boolean boolQuery -> ITllTI1lTII11l1T
    boolean boolClause -> IITll1lI11TlTTI
    boolean boolQC -> lITT1Il1TIl1lTI
    java.lang.String typeValue -> I1TT1IIll1ll1TTI
    java.lang.String modeValue -> Tll11l1T1TITIlII
    java.lang.String sessionValue -> I1lITT1lTT11lIIl
    java.lang.String connectorValue -> TTITl1lIllI1TI11
    java.lang.String keyValue -> ITlT1IITl11l1lTI
    java.lang.String valueValue -> l1TlT1T1IlIII1Tl
    java.lang.String operatorValue -> TTT11I1lI1llTIIl
    java.lang.String connectorQCValue -> ITlT1lll1IITI1T1
    java.lang.String sqlQuery -> Il11lTlITT1IlIT
    java.lang.String temp -> TIl1TTIIT11I1lll
    isf.common.xml.Query query -> llITlIlTI11T11IT
    java.util.Vector clausesVector -> IT11TTIllIIl1T1l
    java.util.Vector clausesFinalVector -> TIlTl1I1Il11TIlT
    java.util.Vector qcVector -> llT1lIITlIT11IT1
    java.util.Vector qcFinalVector -> T11TlTlTIlIlI1I
    isf.common.jro.JavaRequestObject jreq -> lIIT1TI11Tl1lITl
    isf.common.xml.Clause clause -> ITTTT11lIIIlll11
    isf.common.xml.QueryCondition qc -> TTIlIIlTI1l11lT
    org.apache.log4j.Logger log -> ITI1llTTI1lITl
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,org.xml.sax.AttributeList) -> startElement
    void endElement(java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void error(org.xml.sax.SAXParseException) -> error
    void warning(org.xml.sax.SAXParseException) -> warning
    isf.common.jro.JavaRequestObject returnRequestObject() -> IlITlTTTl11Il1I
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void skippedEntity(java.lang.String) -> skippedEntity
isf.common.MagnificationComparator -> isf.common.lIlIITlTT111:
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean check(java.lang.Object,java.lang.Object) -> TT1lIT1ll1ITIIl1
    boolean equals(java.lang.Object) -> equals
isf.common.PhotoDateComparator -> isf.common.Il1TlIT1lTI1:
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean check(java.lang.Object,java.lang.Object) -> TT1lIT1ll1ITIIl1
    boolean equals(java.lang.Object) -> equals
isf.common.TextPublicationComparator -> isf.common.l1lIl1TTTI1I:
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
isf.common.XMLProcessorObject -> isf.common.TTl11llIITI:
    org.apache.log4j.Logger log -> ITI1llTTI1lITl
    isf.common.jro.JavaRequestObject getJavaRequest(java.lang.String) -> lI1I1T1ITTl1llIT
isf.common.jro.JavaRequestObject -> isf.common.l11lIBBI.l1IlIlTI1T1T:
    isf.common.xml.Query query -> llITlIlTI11T11IT
    void setQuery(isf.common.xml.Query) -> TT1lIT1ll1ITIIl1
    isf.common.xml.Query getQuery() -> IT11TT1lIll1ITIl
    java.lang.String getXML() -> TIITI1lTlTl1Il11
isf.common.request.ImageRequestProxy -> isf.common.I11lIlBB.l1IlIlTI1T1T:
    javax.swing.ImageIcon fetchImage(java.lang.String) -> IlITlTTTl11Il1I
    java.lang.Object getImageProperties(java.lang.String) -> IT11TT1lIll1ITIl
    java.lang.String saveFile(java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
isf.common.request.PTMRequestProxy -> isf.common.I11lIlBB.lI1lTIIlT1T1:
    byte[] getImageCoeff(java.lang.String,int,int,int) -> TT1lIT1ll1ITIIl1
isf.common.request.RequestDispatcherProxy -> isf.common.I11lIlBB.Tl1l11IlIITT:
    java.lang.String sessionid -> lITTT1lIlI1lTI
    java.lang.Object handleQueryEvent(java.lang.String) -> TIITI1lTlTl1Il11
    javax.swing.ImageIcon fetchImage(java.lang.String) -> IlITlTTTl11Il1I
    java.lang.Object getImageProperties(java.lang.String) -> IT11TT1lIll1ITIl
    java.lang.String saveFile(java.lang.String,java.lang.String) -> TT1lIT1ll1ITIIl1
    int checkConnection() -> TTl1TITI1l1Il1lI
    isf.common.utils.PTMConfig getPTMConfig(java.lang.String) -> TTl1TITI1l1Il1lI
isf.common.request.RequestProxy -> isf.common.I11lIlBB.Il1TI1lIT1lT:
    isf.common.request.RequestDispatcherProxy rdp -> T1TllIll1T1II1IT
    isf.common.request.ImageRequestProxy irp -> ITlTTIlII11T1ll1
    isf.common.request.PTMRequestProxy prp -> TITlT1lIlTI1l1I
    isf.common.request.RequestDispatcherProxy getRequestDispatcher() -> IITTlT11lII1T1ll
    isf.common.request.ImageRequestProxy getImageRequestProxy() -> l1IllT11TIIT1ITl
    isf.common.request.PTMRequestProxy getPTMRequestProxy() -> l1lT1IlI1IlT1TIT
isf.common.utils.CacheManagerConstants -> isf.common.utils.l1IlIlTI1T1T:
    java.lang.String folderName -> IT1lTll1IT1lII1T
    java.lang.String cacheFolderName -> TlTI11TIT1lIIll
    java.lang.String logFolderName -> IllTT1IITl11lT1I
    int folderSize -> I111IITI1TlllTTl
    java.lang.String cacheEntriesFile -> llTTI111lI1IITlT
isf.common.utils.CacheManagerConstants$Initial -> isf.common.utils.lI1lTIIlT1T1:
    java.lang.String getFolderName() -> IlIT1lT1TI1IlT1l
    java.lang.String getCacheFolderName() -> II11llTI1TlTITl1
    java.lang.String getLogFolderName() -> T1TlITlIl11I1TIl
isf.common.utils.InscriptConfigLoader -> isf.common.utils.InscriptConfigLoader:
    java.util.Properties p -> I1TTlI1IT1l1lIlT
    isf.common.utils.InscriptConfigLoader icl -> TlIlTTlIIIlT111
    org.apache.log4j.Logger log -> ITI1llTTI1lITl
    isf.common.utils.InscriptConfigLoader initialize(java.lang.String) -> initialize
    isf.common.utils.InscriptConfigLoader getInstance() -> getInstance
    void load(java.lang.String) -> load
    java.lang.String getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.String) -> setProperty
isf.common.utils.LogManager -> isf.common.utils.LogManager:
    org.apache.log4j.Logger getLogger(java.lang.String) -> getLogger
    org.apache.log4j.Logger getLogger(java.lang.Class) -> getLogger
isf.common.utils.LogoutListener -> isf.common.utils.Tl1l11IlIITT:
    void loggedout(java.lang.String) -> IITTlT11lII1T1ll
    void disconnected() -> Il1II1TlT1llTI1T
    void raiseError(java.lang.String) -> l1IllT11TIIT1ITl
isf.common.utils.PTMConfig -> isf.common.utils.Il1TI1lIT1lT:
    java.lang.String name -> name
    int type -> type
    int basistype -> T11IITlllTT1IlI1
    java.lang.String version -> version
    java.lang.String cached -> l11TTIl11lITIlIT
    int rows -> rows
    int columns -> columns
    int segmentSize -> Il1I1llTTlI1TIT
    int width -> width
    int height -> height
    float[] bias -> IIllII1TlTTT11l1
    float[] scale -> l1lTlT11ITlI1IIT
    long size -> size
    int colors -> ll1TIIIT1lT1TIl1
    int terms -> TIT1ITlI1lIl1lT1
    int elements -> TlII1ITllTlIT
    java.lang.String extension -> extension
    void writeObject(java.io.ObjectOutputStream) -> TT1lIT1ll1ITIIl1
    void readObject(java.io.ObjectInputStream) -> TT1lIT1ll1ITIIl1
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getExtension() -> getExtension
    void setExtension(java.lang.String) -> l1lT1IlI1IlT1TIT
    java.lang.String getCached() -> lITTlIlT1IlI1T
    void setCached(java.lang.String) -> IlIT1lT1TI1IlT1l
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    float[] getBias() -> ITl1I11TIlTlTlI1
    void setBias(float[]) -> TT1lIT1ll1ITIIl1
    float[] getScale() -> T11I1Tll1IllIITT
    void setScale(float[]) -> ITI1llTTI1lITl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getRows() -> getRows
    void setRows(int) -> setRows
    int getColumns() -> getColumns
    void setColumns(int) -> setColumns
    int getSegmentSize() -> lT1lITllTTII111I
    void setSegmentSize(int) -> ITI1llTTI1lITl
    java.lang.String getExt() -> IlTT11IT1ITI1lll
    int getBasistype() -> TIl1T1IlT1IIl1lT
    void setBasistype(int) -> l1IlTT1lITIl1IT1
    int getColors() -> I1TTT1IIlTIll1l
    void setColors(int) -> lI1I1T1ITTl1llIT
    int getTerms() -> lllITTIlTTII1111
    void setTerms(int) -> IlITlTTTl11Il1I
    int getElements() -> ITllTI1lTII11l1T
    void setElements(int) -> IT11TT1lIll1ITIl
isf.common.utils.PriorityThreadFactory -> isf.common.utils.l11lIlTTI1TI:
    int priority -> priority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
isf.common.utils.SegmentUtils -> isf.common.utils.T11ITIIllTl:
    int row -> row
    int col -> col
    int band -> TIIlT111IITTll1l
    int bandTile -> III1Tl1lTllTIT11
    int size -> size
    java.lang.String name -> name
    int getRow() -> getRow
    void setRow(int) -> setRow
    int getCol() -> IITll1lI11TlTTI
    void setCol(int) -> TIITI1lTlTl1Il11
    int getBand() -> lITT1Il1TIl1lTI
    void setBand(int) -> TTl1TITI1l1Il1lI
    int getBandTile() -> I1TT1IIll1ll1TTI
    void setBandTile(int) -> IITTlT11lII1T1ll
    int getSize() -> getSize
    void setSize(int) -> setSize
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
isf.common.utils.ThreadExecutor -> isf.common.utils.lIlIITlTT111:
    isf.common.utils.ThreadExecutor executor -> lIT1T1lIlT1ITIl
    java.util.concurrent.ExecutorService threadPool -> ITlIIl1TT1Tl1lI
    java.util.concurrent.ExecutorService priorityPool -> Il1TTlI1lIIlT1T
    int count -> count
    isf.common.utils.ThreadExecutor getInstance() -> Tll11l1T1TITIlII
    void execute(java.lang.Runnable,boolean) -> TT1lIT1ll1ITIIl1
    void shutdown() -> shutdown
isf.common.view.gui.SpatialListImage -> isf.common.l1IB1lBI.l11lIBBI.l1IlIlTI1T1T:
    java.lang.String getTextView() -> I1lITT1lTT11lIIl
    java.lang.String getTitle() -> getTitle
    javax.swing.ImageIcon getTextViewImage() -> TTITl1lIllI1TI11
    java.lang.String getIndexMapName() -> ITlT1IITl11l1lTI
    void setTextView(java.lang.String) -> II11llTI1TlTITl1
    void setTitle(java.lang.String) -> setTitle
    void setTextViewImage(javax.swing.ImageIcon) -> TT1lIT1ll1ITIIl1
    void setIndexMapName(java.lang.String) -> T1TlITlIl11I1TIl
isf.common.view.gui.TextDivision -> isf.common.l1IB1lBI.l11lIBBI.lI1lTIIlT1T1:
    java.lang.String isfAssignedTextNo -> I11lT1lTlIIl1TIT
    java.lang.String maintextpubno -> IITlTllI1TTI11l
    java.lang.String indexmapfilename -> TIlll1TI1lITT1I
    java.lang.String sscode -> l1Il1TTIITIl1Tl
    java.lang.String textdesctitle -> I1ll11TlTIITlT1I
    java.lang.String textdivname -> IlI1Il1T1TlTITl1
    java.lang.String textdivdesc -> TI1T1llllTII1IT1
    java.lang.String textdivmuseumno -> Il1Tl1IT1T1IlTIl
    java.lang.String textview -> llTIT11ITl1I1TlI
    java.util.Vector textdivsubdivs -> llll1IITTT1IT1I1
    void setIsfAssignedTextNo(java.lang.String) -> Il1II1TlT1llTI1T
    java.lang.String getIsfAssignedTextNo() -> l1TlT1T1IlIII1Tl
    void setMainTextPubNo(java.lang.String) -> lITTlIlT1IlI1T
    java.lang.String getMainTextPubNo() -> TTT11I1lI1llTIIl
    void setIndexMapFileName(java.lang.String) -> ITl1I11TIlTlTlI1
    java.lang.String getIndexMapFileName() -> ITlT1lll1IITI1T1
    void setSpatialSearchCode(java.lang.String) -> T11I1Tll1IllIITT
    java.lang.String getSpatialSearchCode() -> Il11lTlITT1IlIT
    void setTextDescTitle(java.lang.String) -> lT1lITllTTII111I
    java.lang.String getTextDescTitle() -> TIl1TTIIT11I1lll
    void setTextDivisionName(java.lang.String) -> IlTT11IT1ITI1lll
    java.lang.String getTextDivisionName() -> llITlIlTI11T11IT
    void setTextDivisionDesc(java.lang.String) -> TIl1T1IlT1IIl1lT
    java.lang.String getTextDivisionDesc() -> IT11TTIllIIl1T1l
    void setTextDivisionMuseumNo(java.lang.String) -> I1TTT1IIlTIll1l
    java.lang.String getTextDivisionMuseumNo() -> TIlTl1I1Il11TIlT
    void setTextView(java.lang.String) -> II11llTI1TlTITl1
    java.lang.String getTextView() -> I1lITT1lTT11lIIl
    void setTextDivisionSubDivisions(java.util.Vector) -> TT1lIT1ll1ITIIl1
    java.util.Vector getTextDivisionSubDivisions() -> llT1lIITlIT11IT1
    java.lang.String toString() -> toString
isf.common.view.gui.TextDivisionSubDivision -> isf.common.l1IB1lBI.l11lIBBI.Tl1l11IlIITT:
    java.lang.String isfAssignedTextNo -> I11lT1lTlIIl1TIT
    java.lang.String maintextpubno -> IITlTllI1TTI11l
    java.lang.String sscode -> l1Il1TTIITIl1Tl
    java.lang.String textdivname -> IlI1Il1T1TlTITl1
    java.lang.String textdivsubdivname -> I1TTlTl11llT1III
    java.lang.String textdesctitle -> I1ll11TlTIITlT1I
    void setIsfAssignedTextNo(java.lang.String) -> Il1II1TlT1llTI1T
    java.lang.String getIsfAssignedTextNo() -> l1TlT1T1IlIII1Tl
    void setMainTextPubNo(java.lang.String) -> lITTlIlT1IlI1T
    java.lang.String getMainTextPubNo() -> TTT11I1lI1llTIIl
    void setSpatialSearchCode(java.lang.String) -> T11I1Tll1IllIITT
    java.lang.String getSpatialSearchCode() -> Il11lTlITT1IlIT
    void setTextDivisionName(java.lang.String) -> IlTT11IT1ITI1lll
    java.lang.String getTextDivisionName() -> llITlIlTI11T11IT
    void setTextDescTitle(java.lang.String) -> lT1lITllTTII111I
    java.lang.String getTextDescTitle() -> TIl1TTIIT11I1lll
    void setTextDivisionSubDivisionName(java.lang.String) -> lllITTIlTTII1111
    java.lang.String getTextDivisionSubDivisionName() -> T11TlTlTIlIlI1I
    java.lang.String toString() -> toString
isf.common.xml.Clause -> isf.common.llIB1BI.l1IlIlTI1T1T:
    java.util.Vector clausesVector -> IT11TTIllIIl1T1l
    void addClause(isf.common.xml.Clause) -> TT1lIT1ll1ITIIl1
    java.util.Vector getClauses() -> lIIT1TI11Tl1lITl
    void addQueryCondition(isf.common.xml.QueryCondition) -> TT1lIT1ll1ITIIl1
    java.lang.String getXML() -> TIITI1lTlTl1Il11
isf.common.xml.Query -> isf.common.llIB1BI.lI1lTIIlT1T1:
    java.util.Vector q -> IT11l1lTIlII1TTl
    java.lang.String type -> type
    java.lang.String mode -> IT11l1lTTI1lTIlI
    java.lang.String sessionid -> lITTT1lIlI1lTI
    void add(isf.common.xml.QueryCondition) -> ITI1llTTI1lITl
    void setQueryConditions(java.util.Vector) -> ITI1llTTI1lITl
    java.util.Vector getQueryConditions() -> ITTTT11lIIIlll11
    void setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    void setMode(java.lang.String) -> ITllTI1lTII11l1T
    java.lang.String getMode() -> TTIlIIlTI1l11lT
    void setSessionid(java.lang.String) -> IITll1lI11TlTTI
    java.lang.String getSessionid() -> lITTT1lIlI1lTI
    java.lang.String getXML() -> TIITI1lTlTl1Il11
isf.common.xml.QueryCondition -> isf.common.llIB1BI.Tl1l11IlIITT:
    java.util.Vector queryConditions -> ITIlTITl111TlIl
    java.lang.String key -> key
    java.lang.String value -> value
    java.lang.String operator -> TIl1TT1lTI1I1Ill
    java.lang.String connector -> I1Tlll1TTTI1Il1I
    void addQueryCondition(isf.common.xml.QueryCondition) -> TT1lIT1ll1ITIIl1
    java.lang.String getKey() -> getKey
    java.lang.String getValue() -> getValue
    java.lang.String getOperator() -> T1TllIll1T1II1IT
    java.lang.String getConnector() -> ITlTTIlII11T1ll1
    java.util.Vector getQueryConditions() -> ITTTT11lIIIlll11
    java.lang.String getXML() -> TIITI1lTlTl1Il11
